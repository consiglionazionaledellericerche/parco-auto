{"version":3,"sources":["ng://@ng-bootstrap/ng-bootstrap/util/util.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","null","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng://@ng-bootstrap/ng-bootstrap/util/key.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng://@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng://@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/popup.ts","ng://@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng://@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://@ng-bootstrap/ng-bootstrap/index.ts"],"names":["toInteger","value","parseInt","toString","undefined","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","Injectable","args","providedIn","nextId","NgbPanelTitle","templateRef","this","Directive","selector","TemplateRef","NgbPanelContent","NgbPanel","prototype","ngAfterContentChecked","titleTpl","titleTpls","first","contentTpl","contentTpls","Input","ContentChildren","descendants","NgbAccordion","config","EventEmitter","type","closeOtherPanels","closeOthers","toggle","panelId","panel","panels","find","p","id","disabled","defaultPrevented_1","panelChange","emit","nextState","isOpen","preventDefault","_closeOthers","_updateActiveIds","_this","activeIds","split","forEach","indexOf","length","filter","map","Component","exportAs","host","class","role","[attr.aria-multiselectable]","template","NgbAccordionConfig","Output","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","forRoot","ngModule","NgModule","declarations","exports","imports","CommonModule","NgbAlert","_renderer","_element","dismissible","closeHandler","close","ngOnChanges","changes","typeChange","firstChange","removeClass","nativeElement","previousValue","addClass","currentValue","ngOnInit","changeDetection","ChangeDetectionStrategy","OnPush","[class.alert-dismissible]","styles","NgbAlertConfig","Renderer2","ElementRef","NgbAlertModule","entryComponents","NgbButtonLabel","[class.btn]","[class.active]","[class.disabled]","[class.focus]","NGB_CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NgbCheckBox","multi","_label","_","Object","defineProperty","isFocused","focused","onTouched","onInputChange","$event","modelToPropagate","target","checked","valueChecked","valueUnChecked","onChange","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","autocomplete","[checked]","[disabled]","(change)","(focus)","(blur)","providers","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","Set","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","_radios","add","_updateRadiosDisabled","unregister","delete","_value","updateValue","updateDisabled","NgbRadio","_group","stringValue","setProperty","_checked","name","ngOnDestroy","[name]","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbSlide","tplRef","NgbCarousel","_platformId","_ngZone","_cd","Subject","interval","wrap","keyboard","pauseOnHover","showNavigationArrows","showNavigationIndicators","ngAfterContentInit","isPlatformBrowser","runOutsideAngular","_start$","pipe","switchMap","timer","takeUntil","_stop$","subscribe","run","next","detectChanges","activeSlide","_getSlideById","activeId","slides","isFirstChange","select","slideId","_cycleToSelected","_getSlideEventDirection","prev","_getPrevSlide","NgbSlideEventDirection","RIGHT","_getNextSlide","LEFT","pause","cycle","slideIdx","direction","selectedSlide","slide","current","currentActiveSlideId","nextActiveSlideId","currentActiveSlideIdx","_getSlideIdxById","toArray","currentSlideId","slideArr","currentSlideIdx","[style.display]","tabIndex","(mouseenter)","(mouseleave)","(keydown.arrowLeft)","(keydown.arrowRight)","NgbCarouselConfig","Inject","PLATFORM_ID","NgZone","ChangeDetectorRef","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","[class.collapse]","[class.show]","NgbCollapseModule","NgbCollapse","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","done","push","error","NgbDate","year","month","day","from","date","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","tslib_1.__extends","NgbCalendarGregorian","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","number","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","setMonth","round","getToday","isValid","NgbCalendar","isChangedDate","dateComparator","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","i18n","force","displayMonths","months","monthsToReuse","splice","firstDate","reusedIndex","findIndex","buildMonth","outsideDays","lastDate","weeks","weekdays","getFirstViewDate","daysPerWeek","firstMonthDate","dayOfWeek","weekObject","days","collapsed","newDate","nextDate","ariaLabel","getDayAriaLabel","dayObject","context","assign","currentMonth","selected","tabindex","hidden","shift","NgbDatepickerI18n","getDayNumerals","getWeekNumerals","weekNumber","getYearNumerals","NgbDatepickerI18nDefault","_locale","_super","weekdaysStartingOnSunday","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Short","_weekdaysShort","index","_monthsShort","getLocaleMonthNames","Abbreviated","_monthsFull","Wide","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","formatDate","LOCALE_ID","NgbDatepickerService","_calendar","_i18n","focusVisible","navigation","prevDisabled","nextDisabled","selectBoxes","years","selectedDate","_model$","model","_select$","_state","_nextState","toValidDate","focus","focusDate","focusMove","focusSelect","emitEvent","open","options","defaultValue","ngbDate","patch","newState","_updateState","_patchContexts","startDate","checkMinBeforeMax","Error","forceRebuild","yearChanged","monthChanged","generateSelectBoxYears","start","end","generateSelectBoxMonths","prevMonthDisabled","prevDate","nextMonthDisabled","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","NgbDatepickerKeyMapService","_service","model$","_minDate","_maxDate","_firstViewDate","_lastViewDate","processKey","event","Key","which","shiftKey","stopPropagation","PREV","NEXT","NgbDateStructAdapter","fromModel","toModel","NgbDateAdapter","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","_keyMapService","_elementRef","_ngbDateAdapter","input","_selectSubscription","select$","_subscription","oldDate","newSelectedDate","oldSelectedDate","newFocusedDate","oldFocusedDate","navigate","markForCheck","onStable","asObservable","take","elementToFocus","querySelector","navigateTo","__assign","t","s","arguments","apply","unsubscribe","onDateSelect","onKeyDown","onNavigateDateSelect","onNavigateEvent","NavigationEvent","showFocus","NgbDatepickerConfig","NgbDatepickerMonthView","doSelect","NgbDatepickerNavigation","NgbDateParserFormatter","NgbDateISOParserFormatter","parse","dateParts","trim","format","positionService","Positioning","getAllStyles","element","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","document","documentElement","position","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","appendToBody","hostElPosition","targetElStyles","targetElBCR","placementPrimary","placementSecondary","targetElPosition","parseFloat","marginBottom","marginRight","getAvailablePlacements","availablePlacements","hostElemClientRect","targetElemClientRect","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","hostElemClientRectHorCenter","hostElemClientRectVerCenter","setSecondaryPlacementForLeftRight","setSecondaryPlacementForTopBottom","primaryPlacement","availablePlacementArr","placementVals","isArray","hasAuto","val","obj","search","appliedPlacement","topVal","leftVal","item","pos","_a","__values","tslib_1.__values","toItemIndexes","a","_b","_c","style","FOCUSABLE_ELEMENTS_SELECTOR","join","ngbFocusTrap","stopFocusTrap$","lastFocusedElement$","fromEvent","withLatestFrom","tabEvent","focusedElement","getFocusableBoundaryElements","list","querySelectorAll","last","arr","lastFocusedElement","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","NG_VALIDATORS","_parserFormatter","_elRef","_vcRef","_cfr","_dateAdapter","_document","_zoneSubscription","_cRef","location","container","instance","_onChange","_onTouched","registerOnValidatorChange","_validatorChange","validate","c","_fromDateStruct","requiredBefore","requiredAfter","invalid","_model","_writeModelValue","manualDateChange","updateView","cf","resolveComponentFactory","createComponent","_applyPopupStyling","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","appendChild","_closed$","outsideClicks$","escapes$","autoClose","isOpening_1","requestAnimationFrame","_shouldCloseOnOutsideClick","NEVER","race","remove","hostView","onBlur","datepickerInstance","optionName","setStyle","some","el","contains","dateSelect","(input)","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","NgbDatepickerNavigationSelect","changeMonth","changeYear","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isGregorianLeapYear","gDate","mod","GREGORIAN_EPOCH","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","hYear","hMonth","ceil","getIslamicYearStart","hDay","getIslamicMonthStart","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","isIslamicLeapYear","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","MONTH_LENGTH","NgbCalendarIslamicUmalqura","daysDiff","getDaysDiff","date1","date2","diff","abs","j","numOfDays","dayDiff","y","NgbDateNativeAdapter","jalaliDate","julianToGregorian","jalaliToJulian","jYear","jMonth","jDay","jalCal","gregorianToJulian","gy","march","div","setHours","gdate","julianToJalali","julianDayNumber","jalaliDay","jalaliMonth","numberOfDays","jalaliYear","gregorianDay","leap","setJalaliMonth","mod$1","trunc","jump","breaks","breaksLength","leapJ","jp","jm","gm","gd","NgbCalendarPersian","setJalaliYear","yearValue","setJalaliDay","NgbDatepickerModule","FormsModule","useClass","NgbDropdownMenu","dropdown","isEventFrom","triggerEl","applyPlacement","_placement","parentNode","[class.dropdown-menu]","[attr.x-placement]","NgbDropdown","NgbDropdownAnchor","anchorEl","aria-haspopup","[attr.aria-expanded]","NgbDropdownToggle","elementRef","toggleOpen","(click)","_changeDetector","_positionMenu","_menu","_open","_setCloseHandlers","openChange","clicks$","_shouldCloseFromClick","button","_isEventFromToggle","_isEventFromMenu","_anchor","NgbDropdownConfig","ContentChild","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbModalBackdrop","[class]","BACKDROP_CLICK","ESC","NgbModalWindow","dismissEvent","backdropClick","backdrop","dismiss","ModalDismissReasons","escKey","defaultPrevented","reason","_elWithFocus","activeElement","body","ngAfterViewInit","elWithFocus","(keyup.esc)","[attr.aria-labelledby]","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","content","_windowRef","_contentRef","_getContentRef","createEmbeddedView","rootNodes","createText","noop","ScrollBar","compensate","_isPresent","_adjustBody","_getWidth","userSetPadding","paddingRight","paddingAmount","rect","measurer","createElement","className","removeChild","NgbActiveModal","result","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","destroy","backdropNativeEl","NgbModalStack","_applicationRef","_scrollBar","moduleCFR","contentInjector","containerEl","revertPaddingForScrollBar","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_applyWindowOptions","_applyBackdropOptions","attachView","windowInstance","_windowAttributes","backdropInstance","_backdropAttributes","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","contentCmptFactory","modalContentInjector","Injector","useValue","parent","ApplicationRef","NgbModal","_moduleCFR","_modalStack","NgbModalModule","NgbPagination","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","size","hasPrevious","page","hasNext","pageCount","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","pages","unshift","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","pageChange","newPage","NgbPaginationConfig","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","noopFn","listenToTriggers","renderer","triggers","openFn","closeFn","toggleFn","parsedTriggers","parseTriggers","aliases","trimmedTriggers","trigger","triggerPair","alias","manualTriggers","listeners","listen","unsubscribeFn","NgbPopoverWindow","[id]","NgbPopover","componentFactoryResolver","viewContainerRef","disablePopover","popoverClass","_popupService","_isDisabled","ngbPopover","popoverTitle","title","_ngbPopoverWindowId","setAttribute","justOpened","shown","removeAttribute","_unregisterListenersFn","bind","_isEventFromPopover","popup","NgbPopoverConfig","NgbPopoverModule","NgbProgressbar","animated","striped","showValue","getValue","getPercentValue","NgbProgressbarConfig","NgbProgressbarModule","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","readonly","ariaValueText","nextRate","enter","handleBlur","handleClick","update","resettable","rate","handleKeyDown","contexts","v","k","fill","reset","leave","internalChange","newRate","rateChange","_getFillValue","Number","toFixed","nextValue","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","[attr.aria-disabled]","(keydown)","NgbRatingConfig","NgbRatingModule","NgbTabTitle","NgbTabContent","NgbTab","NgbTabset","justify","orientation","justifyClass","tabId","selectedTab","_getTabById","tabChange","activeTab","tabs","tabsWithId","tab","NgbTabsetConfig","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbTime","hour","minute","second","changeHour","step","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatHour","formatMinSec","setFormControlSize","form-control-sm","form-control-lg","setButtonSize","btn-sm","btn-lg","touched","NgbTimepickerConfig","NgbTimepickerModule","NgbTooltipWindow","NgbTooltip","disableTooltip","_ngbTooltip","_ngbTooltipWindowId","_isEventFromTooltip","NgbTooltipConfig","NgbTooltipModule","NgbHighlight","resultStr","resultLC","toLowerCase","termLC","term","currentIdx","parts","RegExp","regExpEscape","text","replace","part","originalPart","substr","NgbTypeaheadWindow","hasActive","activeIdx","results","getActive","markActive","_activeChanged","focusFirst","resetActive","selectEvent","activeChangeEvent","ARIA_LIVE_DELAY","InjectionToken","factory","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","classList","Live","_delay","parentElement","say","message","delay","textContent","setText","setTimeout","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","ngZone","_live","editable","showHint","_valueChanges","_resubscribeTypeahead","BehaviorSubject","isPopupOpen","processedResults$","tap","_inputValueBackup","ngbTypeahead","userInput$","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","onDocumentClick","dismissPopup","_showHint","_selectResult","_openPopup","popupId","_selectResultClosePopup","activeDescendant","selectItem","userInputLowerCase","formattedVal","inputFormatter","resultFormatter","formatter","resultTemplate","count","[class.open]","(document:click)","[autocomplete]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","NgbTypeaheadConfig","NgbTypeaheadModule","NGB_MODULES","NgbModule","NgbRootModule"],"mappings":"kcAAA,SAAAA,EAA0BC,GACxB,OAAOC,SAAS,GAAGD,EAAS,IAG9B,SAAAE,EAAyBF,GACvB,OAAQA,IAAUG,WAAuB,OAAVH,EAAkB,GAAGA,EAAU,GAGhE,SAAAI,EAAgCJ,EAAeK,EAAaC,GAC1D,YAD0D,IAAAA,IAAAA,EAAA,GACnDC,KAAKF,IAAIE,KAAKD,IAAIN,EAAOK,GAAMC,GAGxC,SAAAE,EAAyBR,GACvB,MAAwB,iBAAVA,EAGhB,SAAAS,EAAyBT,GACvB,OAAQU,MAAMX,EAAUC,IAG1B,SAAAW,EAA0BX,GACxB,MAAwB,iBAAVA,GAAsBY,SAASZ,IAAUO,KAAKM,MAAMb,KAAWA,EAG/E,SAAAc,EAA0Bd,GACxB,OAAOA,IAAUG,WAAuB,OAAVH,EAGhC,SAAAe,EAA0Bf,GACxB,OAAIS,EAAST,IACJ,IAAIA,GAAQgB,OAAO,GAEnB,mDCvBK,6BAFfC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHCSrBC,EAAS,eAOX,SAAAC,EAAmBC,GAAAC,KAAAD,YAAAA,6BAFpBE,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,0EAZpBC,EAAAA,iCAsBA,SAAAC,EAAmBL,GAAAC,KAAAD,YAAAA,6BAFpBE,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,4EApBpBC,EAAAA,6DAmCoB,UAMN,aAAaN,iBAKlB,SAoBTQ,EAAAC,UAAAC,sBAAA,WAKEP,KAAKQ,SAAWR,KAAKS,UAAUC,MAC/BV,KAAKW,WAAaX,KAAKY,YAAYF,2BA3CtCT,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,kDAMnBW,EAAAA,kBAMAA,EAAAA,qBAUAA,EAAAA,oBAOAA,EAAAA,yBAKAC,EAAAA,gBAAenB,KAAA,CAACG,EAAe,CAACiB,aAAa,yBAC7CD,EAAAA,gBAAenB,KAAA,CAACS,EAAiB,CAACW,aAAa,yBA2FhD,SAAAC,EAAYC,kBAxB4B,uBAUf,mBAYD,IAAIC,EAAAA,aAG1BlB,KAAKmB,KAAOF,EAAOE,KACnBnB,KAAKoB,iBAAmBH,EAAOI,mBAMjCL,EAAAV,UAAAgB,OAAA,SAAOC,GACL,IAAMC,EAAQxB,KAAKyB,OAAOC,KAAK,SAAAC,GAAK,OAAAA,EAAEC,KAAOL,IAE7C,GAAIC,IAAUA,EAAMK,SAAU,CAC5B,IAAIC,GAAmB,EAEvB9B,KAAK+B,YAAYC,KACb,CAACT,QAASA,EAASU,WAAYT,EAAMU,OAAQC,eAAgB,WAAQL,GAAmB,KAEvFA,IACHN,EAAMU,QAAUV,EAAMU,OAElBlC,KAAKoB,kBACPpB,KAAKoC,aAAab,GAEpBvB,KAAKqC,sBAKXrB,EAAAV,UAAAC,sBAAA,WAAA,IAAA+B,EAAAtC,KAEMf,EAASe,KAAKuC,aAChBvC,KAAKuC,UAAYvC,KAAKuC,UAAUC,MAAM,YAIxCxC,KAAKyB,OAAOgB,QAAQ,SAAAjB,GAAS,OAAAA,EAAMU,QAAUV,EAAMK,WAAgD,EAApCS,EAAKC,UAAUG,QAAQlB,EAAMI,MAGhE,EAAxB5B,KAAKuC,UAAUI,QAAc3C,KAAKoB,mBACpCpB,KAAKoC,aAAapC,KAAKuC,UAAU,IACjCvC,KAAKqC,qBAIDrB,EAAAV,UAAA8B,sBAAab,GACnBvB,KAAKyB,OAAOgB,QAAQ,SAAAjB,GACdA,EAAMI,KAAOL,IACfC,EAAMU,QAAS,MAKblB,EAAAV,UAAA+B,4BACNrC,KAAKuC,UAAYvC,KAAKyB,OAAOmB,OAAO,SAAApB,GAAS,OAAAA,EAAMU,SAAWV,EAAMK,WAAUgB,IAAI,SAAArB,GAAS,OAAAA,EAAMI,0BA5GpGkB,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,gBACV6C,SAAU,eACVC,KAAM,CAACC,QAAS,YAAaC,KAAQ,UAAWC,8BAA+B,qBAC/EC,SAAU,ojCAnGJC,qCAyHLvC,EAAAA,gBAAenB,KAAA,CAACU,sBAKhBQ,EAAAA,gCAKAA,EAAAA,MAAKlB,KAAA,CAAC,sCAKNkB,EAAAA,oBAOAA,EAAAA,2BAKAyC,EAAAA,eC1JGC,EAA2B,CAACvC,EAAcX,EAAUP,EAAeM,qCAUhEoD,EAAAC,QAAP,WAAwC,MAAO,CAACC,SAAUF,wBAR3DG,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAcL,EAA0BM,QAASN,EAA0BO,QAAS,CAACC,EAAAA,mECDhF,YACP,qCAHRrE,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kIC6CvB,SAAAoE,EAAY/C,EAAgCgD,EAA8BC,GAA9BlE,KAAAiE,UAAAA,EAA8BjE,KAAAkE,SAAAA,aAFxD,IAAIhD,EAAAA,aAGpBlB,KAAKmE,YAAclD,EAAOkD,YAC1BnE,KAAKmB,KAAOF,EAAOE,YAGrB6C,EAAA1D,UAAA8D,aAAA,WAAiBpE,KAAKqE,MAAMrC,KAAK,OAEjCgC,EAAA1D,UAAAgE,YAAA,SAAYC,GACV,IAAMC,EAAaD,EAAc,KAC7BC,IAAeA,EAAWC,cAC5BzE,KAAKiE,UAAUS,YAAY1E,KAAKkE,SAASS,cAAe,SAASH,EAAWI,eAC5E5E,KAAKiE,UAAUY,SAAS7E,KAAKkE,SAASS,cAAe,SAASH,EAAWM,gBAI7Ed,EAAA1D,UAAAyE,SAAA,WAAa/E,KAAKiE,UAAUY,SAAS7E,KAAKkE,SAASS,cAAe,SAAS3E,KAAKmB,2BAjDjF2B,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,YACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzClC,KAAM,CAACE,KAAQ,QAASD,QAAS,QAASkC,4BAA6B,eACvE/B,SAAU,2PAOVgC,OAAQ,CAAC,gGAhBHC,SAPNC,EAAAA,iBACAC,EAAAA,mDAkCC1E,EAAAA,oBAKAA,EAAAA,qBAIAyC,EAAAA,eClDHkC,EAAA,gCAgBSA,EAAA/B,QAAP,WAAwC,MAAO,CAACC,SAAU8B,wBAR3D7B,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAc,CAACI,GAAWH,QAAS,CAACG,GAAWF,QAAS,CAACC,EAAAA,cAAe0B,gBAAiB,CAACzB,SARrG,GCAA0B,EAAA,oDAECzF,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,mBACV8C,KACI,CAAC2C,cAAe,OAAQC,iBAAkB,SAAUC,mBAAoB,WAAYC,gBAAiB,iBAL3G,GCKMC,EAA8B,CAClCC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAC,IAC9BC,OAAO,gBAgDP,SAAAD,EAAoBE,GAAAtG,KAAAsG,OAAAA,iBAtBA,qBAKI,uBAKE,gBAEf,SAACC,oBACA,oBAEZC,OAAAC,eAAIL,EAAA9F,UAAA,UAAO,KAAX,SAAYoG,IACV1G,KAAKsG,OAAOK,QAAUD,IAEpB1G,KAAK4G,6CAMTR,EAAA9F,UAAAuG,cAAA,SAAcC,GACZ,IAAMC,EAAmBD,EAAOE,OAAOC,QAAUjH,KAAKkH,aAAelH,KAAKmH,eAC1EnH,KAAKoH,SAASL,GACd/G,KAAK4G,YACL5G,KAAKqH,WAAWN,IAGlBX,EAAA9F,UAAAgH,iBAAA,SAAiBC,GAAiCvH,KAAKoH,SAAWG,GAElEnB,EAAA9F,UAAAkH,kBAAA,SAAkBD,GAAuBvH,KAAK4G,UAAYW,GAE1DnB,EAAA9F,UAAAmH,iBAAA,SAAiBC,GACf1H,KAAK6B,SAAW6F,EAChB1H,KAAKsG,OAAOzE,SAAW6F,GAGzBtB,EAAA9F,UAAA+G,WAAA,SAAW5I,GACTuB,KAAKiH,QAAUxI,IAAUuB,KAAKkH,aAC9BlH,KAAKsG,OAAOqB,OAAS3H,KAAKiH,6BA5D7BhH,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,6BACV8C,KAAM,CACJ4E,aAAgB,MAChBC,YAAa,UACbC,aAAc,WACdC,WAAY,wBACZC,UAAW,iBACXC,SAAU,mBAEZC,UAAW,CAACnC,gDAvBNL,uCA+BL7E,EAAAA,4BAKAA,EAAAA,8BAKAA,EAAAA,cCvCGsH,EAA2B,CAC/BnC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAiC,IAC9B/B,OAAO,GAGLxG,EAAS,yCAQsB,IAAIwI,gBACpB,eAUD,aAAaxI,kBAElB,SAAC0G,oBACA,oBAVZC,OAAAC,eAAI2B,EAAA9H,UAAA,WAAQ,KAAZ,WAAiB,OAAON,KAAKsI,eAC7B,SAAaZ,GAAuB1H,KAAKyH,iBAAiBC,oCAW1DU,EAAA9H,UAAAiI,cAAA,SAAcC,GACZxI,KAAKqH,WAAWmB,EAAM/J,OACtBuB,KAAKoH,SAASoB,EAAM/J,QAGtB2J,EAAA9H,UAAAmI,mBAAA,WAAuBzI,KAAK0I,sBAE5BN,EAAA9H,UAAAqI,SAAA,SAASH,GAAmBxI,KAAK4I,QAAQC,IAAIL,IAE7CJ,EAAA9H,UAAAgH,iBAAA,SAAiBC,GAAiCvH,KAAKoH,SAAWG,GAElEa,EAAA9H,UAAAkH,kBAAA,SAAkBD,GAAuBvH,KAAK4G,UAAYW,GAE1Da,EAAA9H,UAAAmH,iBAAA,SAAiBC,GACf1H,KAAKsI,UAAYZ,EACjB1H,KAAK8I,yBAGPV,EAAA9H,UAAAyI,WAAA,SAAWP,GAAmBxI,KAAK4I,QAAQI,UAAOR,IAElDJ,EAAA9H,UAAA+G,WAAA,SAAW5I,GACTuB,KAAKiJ,OAASxK,EACduB,KAAK0I,sBAGCN,EAAA9H,UAAAoI,yCAAuB1I,KAAK4I,QAAQnG,QAAQ,SAAC+F,GAAU,OAAAA,EAAMU,YAAY5G,EAAK2G,WAC9Eb,EAAA9H,UAAAwI,iCAA0B9I,KAAK4I,QAAQnG,QAAQ,SAAC+F,GAAU,OAAAA,EAAMW,wCA5CzElJ,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,kBAAmB8C,KAAM,CAACE,KAAQ,SAAUgF,UAAW,CAACC,qCAa3EtH,EAAAA,2BAiGD,SAAAuI,EACYC,EAA+B/C,EAAgCrC,EAC/DC,GADAlE,KAAAqJ,OAAAA,EAA+BrJ,KAAAsG,OAAAA,EAAgCtG,KAAAiE,UAAAA,EAC/DjE,KAAAkE,SAAAA,cA/CU,KAgDpBlE,KAAKqJ,OAAOV,SAAS3I,aArCvBwG,OAAAC,eACI2C,EAAA9I,UAAA,QAAK,KA6BT,WAAc,OAAON,KAAKiJ,YA9B1B,SACUxK,GAER,IAAM6K,GADNtJ,KAAKiJ,OAASxK,GACcA,EAAME,WAAa,GAC/CqB,KAAKiE,UAAUsF,YAAYvJ,KAAKkE,SAASS,cAAe,QAAS2E,GACjEtJ,KAAKqJ,OAAOZ,sDAMdjC,OAAAC,eACI2C,EAAA9I,UAAA,WAAQ,KAgBZ,WAAiB,OAAON,KAAKqJ,OAAOxH,UAAY7B,KAAKsI,eAjBrD,SACaZ,GACX1H,KAAKsI,WAA2B,IAAfZ,EACjB1H,KAAKmJ,kDAGP3C,OAAAC,eAAI2C,EAAA9I,UAAA,UAAO,KAAX,SAAYoG,GACN1G,KAAKsG,SACPtG,KAAKsG,OAAOK,QAAUD,GAEnBA,GACH1G,KAAKqJ,OAAOzC,6CAIhBJ,OAAAC,eAAI2C,EAAA9I,UAAA,UAAO,KAAX,WAAgB,OAAON,KAAKwJ,0CAM5BhD,OAAAC,eAAI2C,EAAA9I,UAAA,WAAQ,KAAZ,WAAiB,OAAON,KAAKyJ,MAAQzJ,KAAKqJ,OAAOI,sCAQjDL,EAAA9I,UAAAoJ,YAAA,WAAgB1J,KAAKqJ,OAAON,WAAW/I,OAEvCoJ,EAAA9I,UAAA8G,SAAA,WAAapH,KAAKqJ,OAAOd,cAAcvI,OAEvCoJ,EAAA9I,UAAA4I,YAAA,SAAYzK,GACVuB,KAAKwJ,SAAWxJ,KAAKvB,QAAUA,EAC/BuB,KAAKsG,OAAOqB,OAAS3H,KAAKwJ,UAG5BJ,EAAA9I,UAAA6I,eAAA,WAAmBnJ,KAAKsG,OAAOzE,SAAW7B,KAAK6B,8BA1EhD5B,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,0BACV8C,KAAM,CACJ6E,YAAa,UACbC,aAAc,WACd6B,SAAU,WACV5B,WAAY,aACZC,UAAW,iBACXC,SAAU,gEAoDQG,SA7Hd1C,SAH8BJ,EAAAA,iBAAWC,EAAAA,4CAwF9C1E,EAAAA,qBAKAA,EAAAA,MAAKlB,KAAA,CAAC,2BAWNkB,EAAAA,MAAKlB,KAAA,CAAC,oBC9FHiK,EAAwB,CAAClE,EAAgBU,EAAagC,EAAegB,qCAUlES,EAAApG,QAAP,WAAwC,MAAO,CAACC,SAAUmG,wBAR3DlG,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAcgG,EAAuB/F,QAAS+F,mDCH5C,eACJ,iBACI,qBACI,6BACQ,iCACI,6BAP5BlK,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHCmBrBC,EAAS,eAYX,SAAAiK,EAAmBC,GAAA/J,KAAA+J,OAAAA,UADL,aAAalK,+BAN5BI,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,qEAdpBC,EAAAA,2CAoBCU,EAAAA,2BA4FD,SAAAmJ,EACI/I,EAAwDgJ,EAAqBC,EACrEC,GADgDnK,KAAAiK,YAAAA,EAAqBjK,KAAAkK,QAAAA,EACrElK,KAAAmK,IAAAA,eAlDM,IAAIC,EAAAA,oBACL,IAAIA,EAAAA,mBA6CH,IAAIlJ,EAAAA,aAKpBlB,KAAKqK,SAAWpJ,EAAOoJ,SACvBrK,KAAKsK,KAAOrJ,EAAOqJ,KACnBtK,KAAKuK,SAAWtJ,EAAOsJ,SACvBvK,KAAKwK,aAAevJ,EAAOuJ,aAC3BxK,KAAKyK,qBAAuBxJ,EAAOwJ,qBACnCzK,KAAK0K,yBAA2BzJ,EAAOyJ,gCAGzCV,EAAA1J,UAAAqK,mBAAA,WAAA,IAAArI,EAAAtC,KAGM4K,EAAAA,kBAAkB5K,KAAKiK,cACzBjK,KAAKkK,QAAQW,kBAAkB,WAC7BvI,EAAKwI,QACAC,KACGlI,EAAAA,IAAI,WAAM,OAAAP,EAAK+H,WAAWzH,EAAAA,OAAO,SAAAyH,GAAY,OAAW,EAAXA,IAC7CW,EAAAA,UAAU,SAAAX,GAAY,OAAAY,EAAAA,MAAMZ,GAAUU,KAAKG,EAAAA,UAAU5I,EAAK6I,YAC7DC,UAAU,WAAM,OAAA9I,EAAK4H,QAAQmB,IAAI,WAChC/I,EAAKgJ,OACLhJ,EAAK6H,IAAIoB,oBAGfjJ,EAAKwI,QAAQQ,UAKnBtB,EAAA1J,UAAAC,sBAAA,WACE,IAAIiL,EAAcxL,KAAKyL,cAAczL,KAAK0L,UAC1C1L,KAAK0L,SAAWF,EAAcA,EAAY5J,GAAM5B,KAAK2L,OAAOhJ,OAAS3C,KAAK2L,OAAOjL,MAAMkB,GAAK,MAG9FoI,EAAA1J,UAAAoJ,YAAA,WAAgB1J,KAAKmL,OAAOG,QAE5BtB,EAAA1J,UAAAgE,YAAA,SAAYC,GACN,aAAcA,IAAYA,EAAkB,SAAEqH,iBAChD5L,KAAK8K,QAAQQ,QAOjBtB,EAAA1J,UAAAuL,OAAA,SAAOC,GAAmB9L,KAAK+L,iBAAiBD,EAAS9L,KAAKgM,wBAAwBhM,KAAK0L,SAAUI,KAKrG9B,EAAA1J,UAAA2L,KAAA,WAASjM,KAAK+L,iBAAiB/L,KAAKkM,cAAclM,KAAK0L,UAAWS,EAAuBC,QAKzFpC,EAAA1J,UAAAgL,KAAA,WAAStL,KAAK+L,iBAAiB/L,KAAKqM,cAAcrM,KAAK0L,UAAWS,EAAuBG,OAKzFtC,EAAA1J,UAAAiM,MAAA,WAAUvM,KAAKmL,OAAOG,QAKtBtB,EAAA1J,UAAAkM,MAAA,WAAUxM,KAAK8K,QAAQQ,QAEftB,EAAA1J,UAAAyL,0BAAiBU,EAAkBC,GACzC,IAAIC,EAAgB3M,KAAKyL,cAAcgB,GACnCE,GAAiBA,EAAc/K,KAAO5B,KAAK0L,WAC7C1L,KAAK4M,MAAM5K,KAAK,CAACiK,KAAMjM,KAAK0L,SAAUmB,QAASF,EAAc/K,GAAI8K,UAAWA,IAC5E1M,KAAK8K,QAAQQ,OACbtL,KAAK0L,SAAWiB,EAAc/K,KAI1BoI,EAAA1J,UAAA0L,iCAAwBc,EAA8BC,GAC5D,IAAMC,EAAwBhN,KAAKiN,iBAAiBH,GAGpD,OAF2B9M,KAAKiN,iBAAiBF,GAE1CC,EAA6Cb,EAAuBC,MAAQD,EAAuBG,MAGpGtC,EAAA1J,UAAAmL,uBAAcK,GAA6B,OAAO9L,KAAK2L,OAAOjK,KAAK,SAAAkL,GAAS,OAAAA,EAAMhL,KAAOkK,KAEzF9B,EAAA1J,UAAA2M,0BAAiBnB,GACvB,OAAO9L,KAAK2L,OAAOuB,UAAUxK,QAAQ1C,KAAKyL,cAAcK,KAGlD9B,EAAA1J,UAAA+L,uBAAcc,GACpB,IAAMC,EAAWpN,KAAK2L,OAAOuB,UACvBG,EAAkBrN,KAAKiN,iBAAiBE,GAG9C,OAFoBE,IAAoBD,EAASzK,OAAS,EAEpC3C,KAAKsK,KAAO8C,EAAS,GAAGxL,GAAKwL,EAASA,EAASzK,OAAS,GAAGf,GAC5DwL,EAASC,EAAkB,GAAGzL,IAG7CoI,EAAA1J,UAAA4L,uBAAciB,GACpB,IAAMC,EAAWpN,KAAK2L,OAAOuB,UACvBG,EAAkBrN,KAAKiN,iBAAiBE,GAG9C,OAFyC,IAApBE,EAEErN,KAAKsK,KAAO8C,EAASA,EAASzK,OAAS,GAAGf,GAAKwL,EAAS,GAAGxL,GAC5DwL,EAASC,EAAkB,GAAGzL,wBA9LvDkB,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,eACV6C,SAAU,cACViC,gBAAiBC,EAAAA,wBAAwBC,OACzClC,KAAM,CACJC,QAAS,iBACTqK,kBAAmB,UACnBC,SAAY,IACZC,eAAgB,0BAChBC,eAAgB,0BAChBC,sBAAuB,qBACvBC,uBAAwB,sBAE1BvK,SAAU,ohCApCJwK,qCA6G0BC,EAAAA,OAAMlO,KAAA,CAACmO,EAAAA,sBAvHvCC,EAAAA,cAPAC,EAAAA,qDA2EClN,EAAAA,gBAAenB,KAAA,CAACmK,qBAQhBjJ,EAAAA,wBAMAA,EAAAA,oBAKAA,EAAAA,wBAKAA,EAAAA,4BAMAA,EAAAA,oCAMAA,EAAAA,wCAMAA,EAAAA,qBAMAyC,EAAAA,kBAuIDgJ,KAAA,OACAF,MAAA,SAGW6B,EAA0B,CAACjE,EAAaF,GC1QrDoE,EAAA,gCAgBSA,EAAAzK,QAAP,WAAwC,MAAO,CAACC,SAAUwK,wBAR3DvK,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAcqK,EAAyBpK,QAASoK,EAAyBnK,QAAS,CAACC,EAAAA,oBAR9F,6CCcoC,6BATnC9D,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,gBACV6C,SAAU,cACVC,KAAM,CAACmL,mBAAoB,OAAQC,eAAgB,qDAMlDvN,EAAAA,MAAKlB,KAAA,CAAC,uBCdT0O,EAAA,gCAaSA,EAAA5K,QAAP,WAAwC,MAAO,CAACC,SAAU2K,wBAR3D1K,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAc,CAAC0K,GAAczK,QAAS,CAACyK,SALlD,GCgBIC,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgB/H,OAAOkI,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI9M,KAAK8M,EAAOA,EAAEI,eAAelN,KAAI6M,EAAE7M,GAAK8M,EAAE9M,MACpD6M,EAAGC,IAG5B,SAAAK,EAA0BN,EAAGC,GAEzB,SAAAM,IAAgB/O,KAAKgP,YAAcR,EADnCD,EAAcC,EAAGC,GAEjBD,EAAElO,UAAkB,OAANmO,EAAajI,OAAOyI,OAAOR,IAAMM,EAAGzO,UAAYmO,EAAEnO,UAAW,IAAIyO,GA2FnF,SAAAG,EAAuBC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAsB,EAANA,QAAcI,EAAIE,EAAEpE,QAAQuE,MAAMD,EAAGE,KAAKN,EAAE/Q,OAExE,MAAOsR,GAASN,EAAI,CAAEM,MAAOA,WAEzB,IACQP,IAAMA,EAAEK,OAASR,EAAIK,EAAU,YAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEM,OAE7B,OAAOH,EC3HX,IAAAI,EAAA,WA2BE,SAAAA,EAAYC,EAAcC,EAAeC,GACvCnQ,KAAKiQ,KAAO7Q,EAAU6Q,GAAQA,EAAO,KACrCjQ,KAAKkQ,MAAQ9Q,EAAU8Q,GAASA,EAAQ,KACxClQ,KAAKmQ,IAAM/Q,EAAU+Q,GAAOA,EAAM,YAV7BH,EAAAI,KAAP,SAAYC,GACV,OAAIA,aAAgBL,EACXK,EAEFA,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAAO,MAY/DH,EAAA1P,UAAAgQ,OAAA,SAAOC,GACL,OAAOA,GAASvQ,KAAKiQ,OAASM,EAAMN,MAAQjQ,KAAKkQ,QAAUK,EAAML,OAASlQ,KAAKmQ,MAAQI,EAAMJ,KAM/FH,EAAA1P,UAAAkQ,OAAA,SAAOD,GACL,QAAKA,IAIDvQ,KAAKiQ,OAASM,EAAMN,KAClBjQ,KAAKkQ,QAAUK,EAAML,MAChBlQ,KAAKmQ,MAAQI,EAAMJ,KAAcnQ,KAAKmQ,IAAMI,EAAMJ,IAElDnQ,KAAKkQ,MAAQK,EAAML,MAGrBlQ,KAAKiQ,KAAOM,EAAMN,OAO7BD,EAAA1P,UAAAmQ,MAAA,SAAMF,GACJ,QAAKA,IAGDvQ,KAAKiQ,OAASM,EAAMN,KAClBjQ,KAAKkQ,QAAUK,EAAML,MAChBlQ,KAAKmQ,MAAQI,EAAMJ,KAAcnQ,KAAKmQ,IAAMI,EAAMJ,IAElDnQ,KAAKkQ,MAAQK,EAAML,MAGrBlQ,KAAKiQ,KAAOM,EAAMN,SAzE/B,GCJA,SAAAS,EAAoBC,GAClB,OAAO,IAAIX,EAAQW,EAAOC,cAAeD,EAAOE,WAAa,EAAGF,EAAOG,WAEzE,SAAAC,EAAkBV,GAChB,IAAMM,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,IAAK,IAK7D,OAHKhR,MAAMwR,EAAOM,YAChBN,EAAOO,YAAYb,EAAKJ,MAEnBU,4DASRjR,EAAAA,mGAuDyCyR,EAAAA,EAAAA,GACxCC,EAAA9Q,UAAA+Q,eAAA,WAAmB,OAAO,GAE1BD,EAAA9Q,UAAAgR,UAAA,WAAc,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAEzDF,EAAA9Q,UAAAiR,iBAAA,WAAqB,OAAO,GAE5BH,EAAA9Q,UAAAkR,QAAA,SAAQnB,EAAeoB,EAAyBC,QAAzB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9C,IAAIf,EAASI,EAASV,GAEtB,OAAQoB,GACN,IAAK,IACH,OAAO,IAAIzB,EAAQK,EAAKJ,KAAOyB,EAAQ,EAAG,GAC5C,IAAK,IACHf,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQwB,EAAS,EAAG,EAAG,IACzD,MACF,IAAK,IACHf,EAAOgB,QAAQhB,EAAOG,UAAYY,GAClC,MACF,QACE,OAAOrB,EAGX,OAAOK,EAAWC,IAGpBS,EAAA9Q,UAAAsR,QAAA,SAAQvB,EAAeoB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqB1R,KAAKwR,QAAQnB,EAAMoB,GAASC,IAEjGN,EAAA9Q,UAAAuR,WAAA,SAAWxB,GACT,IACIF,EADSY,EAASV,GACLyB,SAEjB,OAAe,IAAR3B,EAAY,EAAIA,GAGzBiB,EAAA9Q,UAAAyR,cAAA,SAAcC,EAAiBC,GAEN,IAAnBA,IACFA,EAAiB,GAGnB,IAGMtB,EAASI,EAFJiB,GADY,GAAQC,GAAkB,IAIjDtB,EAAOgB,QAAQhB,EAAOG,UAAY,GAAKH,EAAOmB,UAAY,IAC1D,IAAMI,EAAOvB,EAAOM,UAGpB,OAFAN,EAAOwB,SAAS,GAChBxB,EAAOgB,QAAQ,GACR3S,KAAKM,MAAMN,KAAKoT,OAAOF,EAAOvB,EAAOM,WAAa,OAAY,GAAK,GAG5EG,EAAA9Q,UAAA+R,SAAA,WAAsB,OAAO3B,EAAW,IAAIM,OAE5CI,EAAA9Q,UAAAgS,QAAA,SAAQjC,GACN,KAAKA,GAASjR,EAAUiR,EAAKJ,OAAU7Q,EAAUiR,EAAKH,QAAW9Q,EAAUiR,EAAKF,MAC9E,OAAO,EAGT,IAAMQ,EAASI,EAASV,GAExB,OAAQlR,MAAMwR,EAAOM,YAAcN,EAAOC,gBAAkBP,EAAKJ,MAAQU,EAAOE,WAAa,IAAMR,EAAKH,OACpGS,EAAOG,YAAcT,EAAKF,yBA/DjCzQ,EAAAA,gBACyC6S,GCvE1C,SAAAC,EAA8BvG,EAAeX,GAC3C,OAGF,SAAAmH,EAA+BxG,EAAeX,GAC5C,OAASW,IAASX,KAAYW,KAAUX,GAAQW,EAAKqE,OAAOhF,GAJpDmH,CAAexG,EAAMX,GAa/B,SAAAoH,EAAiCrC,EAAesC,EAAkBC,GAChE,OAAIvC,GAAQsC,GAAWtC,EAAKG,OAAOmC,GAC1BA,EAELtC,GAAQuC,GAAWvC,EAAKI,MAAMmC,GACzBA,EAGFvC,EAGT,SAAAwC,EAAiCxC,EAAeyC,GACvC,IAAAH,EAAAG,EAAAH,QAASC,EAAAE,EAAAF,QAAS/Q,EAAAiR,EAAAjR,SAAUkR,EAAAD,EAAAC,aAEnC,SACGxT,EAAU8Q,IACXxO,GACCkR,GAAgBA,EAAa1C,EAAM,CAACJ,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,SACjEyC,GAAWtC,EAAKG,OAAOmC,IACvBC,GAAWvC,EAAKI,MAAMmC,IA8C3B,SAAAI,GACIC,EAAuB5C,EAAeyC,EAA4BI,EAClEC,GACK,IAAAC,EAAAN,EAAAM,cAAeC,EAAAP,EAAAO,OAEhBC,EAAgBD,EAAOE,OAAO,EAAGF,EAAO1Q,QAyB9C,OAtBmBiM,MAAMwB,KAAK,CAACzN,OAAQyQ,GAAgB,SAAC7M,EAAGmJ,GACzD,IAAM8D,EAAYP,EAASzB,QAAQnB,EAAM,IAAKX,GAG9C,GAFA2D,EAAO3D,GAAK,MAEPyD,EAAO,CACV,IAAMM,EAAcH,EAAcI,UAAU,SAAAxD,GAAS,OAAAA,EAAMsD,UAAUlD,OAAOkD,MAEvD,IAAjBC,IACFJ,EAAO3D,GAAK4D,EAAcC,OAAOE,EAAa,GAAG,IAIrD,OAAOD,IAIE/Q,QAAQ,SAAC+Q,EAAW9D,GACX,OAAd2D,EAAO3D,KACT2D,EAAO3D,GAOb,SAAAiE,EACIV,EAAuB5C,EAAeyC,EAA4BI,EAClEhD,QAAA,IAAAA,IAAAA,EAAA,IACK,IAAAyC,EAAAG,EAAAH,QAASC,EAAAE,EAAAF,QAASX,EAAAa,EAAAb,eAAgBc,EAAAD,EAAAC,aAAca,EAAAd,EAAAc,YAEvD1D,EAAMsD,UAAY,KAClBtD,EAAM2D,SAAW,KACjB3D,EAAMwB,OAASrB,EAAKH,MACpBA,EAAMD,KAAOI,EAAKJ,KAClBC,EAAM4D,MAAQ5D,EAAM4D,OAAS,GAC7B5D,EAAM6D,SAAW7D,EAAM6D,UAAY,GAEnC1D,EA8DF,SAAA2D,EAAiCf,EAAuB5C,EAAe4B,GACrE,IAAMgC,EAAchB,EAAS5B,iBACvB6C,EAAiB,IAAIlE,EAAQK,EAAKJ,KAAMI,EAAKH,MAAO,GACpDiE,EAAYlB,EAASpB,WAAWqC,GAAkBD,EACxD,OAAOhB,EAASrB,QAAQsC,EAAgB,KAAMD,EAAcE,EAAYlC,GAAkBgC,GAlEnFD,CAAiBf,EAAU5C,EAAM4B,GAGxC,IAAK,IAAID,EAAO,EAAGA,EAAOiB,EAAS1B,mBAAoBS,IAAQ,CAC7D,IAAIoC,EAAalE,EAAM4D,MAAM9B,GACxBoC,IACHA,EAAalE,EAAM4D,MAAM9B,GAAQ,CAACN,OAAQ,EAAG2C,KAAM,GAAIC,WAAW,IAKpE,IAHA,IAAMD,EAAOD,EAAWC,KAGflE,EAAM,EAAGA,EAAM8C,EAAS5B,iBAAkBlB,IAAO,CAC3C,IAAT6B,IACF9B,EAAM6D,SAAS5D,GAAO8C,EAASpB,WAAWxB,IAG5C,IAAMkE,EAAU,IAAIvE,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAClDqE,EAAWvB,EAASzB,QAAQ+C,GAE5BE,EAAYvB,EAAKwB,gBAAgBH,GAGnC1S,KAAe8Q,GAAW4B,EAAQ/D,OAAOmC,IAAcC,GAAW2B,EAAQ9D,MAAMmC,KAC/E/Q,GAAYkR,IACflR,EAAWkR,EAAawB,EAAS,CAACrE,MAAOA,EAAMwB,OAAQzB,KAAMC,EAAMD,QAI7C,OAApBC,EAAMsD,WAAsBe,EAAQrE,QAAUA,EAAMwB,SACtDxB,EAAMsD,UAAYe,GAIhBA,EAAQrE,QAAUA,EAAMwB,QAAU8C,EAAStE,QAAUA,EAAMwB,SAC7DxB,EAAM2D,SAAWU,GAGnB,IAAII,EAAYN,EAAKlE,GAChBwE,IACHA,EAAYN,EAAKlE,GAAI,IAEvBwE,EAAUtE,KAAOkE,EACjBI,EAAUC,QAAUpO,OAAOqO,OACvBF,EAAUC,SAAW,GACrB,CAACvE,KAAMkE,EAASO,aAAc5E,EAAMwB,OAAQ7P,SAAQA,EAAE8E,SAAS,EAAOoO,UAAU,IACpFJ,EAAUK,UAAY,EACtBL,EAAUF,UAAYA,EACtBE,EAAUM,QAAS,EAEnB5E,EAAOmE,EAGTJ,EAAW1C,OAASuB,EAASlB,cAAcsC,EAAKxR,IAAI,SAAAsN,GAAO,OAAAA,EAAIE,OAAO4B,GAGtEmC,EAAWE,UAA4B,cAAhBV,GAA+BS,EAAK,GAAGhE,KAAKH,QAAUA,EAAMwB,QAC/E2C,EAAKA,EAAK1R,OAAS,GAAG0N,KAAKH,QAAUA,EAAMwB,OAGjD,OAAOxB,EA9ESyD,CAAWV,EAAUO,EAAWV,EAAOI,EAAMI,EAAc4B,SAAO,OAI3E7B,yCCzEP8B,EAAA7U,UAAA8U,eAAA,SAAe/E,GAA+B,MAAO,GAAGA,EAAKF,KAO7DgF,EAAA7U,UAAA+U,gBAAA,SAAgBC,GAA8B,MAAO,GAAGA,GAQxDH,EAAA7U,UAAAiV,gBAAA,SAAgBtF,GAAwB,MAAO,GAAGA,uBA/CnDvQ,EAAAA,iCAwDC,SAAA8V,EAAuCC,GAAvC,IAAAnT,EACEoT,EAAA/F,KAAA3P,OAAOA,KAD8BsC,EAAAmT,QAAAA,EAGrC,IAAME,EAA2BC,EAAAA,kBAAkBH,EAASI,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBC,cACnG1T,EAAK2T,eAAiBN,EAAyB9S,IAAI,SAACsN,EAAK+F,GAAU,OAAAP,GAA0BO,EAAQ,GAAK,KAE1G5T,EAAK6T,aAAeC,EAAAA,oBAAoBX,EAASI,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBM,aACxF/T,EAAKgU,YAAcF,EAAAA,oBAAoBX,EAASI,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBQ,eAZ7CpF,EAAAA,EAAAA,GAe5CqE,EAAAlV,UAAAkW,oBAAA,SAAoBC,GAA2B,OAAOzW,KAAKiW,eAAeQ,EAAU,IAEpFjB,EAAAlV,UAAAoW,kBAAA,SAAkBxG,GAAyB,OAAOlQ,KAAKmW,aAAajG,EAAQ,IAE5EsF,EAAAlV,UAAAqW,iBAAA,SAAiBzG,GAAyB,OAAOlQ,KAAKsW,YAAYpG,EAAQ,IAE1EsF,EAAAlV,UAAAoU,gBAAA,SAAgBrE,GACd,IAAMM,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,KACxD,OAAOyG,EAAAA,WAAWjG,EAAQ,WAAY3Q,KAAKyV,8BAxB9C/V,EAAAA,+EAMcmO,EAAAA,OAAMlO,KAAA,CAACkX,EAAAA,mBALwB1B,IC7D9C2B,GAAA,WAwGE,SAAAA,EAAoBC,EAAgCC,GAAhChX,KAAA+W,UAAAA,EAAgC/W,KAAAgX,MAAAA,eAhFlC,IAAI5M,EAAAA,sBAEH,IAAIA,EAAAA,oBAEe,CACpCvI,UAAU,EACVuR,cAAe,EACfnB,eAAgB,EAChBgF,cAAc,EACd5D,OAAQ,GACR6D,WAAY,SACZtD,YAAa,UACbuD,cAAc,EACdC,cAAc,EACdC,YAAa,CAACC,MAAO,GAAIjE,OAAQ,IACjCkE,aAAc,aAGhB/Q,OAAAC,eAAIqQ,EAAAxW,UAAA,SAAM,KAAV,WAAgD,OAAON,KAAKwX,QAAQzM,KAAKnI,EAAAA,OAAO,SAAA6U,GAAS,OAAsB,EAAtBA,EAAMpE,OAAO1Q,2CAEtG6D,OAAAC,eAAIqQ,EAAAxW,UAAA,UAAO,KAAX,WAAqC,OAAON,KAAK0X,SAAS3M,KAAKnI,EAAAA,OAAO,SAAAyN,GAAQ,OAAS,OAATA,sCAE9E7J,OAAAC,eAAIqQ,EAAAxW,UAAA,WAAQ,KAAZ,SAAauB,GACP7B,KAAK2X,OAAO9V,WAAaA,GAC3B7B,KAAK4X,WAAW,CAAC/V,SAAQA,qCAI7B2E,OAAAC,eAAIqQ,EAAAxW,UAAA,gBAAa,KAAjB,SAAkB8S,GAEZhU,EADJgU,EAAgB5U,EAAU4U,KACsB,EAAhBA,GAAqBpT,KAAK2X,OAAOvE,gBAAkBA,GACjFpT,KAAK4X,WAAW,CAACxE,cAAaA,qCAIlC5M,OAAAC,eAAIqQ,EAAAxW,UAAA,iBAAc,KAAlB,SAAmB2R,GAEb7S,EADJ6S,EAAiBzT,EAAUyT,KACwB,GAAlBA,GAAuBjS,KAAK2X,OAAO1F,iBAAmBA,GACrFjS,KAAK4X,WAAW,CAAC3F,eAAcA,qCAInCzL,OAAAC,eAAIqQ,EAAAxW,UAAA,eAAY,KAAhB,SAAiB2W,GACXjX,KAAK2X,OAAOV,eAAiBA,GAAiBjX,KAAK2X,OAAO9V,UAC5D7B,KAAK4X,WAAW,CAACX,aAAYA,qCAIjCzQ,OAAAC,eAAIqQ,EAAAxW,UAAA,UAAO,KAAX,SAAY+P,GACV,IAAMuC,EAAU5S,KAAK6X,YAAYxH,EAAM,MACnCmC,EAAcxS,KAAK2X,OAAO/E,QAASA,IACrC5S,KAAK4X,WAAW,CAAChF,QAAOA,qCAI5BpM,OAAAC,eAAIqQ,EAAAxW,UAAA,eAAY,KAAhB,SAAiByS,GACX/S,KAAK2X,OAAO5E,eAAiBA,GAC/B/S,KAAK4X,WAAW,CAAC7E,aAAYA,qCAIjCvM,OAAAC,eAAIqQ,EAAAxW,UAAA,UAAO,KAAX,SAAY+P,GACV,IAAMsC,EAAU3S,KAAK6X,YAAYxH,EAAM,MACnCmC,EAAcxS,KAAK2X,OAAOhF,QAASA,IACrC3S,KAAK4X,WAAW,CAACjF,QAAOA,qCAI5BnM,OAAAC,eAAIqQ,EAAAxW,UAAA,aAAU,KAAd,SAAe4W,GACTlX,KAAK2X,OAAOT,aAAeA,GAC7BlX,KAAK4X,WAAW,CAACV,WAAUA,qCAI/B1Q,OAAAC,eAAIqQ,EAAAxW,UAAA,cAAW,KAAf,SAAgBsT,GACV5T,KAAK2X,OAAO/D,cAAgBA,GAC9B5T,KAAK4X,WAAW,CAAChE,YAAWA,qCAMhCkD,EAAAxW,UAAAwX,MAAA,SAAMzH,IACCrQ,KAAK2X,OAAO9V,UAAY7B,KAAK+W,UAAUzE,QAAQjC,IAASmC,EAAcxS,KAAK2X,OAAOI,UAAW1H,IAChGrQ,KAAK4X,WAAW,CAACG,UAAW1H,KAIhCyG,EAAAxW,UAAA0X,UAAA,SAAUvG,EAAoBC,GAC5B1R,KAAK8X,MAAM9X,KAAK+W,UAAUvF,QAAQxR,KAAK2X,OAAOI,UAAWtG,EAAQC,KAGnEoF,EAAAxW,UAAA2X,YAAA,WACMpF,EAAiB7S,KAAK2X,OAAOI,UAAW/X,KAAK2X,SAC/C3X,KAAK6L,OAAO7L,KAAK2X,OAAOI,UAAW,CAACG,WAAW,KAInDpB,EAAAxW,UAAA6X,KAAA,SAAK9H,GACH,IAAMmD,EAAYxT,KAAK6X,YAAYxH,EAAMrQ,KAAK+W,UAAU1E,YACnDrS,KAAK2X,OAAO9V,UACf7B,KAAK4X,WAAW,CAACpE,UAASA,KAI9BsD,EAAAxW,UAAAuL,OAAA,SAAOwE,EAAe+H,QAAA,IAAAA,IAAAA,EAAA,IACpB,IAAMb,EAAevX,KAAK6X,YAAYxH,EAAM,MACvCrQ,KAAK2X,OAAO9V,WACX2Q,EAAcxS,KAAK2X,OAAOJ,aAAcA,IAC1CvX,KAAK4X,WAAW,CAACL,aAAYA,IAG3Ba,EAAQF,WAAarF,EAAiB0E,EAAcvX,KAAK2X,SAC3D3X,KAAK0X,SAASpM,KAAKiM,KAKzBT,EAAAxW,UAAAuX,YAAA,SAAYxH,EAAqBgI,GAC/B,IAAMC,EAAUtI,EAAQI,KAAKC,GAI7B,OAHIgI,IAAiBzZ,YACnByZ,EAAerY,KAAK+W,UAAU1E,YAEzBrS,KAAK+W,UAAUzE,QAAQgG,GAAWA,EAAUD,GAG7CvB,EAAAxW,UAAAsX,oBAAWW,GACjB,IAAMC,EAAWxY,KAAKyY,aAAaF,GACnCvY,KAAK0Y,eAAeF,GACpBxY,KAAK2X,OAASa,EACdxY,KAAKwX,QAAQlM,KAAKtL,KAAK2X,SAGjBb,EAAAxW,UAAAoY,wBAAe5F,GACd,IAAAO,EAAAP,EAAAO,OAAQD,EAAAN,EAAAM,cAAemE,EAAAzE,EAAAyE,aAAcQ,EAAAjF,EAAAiF,UAAWd,EAAAnE,EAAAmE,aAAcpV,EAAAiR,EAAAjR,SAAU+R,EAAAd,EAAAc,YAC/Ed,EAAMO,OAAO5Q,QAAQ,SAAAyN,GACnBA,EAAM4D,MAAMrR,QAAQ,SAAAuP,GAClBA,EAAKqC,KAAK5R,QAAQ,SAAA0N,GAGZ4H,IACF5H,EAAIyE,QAAQjO,QAAUoR,EAAUzH,OAAOH,EAAIE,OAAS4G,GAItD9G,EAAI6E,UAAYnT,GAAYsO,EAAIE,KAAKC,OAAOyH,IAAcA,EAAU7H,QAAUA,EAAMwB,OAAS,GAAK,GAGjF,IAAb7P,IACFsO,EAAIyE,QAAQ/S,UAAW,GAIrB0V,IAAiB3Y,YACnBuR,EAAIyE,QAAQG,SAA4B,OAAjBwC,GAAyBA,EAAajH,OAAOH,EAAIE,OAItEH,EAAMwB,SAAWvB,EAAIE,KAAKH,QAC5BC,EAAI8E,OAAyB,WAAhBrB,GAA4C,cAAhBA,GACpB,EAAhBR,GAAqBjD,EAAIE,KAAKI,MAAM4C,EAAO,GAAGG,YAC9CrD,EAAIE,KAAKG,OAAO6C,EAAOD,EAAgB,GAAGS,kBAOjDiD,EAAAxW,UAAAmY,sBAAaF,GAEnB,IAAMzF,EAAQtM,OAAOqO,OAAO,GAAI7U,KAAK2X,OAAQY,GAEzCI,EAAY7F,EAAMU,UAqBtB,IAlBI,YAAa+E,GAAS,YAAaA,MFzL3C,SAAAK,EAAkCjG,EAAkBC,GAClD,GAAIA,GAAWD,GAAWC,EAAQpC,OAAOmC,GACvC,MAAM,IAAIkG,MAAM,aAAajG,EAAO,qCAAqCD,GEwLvEiG,CAAkB9F,EAAMH,QAASG,EAAMF,SACvCE,EAAMiF,UAAYrF,EAAiBI,EAAMiF,UAAWjF,EAAMH,QAASG,EAAMF,SACzEE,EAAMU,UAAYd,EAAiBI,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,SACzE+F,EAAY7F,EAAMiF,WAIhB,aAAcQ,IAChBzF,EAAMmE,cAAe,GAInB,iBAAkBsB,GAAuC,IAA9BvY,KAAK2X,OAAOtE,OAAO1Q,SAChDgW,EAAY7F,EAAMyE,cAIhB,cAAegB,IACjBzF,EAAMiF,UAAYrF,EAAiBI,EAAMiF,UAAWjF,EAAMH,QAASG,EAAMF,SACzE+F,EAAY7F,EAAMiF,UAGU,IAAxBjF,EAAMO,OAAO1Q,SAAiBmQ,EAAMiF,UAAUvH,OAAOsC,EAAMU,aAC1DV,EAAMiF,UAAUtH,MAAMqC,EAAMe,WAC/B,OAAOf,EAWX,GANI,cAAeyF,IACjBzF,EAAMU,UAAYd,EAAiBI,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,SACzE+F,EAAY7F,EAAMU,WAIhBmF,EAAW,CACb,IAAMG,EAAe,mBAAoBP,GAAS,iBAAkBA,GAAS,YAAaA,GACtF,YAAaA,GAAS,aAAcA,GAAS,gBAAiBA,EAE5DlF,EAASL,GAAYhT,KAAK+W,UAAW4B,EAAW7F,EAAO9S,KAAKgX,MAAO8B,GAGzEhG,EAAMO,OAASA,EACfP,EAAMU,UAA4B,EAAhBH,EAAO1Q,OAAa0Q,EAAO,GAAGG,UAAY5U,UAC5DkU,EAAMe,SAA2B,EAAhBR,EAAO1Q,OAAa0Q,EAAOA,EAAO1Q,OAAS,GAAGkR,SAAWjV,UAGtE,iBAAkB2Z,IAAU1F,EAAiBC,EAAMyE,aAAczE,KACnEA,EAAMyE,aAAe,MAInB,cAAegB,IACbzF,EAAMiF,YAAcnZ,WAAakU,EAAMiF,UAAUvH,OAAOsC,EAAMU,YAC9DV,EAAMiF,UAAUtH,MAAMqC,EAAMe,aAC9Bf,EAAMiF,UAAYY,GAKtB,IAAMI,GAAe/Y,KAAK2X,OAAOnE,WAAaxT,KAAK2X,OAAOnE,UAAUvD,OAAS6C,EAAMU,UAAUvD,KACvF+I,GAAgBhZ,KAAK2X,OAAOnE,WAAaxT,KAAK2X,OAAOnE,UAAUtD,QAAU4C,EAAMU,UAAUtD,MACtE,WAArB4C,EAAMoE,aAEJ,YAAaqB,GAAS,YAAaA,GAA4C,IAAnCzF,EAAMuE,YAAYC,MAAM3U,QAAgBoW,KACtFjG,EAAMuE,YAAYC,MFzM5B,SAAA2B,EAAuC5I,EAAesC,EAAkBC,GACtE,IAAKvC,EACH,MAAO,GAGT,IAAM6I,EAAQvG,GAAWA,EAAQ1C,MAAQI,EAAKJ,KAAO,GAC/CkJ,EAAMvG,GAAWA,EAAQ3C,MAAQI,EAAKJ,KAAO,GAEnD,OAAOrB,MAAMwB,KAAK,CAACzN,OAAQwW,EAAMD,EAAQ,GAAI,SAACzJ,EAAGC,GAAM,OAAAwJ,EAAQxJ,IEiM7BuJ,CAAuBnG,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,WAIrF,YAAa2F,GAAS,YAAaA,GAA6C,IAApCzF,EAAMuE,YAAYhE,OAAO1Q,QAAgBoW,KACvFjG,EAAMuE,YAAYhE,OFlO5B,SAAA+F,EAAwCnG,EAAuB5C,EAAesC,EAAkBC,GAC9F,IAAKvC,EACH,MAAO,GAGT,IAAIgD,EAASJ,EAAS3B,YAEtB,GAAIqB,GAAWtC,EAAKJ,OAAS0C,EAAQ1C,KAAM,CACzC,IAAMiG,EAAQ7C,EAAOK,UAAU,SAAAxD,GAAS,OAAAA,IAAUyC,EAAQzC,QAC1DmD,EAASA,EAAO5T,MAAMyW,GAGpBtD,GAAWvC,EAAKJ,OAAS2C,EAAQ3C,OAC7BiG,EAAQ7C,EAAOK,UAAU,SAAAxD,GAAS,OAAAA,IAAU0C,EAAQ1C,QAC1DmD,EAASA,EAAO5T,MAAM,EAAGyW,EAAQ,IAGnC,OAAO7C,EEkNK+F,CAAwBpZ,KAAK+W,UAAWjE,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,WAGpFE,EAAMuE,YAAc,CAACC,MAAO,GAAIjE,OAAQ,IAIhB,WAArBP,EAAMoE,YAAgD,WAArBpE,EAAMoE,cACvC8B,GAAgBD,GAAe,YAAaR,GAAS,YAAaA,GAAS,aAAcA,KAC5FzF,EAAMqE,aAAerE,EAAMjR,UFzMnC,SAAAwX,EAAkCpG,EAAuB5C,EAAesC,GACtE,IAAM2G,EAAWrG,EAASrB,QAAQvB,EAAM,KACxC,OAAOsC,IAAY2G,EAASrJ,OAAS0C,EAAQ1C,MAAQqJ,EAASpJ,MAAQyC,EAAQzC,OAC3DoJ,EAASrJ,KAAO0C,EAAQ1C,MAA0B,IAAlB0C,EAAQzC,OEsMdmJ,CAAkBrZ,KAAK+W,UAAWjE,EAAMU,UAAWV,EAAMH,SAChGG,EAAMsE,aAAetE,EAAMjR,UF9MnC,SAAA0X,EAAkCtG,EAAuB5C,EAAeuC,GACtE,OAAOA,GAAWK,EAASzB,QAAQnB,EAAM,KAAKI,MAAMmC,GE6MP2G,CAAkBvZ,KAAK+W,UAAWjE,EAAMe,SAAUf,EAAMF,UAInG,OAAOE,uBAvQVpT,EAAAA,sDAtBO6S,SAoBA4C,QApBR,OCCEqE,IAAA,EACAC,MAAA,GACAC,OAAA,GACAC,MAAA,GACAC,OAAA,GACAC,SAAA,GACAC,IAAA,GACAC,KAAA,GACAC,UAAA,GACAC,QAAA,GACAC,WAAA,GACAC,UAAA,UAXAX,KAAG,YACHC,OAAK,cACLC,QAAM,eACNC,OAAK,cACLC,QAAM,eACNC,UAAQ,iBACRC,KAAG,YACHC,MAAI,aACJC,WAAS,kBACTC,SAAO,gBACPC,YAAU,mBACVC,WAAS,YCZX,IAAAC,GAAA,WAcE,SAAAA,EAAoBC,EAAwCtD,GAA5D,IAAAzU,EAAAtC,KAAoBA,KAAAqa,SAAAA,EAAwCra,KAAA+W,UAAAA,EAC1DsD,EAASC,OAAOlP,UAAU,SAAAqM,GACxBnV,EAAKiY,SAAW9C,EAAM9E,QACtBrQ,EAAKkY,SAAW/C,EAAM7E,QACtBtQ,EAAKmY,eAAiBhD,EAAMjE,UAC5BlR,EAAKoY,cAAgBjD,EAAM5D,kBAI/BuG,EAAA9Z,UAAAqa,WAAA,SAAWC,GACT,GAAIC,GAAIlc,EAASic,EAAME,QAAS,CAC9B,OAAQF,EAAME,OACZ,KAAKD,GAAIjB,OACP5Z,KAAKqa,SAASrC,UAAU4C,EAAMG,SAAW,IAAM,KAAM,GACrD,MACF,KAAKF,GAAIhB,SACP7Z,KAAKqa,SAASrC,UAAU4C,EAAMG,SAAW,IAAM,IAAK,GACpD,MACF,KAAKF,GAAIf,IACP9Z,KAAKqa,SAASvC,MAAM8C,EAAMG,SAAW/a,KAAKwa,SAAWxa,KAAK0a,eAC1D,MACF,KAAKG,GAAId,KACP/Z,KAAKqa,SAASvC,MAAM8C,EAAMG,SAAW/a,KAAKua,SAAWva,KAAKya,gBAC1D,MACF,KAAKI,GAAIb,UACPha,KAAKqa,SAASrC,UAAU,KAAM,GAC9B,MACF,KAAK6C,GAAIZ,QACPja,KAAKqa,SAASrC,UAAU,KAAMhY,KAAK+W,UAAU1F,kBAC7C,MACF,KAAKwJ,GAAIX,WACPla,KAAKqa,SAASrC,UAAU,IAAK,GAC7B,MACF,KAAK6C,GAAIV,UACPna,KAAKqa,SAASrC,UAAU,IAAKhY,KAAK+W,UAAU1F,kBAC5C,MACF,KAAKwJ,GAAIpB,MACT,KAAKoB,GAAIlB,MACP3Z,KAAKqa,SAASpC,cACd,MACF,QACE,OAGJ2C,EAAMzY,iBACNyY,EAAMI,wCApDXtb,EAAAA,sDANOoX,UACAvE,OAFR,OCuDE0I,KAAA,EACAC,KAAA,SADAD,MAAI,aACJC,MAAI,yDC5CY,sBACC,kBAI0B,0BACO,6BACnC,wBACG,6BAXnBxb,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,4KCAxBF,EAAAA,oGAeyCyR,EAAAA,EAAAA,GAIxCgK,EAAA7a,UAAA8a,UAAA,SAAU/K,GACR,OAAQA,GAAQA,EAAKJ,MAAQI,EAAKH,OAASG,EAAKF,IAAO,CAACF,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,MAAOC,IAAKE,EAAKF,KAAO,MAM/GgL,EAAA7a,UAAA+a,QAAA,SAAQhL,GACN,OAAQA,GAAQA,EAAKJ,MAAQI,EAAKH,OAASG,EAAKF,IAAO,CAACF,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,MAAOC,IAAKE,EAAKF,KAAO,0BAbhHzQ,EAAAA,gBACyC4b,ICOpCC,GAAgC,CACpCvV,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAqV,KAC9BnV,OAAO,iBAmMP,SAAAmV,EACYC,EAAmDpB,EACnDtD,EAA+B7D,EAAyBjS,EACxDkJ,EAAgCuR,EAChCC,EAA8CzR,GAJ1D,IAAA5H,EAAAtC,KACYA,KAAAyb,eAAAA,EAAmDzb,KAAAqa,SAAAA,EACnDra,KAAA+W,UAAAA,EAA+B/W,KAAAkT,KAAAA,EAC/BlT,KAAAmK,IAAAA,EAAgCnK,KAAA0b,YAAAA,EAChC1b,KAAA2b,gBAAAA,EAA8C3b,KAAAkK,QAAAA,gBAfrC,IAAIhJ,EAAAA,yBAMN,IAAIA,EAAAA,2BAEZ,SAACqF,oBACA,aAOV,CAAC,cAAe,gBAAiB,iBAAkB,eAAgB,UAAW,UAAW,aACxF,cAAe,eAAgB,kBAAmB,aAC9C9D,QAAQ,SAAAmZ,GAAS,OAAAtZ,EAAKsZ,GAAS3a,EAAO2a,KAE3C5b,KAAK6b,oBAAsBxB,EAASyB,QAAQ1Q,UAAU,SAAAiF,GAAU/N,EAAKuJ,OAAO7J,KAAKqO,KAEjFrQ,KAAK+b,cAAgB1B,EAASC,OAAOlP,UAAU,SAAAqM,GAC7C,IAAMlD,EAAUkD,EAAMjE,UAChBwI,EAAU1Z,EAAKmV,MAAQnV,EAAKmV,MAAMjE,UAAY,KAC9CyI,EAAkBxE,EAAMF,aACxB2E,EAAkB5Z,EAAKmV,MAAQnV,EAAKmV,MAAMF,aAAe,KACzD4E,EAAiB1E,EAAMM,UACvBqE,EAAiB9Z,EAAKmV,MAAQnV,EAAKmV,MAAMM,UAAY,KAE3DzV,EAAKmV,MAAQA,EAGTjF,EAAcyJ,EAAiBC,KACjC5Z,EAAKsE,YACLtE,EAAK8E,SAAS9E,EAAKqZ,gBAAgBN,QAAQY,KAIzCzJ,EAAc2J,EAAgBC,IAAmBA,GAAkB3E,EAAMR,cAC3E3U,EAAKwV,QAIFvD,EAAQjE,OAAO0L,IAClB1Z,EAAK+Z,SAASra,KAAK,CACjB6K,QAASmP,EAAU,CAAC/L,KAAM+L,EAAQ/L,KAAMC,MAAO8L,EAAQ9L,OAAS,KAChE5E,KAAM,CAAC2E,KAAMsE,EAAQtE,KAAMC,MAAOqE,EAAQrE,SAG9C/F,EAAImS,wBAORd,EAAAlb,UAAAwX,MAAA,WAAA,IAAAxV,EAAAtC,KACEA,KAAKkK,QAAQqS,SAASC,eAAezR,KAAK0R,EAAAA,KAAK,IAAIrR,UAAU,WAC3D,IAAMsR,EACFpa,EAAKoZ,YAAY/W,cAAcgY,cAA8B,gCAC7DD,GACFA,EAAe5E,WAWrB0D,EAAAlb,UAAAsc,WAAA,SAAWvM,GACTrQ,KAAKqa,SAASlC,KAAKnI,EAAQI,KAAKC,EXvQd,WAQlB,OAPAwM,EAAWrW,OAAOqO,QAAU,SAAAgI,EAAkBC,GAC1C,IAAK,IAAIC,EAAGrN,EAAI,EAAGN,EAAI4N,UAAUra,OAAQ+M,EAAIN,EAAGM,IAE5C,IAAK,IAAI/N,KADTob,EAAIC,UAAUtN,GACOlJ,OAAOlG,UAAUuO,eAAec,KAAKoN,EAAGpb,KAAImb,EAAEnb,GAAKob,EAAEpb,IAE9E,OAAOmb,GAEJD,EAASI,MAAMjd,KAAMgd,WW+PQH,CAAA,GAAOxM,EAAI,CAAEF,IAAK,IAAK,QAG7DqL,EAAAlb,UAAAoJ,YAAA,WACE1J,KAAK+b,cAAcmB,cACnBld,KAAK6b,oBAAoBqB,eAG3B1B,EAAAlb,UAAAyE,SAAA,WAAA,IAAAzC,EAAAtC,KACMA,KAAKyX,QAAU7Y,YACjB,CAAC,gBAAiB,eAAgB,iBAAkB,aAAc,UAAW,UAAW,eAAe6D,QACnG,SAAAmZ,GAAS,OAAAtZ,EAAK+X,SAASuB,GAAStZ,EAAKsZ,KACzC5b,KAAK4c,WAAW5c,KAAK2Y,aAIzB6C,EAAAlb,UAAAgE,YAAA,SAAYC,GAAZ,IAAAjC,EAAAtC,KACE,CAAC,gBAAiB,eAAgB,iBAAkB,aAAc,UAAW,UAAW,eACnF4C,OAAO,SAAAgZ,GAAS,OAAAA,KAASrX,IACzB9B,QAAQ,SAAAmZ,GAAS,OAAAtZ,EAAK+X,SAASuB,GAAStZ,EAAKsZ,KAE9C,cAAerX,GACjBvE,KAAK4c,WAAW5c,KAAK2Y,YAIzB6C,EAAAlb,UAAA6c,aAAA,SAAa9M,GACXrQ,KAAKqa,SAASvC,MAAMzH,GACpBrQ,KAAKqa,SAASxO,OAAOwE,EAAM,CAAC6H,WAAW,KAGzCsD,EAAAlb,UAAA8c,UAAA,SAAUxC,GAAwB5a,KAAKyb,eAAed,WAAWC,IAEjEY,EAAAlb,UAAA+c,qBAAA,SAAqBhN,GAAiBrQ,KAAKqa,SAASlC,KAAK9H,IAEzDmL,EAAAlb,UAAAgd,gBAAA,SAAgB1C,GACd,OAAQA,GACN,KAAK2C,GAAgBtC,KACnBjb,KAAKqa,SAASlC,KAAKnY,KAAK+W,UAAUnF,QAAQ5R,KAAKyX,MAAMjE,UAAW,IAAK,IACrE,MACF,KAAK+J,GAAgBrC,KACnBlb,KAAKqa,SAASlC,KAAKnY,KAAK+W,UAAUvF,QAAQxR,KAAKyX,MAAMjE,UAAW,IAAK,MAK3EgI,EAAAlb,UAAAgH,iBAAA,SAAiBC,GAAiCvH,KAAKoH,SAAWG,GAElEiU,EAAAlb,UAAAkH,kBAAA,SAAkBD,GAAuBvH,KAAK4G,UAAYW,GAE1DiU,EAAAlb,UAAAmH,iBAAA,SAAiBC,GAAuB1H,KAAKqa,SAASxY,SAAW6F,GAEjE8T,EAAAlb,UAAAkd,UAAA,SAAUvG,GAAyBjX,KAAKqa,SAASpD,aAAeA,GAEhEuE,EAAAlb,UAAA+G,WAAA,SAAW5I,GAASuB,KAAKqa,SAASxO,OAAOmE,EAAQI,KAAKpQ,KAAK2b,gBAAgBP,UAAU3c,0BAnStFqE,EAAAA,UAASnD,KAAA,CAAC,CACToD,SAAU,gBACV7C,SAAU,iBACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzCE,OAAQ,CAAC,klCA2CThC,SAAU,8tDA2CV8E,UAAW,CAACqT,GAA+BzE,GAAsBsD,iDA3H3DA,UADAtD,UAFAvE,SASA4C,UAHAsI,UArBNzP,EAAAA,yBAWAzI,EAAAA,kBAWM+V,UAVNvN,EAAAA,+CA4IClN,EAAAA,6BAKAA,EAAAA,8BAKAA,EAAAA,4BAMAA,EAAAA,uBAKAA,EAAAA,uBAKAA,EAAAA,0BAMAA,EAAAA,2BAMAA,EAAAA,4BAKAA,EAAAA,+BAKAA,EAAAA,yBAQAA,EAAAA,wBAMAyC,EAAAA,uBAMAA,EAAAA,eChOHoa,GAAA,WAyEE,SAAAA,EAAmBxK,GAAAlT,KAAAkT,KAAAA,cAFA,IAAIhS,EAAAA,oBAIvBwc,EAAApd,UAAAqd,SAAA,SAASxN,GACFA,EAAIyE,QAAQ/S,UAAasO,EAAI8E,QAChCjV,KAAK6L,OAAO7J,KAAKmO,EAAIE,2BAvE1BvN,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,4BACV8C,KAAM,CAACE,KAAQ,QACfkC,OAAQ,CAAC,2sBAiCThC,SAAU,imCAvCJ+R,2CA+DLtU,EAAAA,qBACAA,EAAAA,4BACAA,EAAAA,+BACAA,EAAAA,sBAEAyC,EAAAA,YAvEH,GCAAsa,GAAA,WAqHE,SAAAA,EAAmB1K,GAAAlT,KAAAkT,KAAAA,kBAbNqK,eAIuB,iBAMf,IAAIrc,EAAAA,yBACN,IAAIA,EAAAA,wCA7GxB4B,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,4BACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzCE,OAAQ,CAAC,w6CA8DThC,SAAU,shDApEJ+R,oCAuGLtU,EAAAA,wBACAA,EAAAA,sBACAA,EAAAA,0BACAA,EAAAA,4BACAA,EAAAA,4BACAA,EAAAA,2BACAA,EAAAA,wBAEAyC,EAAAA,uBACAA,EAAAA,YAnHH,GCQAua,mBAgBAC,GAAA,SAAApI,sEAA+CvE,EAAAA,EAAAA,GAC7C2M,EAAAxd,UAAAyd,MAAA,SAAMtf,GACJ,GAAIA,EAAO,CACT,IAAMuf,EAAYvf,EAAMwf,OAAOzb,MAAM,KACrC,GAAyB,IAArBwb,EAAUrb,QAAgBzD,EAAS8e,EAAU,IAC/C,MAAO,CAAC/N,KAAMzR,EAAUwf,EAAU,IAAK9N,MAAO,KAAMC,IAAK,MACpD,GAAyB,IAArB6N,EAAUrb,QAAgBzD,EAAS8e,EAAU,KAAO9e,EAAS8e,EAAU,IAChF,MAAO,CAAC/N,KAAMzR,EAAUwf,EAAU,IAAK9N,MAAO1R,EAAUwf,EAAU,IAAK7N,IAAK,MACvE,GAAyB,IAArB6N,EAAUrb,QAAgBzD,EAAS8e,EAAU,KAAO9e,EAAS8e,EAAU,KAAO9e,EAAS8e,EAAU,IAC1G,MAAO,CAAC/N,KAAMzR,EAAUwf,EAAU,IAAK9N,MAAO1R,EAAUwf,EAAU,IAAK7N,IAAK3R,EAAUwf,EAAU,KAGpG,OAAO,MAGTF,EAAAxd,UAAA4d,OAAA,SAAO7N,GACL,OAAOA,EACAA,EAAKJ,KAAI,KAAI/Q,EAASmR,EAAKH,OAAS1Q,EAAU6Q,EAAKH,OAAS,IAAE,KAAIhR,EAASmR,EAAKF,KAAO3Q,EAAU6Q,EAAKF,KAAO,IAChH,MAlBR,CAA+C0N,ICwNzCM,GAAkB,IA9OxB,gCACUC,EAAA9d,UAAA+d,sBAAaC,GAAwB,OAAOC,OAAOC,iBAAiBF,IAEpEF,EAAA9d,UAAAme,kBAASH,EAAsBI,GAAwB,OAAO1e,KAAKqe,aAAaC,GAASI,IAEzFN,EAAA9d,UAAAqe,4BAAmBL,GACzB,MAA4D,YAApDte,KAAKye,SAASH,EAAS,aAAe,WAGxCF,EAAA9d,UAAAse,sBAAaN,GAGnB,IAFA,IAAIO,EAA8BP,EAAoB,cAAIQ,SAASC,gBAE5DF,GAAkBA,IAAmBC,SAASC,iBAAmB/e,KAAK2e,mBAAmBE,IAC9FA,EAA8BA,EAA2B,aAG3D,OAAOA,GAAkBC,SAASC,iBAGpCX,EAAA9d,UAAA0e,SAAA,SAASV,EAAsBlM,GAC7B,IAAI6M,OADyB,IAAA7M,IAAAA,GAAA,GAE7B,IAAI8M,EAA2B,CAACC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,EAAGC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,GAExF,GAA2C,UAAvCxf,KAAKye,SAASH,EAAS,YACzBW,EAAaX,EAAQmB,4BAChB,CACL,IAAMZ,EAAiB7e,KAAK4e,aAAaN,GAEzCW,EAAajf,KAAK0f,OAAOpB,GAAS,GAE9BO,IAAmBC,SAASC,kBAC9BG,EAAelf,KAAK0f,OAAOb,GAAgB,IAG7CK,EAAaG,KAAOR,EAAec,UACnCT,EAAaK,MAAQV,EAAee,WAetC,OAZAX,EAAWI,KAAOH,EAAaG,IAC/BJ,EAAWK,QAAUJ,EAAaG,IAClCJ,EAAWM,MAAQL,EAAaK,KAChCN,EAAWO,OAASN,EAAaK,KAE7BnN,IACF6M,EAAWI,IAAMrgB,KAAKoT,MAAM6M,EAAWI,KACvCJ,EAAWK,OAAStgB,KAAKoT,MAAM6M,EAAWK,QAC1CL,EAAWM,KAAOvgB,KAAKoT,MAAM6M,EAAWM,MACxCN,EAAWO,MAAQxgB,KAAKoT,MAAM6M,EAAWO,QAGpCP,GAGTb,EAAA9d,UAAAof,OAAA,SAAOpB,EAAsBlM,QAAA,IAAAA,IAAAA,GAAA,GAC3B,IAAMyN,EAAQvB,EAAQmB,wBAChBK,EACCvB,OAAOwB,YAAcjB,SAASC,gBAAgBY,UAD/CG,EAEEvB,OAAOyB,YAAclB,SAASC,gBAAgBa,WAGlDK,EAAW,CACbb,OAAQS,EAAMT,QAAUd,EAAQ4B,aAChCf,MAAOU,EAAMV,OAASb,EAAQ6B,YAC9Bd,IAAKQ,EAAMR,IAAMS,EACjBR,OAAQO,EAAMP,OAASQ,EACvBP,KAAMM,EAAMN,KAAOO,EACnBN,MAAOK,EAAML,MAAQM,GAYvB,OATI1N,IACF6N,EAASb,OAASpgB,KAAKoT,MAAM6N,EAASb,QACtCa,EAASd,MAAQngB,KAAKoT,MAAM6N,EAASd,OACrCc,EAASZ,IAAMrgB,KAAKoT,MAAM6N,EAASZ,KACnCY,EAASX,OAAStgB,KAAKoT,MAAM6N,EAASX,QACtCW,EAASV,KAAOvgB,KAAKoT,MAAM6N,EAASV,MACpCU,EAAST,MAAQxgB,KAAKoT,MAAM6N,EAAST,QAGhCS,GAGT7B,EAAA9d,UAAA8f,iBAAA,SAAiBC,EAA0BC,EAA4BC,EAAmBC,GAExF,IAAMC,EAAiBD,EAAexgB,KAAK0f,OAAOW,GAAa,GAASrgB,KAAKgf,SAASqB,GAAa,GAC7FK,EAAiB1gB,KAAKqe,aAAaiC,GACnCK,EAAcL,EAAcb,wBAC5BmB,EAAmBL,EAAU/d,MAAM,KAAK,IAAM,MAC9Cqe,EAAqBN,EAAU/d,MAAM,KAAK,IAAM,SAElDse,EAA+B,CACjC1B,OAAUuB,EAAYvB,QAAUkB,EAAcJ,aAC9Cf,MAASwB,EAAYxB,OAASmB,EAAcH,YAC5Cd,IAAO,EACPC,OAAUqB,EAAYvB,QAAUkB,EAAcJ,aAC9CX,KAAQ,EACRC,MAASmB,EAAYxB,OAASmB,EAAcH,aAG9C,OAAQS,GACN,IAAK,MACHE,EAAiBzB,IACboB,EAAepB,KAAOiB,EAAcJ,aAAea,WAAWL,EAAeM,eACjF,MACF,IAAK,SACHF,EAAiBzB,IAAMoB,EAAepB,IAAMoB,EAAerB,OAC3D,MACF,IAAK,OACH0B,EAAiBvB,KACbkB,EAAelB,MAAQe,EAAcH,YAAcY,WAAWL,EAAeO,cACjF,MACF,IAAK,QACHH,EAAiBvB,KAAOkB,EAAelB,KAAOkB,EAAetB,MAIjE,OAAQ0B,GACN,IAAK,MACHC,EAAiBzB,IAAMoB,EAAepB,IACtC,MACF,IAAK,SACHyB,EAAiBzB,IAAMoB,EAAepB,IAAMoB,EAAerB,OAASkB,EAAcJ,aAClF,MACF,IAAK,OACHY,EAAiBvB,KAAOkB,EAAelB,KACvC,MACF,IAAK,QACHuB,EAAiBvB,KAAOkB,EAAelB,KAAOkB,EAAetB,MAAQmB,EAAcH,YACnF,MACF,IAAK,SACsB,QAArBS,GAAmD,WAArBA,EAChCE,EAAiBvB,KAAOkB,EAAelB,KAAOkB,EAAetB,MAAQ,EAAImB,EAAcH,YAAc,EAErGW,EAAiBzB,IAAMoB,EAAepB,IAAMoB,EAAerB,OAAS,EAAIkB,EAAcJ,aAAe,EAU3G,OALAY,EAAiBzB,IAAMrgB,KAAKoT,MAAM0O,EAAiBzB,KACnDyB,EAAiBxB,OAAStgB,KAAKoT,MAAM0O,EAAiBxB,QACtDwB,EAAiBvB,KAAOvgB,KAAKoT,MAAM0O,EAAiBvB,MACpDuB,EAAiBtB,MAAQxgB,KAAKoT,MAAM0O,EAAiBtB,OAE9CsB,GAIT1C,EAAA9d,UAAA4gB,uBAAA,SAAuBb,EAA0BC,GAC/C,IAAIa,EAAqC,GACrCC,EAAqBf,EAAYZ,wBACjC4B,EAAuBf,EAAcb,wBACrC6B,EAAOxC,SAASC,gBAChBwC,EAAehD,OAAOiD,aAAeF,EAAKG,aAC1CC,EAAcnD,OAAOoD,YAAcL,EAAKM,YACxCC,EAA8BT,EAAmB7B,KAAO6B,EAAmBjC,MAAQ,EACnF2C,EAA8BV,EAAmB/B,IAAM+B,EAAmBhC,OAAS,EA4CvF,OAxCIiC,EAAqBlC,MAAQiC,EAAmB7B,OAE9CuC,EAA8BT,EAAqBjC,OAAS,GAC5DmC,EAAeO,EAA8BT,EAAqBjC,OAAS,GAC7E+B,EAAoB5N,OAAO4N,EAAoBxe,OAAQ,EAAG,QAG5D3C,KAAK+hB,kCAAkCX,EAAoBC,EAAsB,OAAQF,IAIvFE,EAAqBjC,OAASgC,EAAmB/B,MAC/CwC,EAA8BR,EAAqBlC,MAAQ,GAC3DuC,EAAcG,EAA8BR,EAAqBlC,MAAQ,GAC3EgC,EAAoB5N,OAAO4N,EAAoBxe,OAAQ,EAAG,OAE5D3C,KAAKgiB,kCAAkCZ,EAAoBC,EAAsB,MAAOF,IAKtFO,EAAcN,EAAmB5B,MAAQ6B,EAAqBlC,QAE5D2C,EAA8BT,EAAqBjC,OAAS,GAC5DmC,EAAeO,EAA8BT,EAAqBjC,OAAS,GAC7E+B,EAAoB5N,OAAO4N,EAAoBxe,OAAQ,EAAG,SAG5D3C,KAAK+hB,kCAAkCX,EAAoBC,EAAsB,QAASF,IAIxFI,EAAeH,EAAmB9B,OAAS+B,EAAqBjC,SAC9DyC,EAA8BR,EAAqBlC,MAAQ,GAC3DuC,EAAcG,EAA8BR,EAAqBlC,MAAQ,GAC3EgC,EAAoB5N,OAAO4N,EAAoBxe,OAAQ,EAAG,UAE5D3C,KAAKgiB,kCAAkCZ,EAAoBC,EAAsB,SAAUF,IAGtFA,GAQD/C,EAAA9d,UAAAyhB,2CACJX,EAAgCC,EAAkCY,EAClEC,GACF,IAAIZ,EAAOxC,SAASC,gBAEhBsC,EAAqBjC,QAAUgC,EAAmB9B,QACpD4C,EAAsB3O,OAAO2O,EAAsBvf,OAAQ,EAAGsf,EAAmB,YAE9E1D,OAAOiD,aAAeF,EAAKG,cAAgBL,EAAmB/B,KAAOgC,EAAqBjC,QAC7F8C,EAAsB3O,OAAO2O,EAAsBvf,OAAQ,EAAGsf,EAAmB,SAS7E7D,EAAA9d,UAAA0hB,2CACJZ,EAAgCC,EAAkCY,EAClEC,GACF,IAAIZ,EAAOxC,SAASC,iBAEfR,OAAOoD,YAAcL,EAAKM,aAAeR,EAAmB7B,MAAQ8B,EAAqBlC,OAC5F+C,EAAsB3O,OAAO2O,EAAsBvf,OAAQ,EAAGsf,EAAmB,SAE/EZ,EAAqBlC,OAASiC,EAAmB5B,OACnD0C,EAAsB3O,OAAO2O,EAAsBvf,OAAQ,EAAGsf,EAAmB,aAzOvF,IA0PA,SAAA7B,GACIC,EAA0BC,EAA4BC,EACtDC,GACF,IAAI2B,EAAkCvT,MAAMwT,QAAQ7B,GAAaA,EAAY,CAAA,GAGzE8B,EAAUF,EAAczO,UAAU,SAAA4O,GAAO,MAAQ,SAARA,IAC9B,GAAXD,GACF,CAAC,MAAO,SAAU,OAAQ,QAAS,WAAY,YAAa,cAAe,eAAgB,WAC1F,cAAe,YAAa,gBAC3B5f,QAAQ,SAAS8f,GAC8C,MAA3DJ,EAAczgB,KAAK,SAAA4gB,GAAO,OAA2B,IAA3BA,EAAIE,OAAO,IAAMD,MAC7CJ,EAAc5O,OAAO8O,IAAW,EAAC,KAMvC,IACII,MADAC,EAAS,EAAGC,EAAU,EAGtBxB,EAAsBhD,GAAgB+C,uBAAuBb,EAAaC,cAEnEsC,EAAM1M,GAGf,GAAsD,MAAjDiL,EAAoBzf,KAAK,SAAA4gB,GAAO,OAAAA,IAAQM,KAAmBT,EAAcxf,SAAWuT,EAAQ,EAAI,CACnGuM,EAAgB,EAChB,IAAMI,EAAM1E,GAAgBiC,iBAAiBC,EAAaC,EAAesC,EAAMpC,UAC/EkC,EAASG,EAAIxD,IACbsD,EAAUE,EAAItD,mBAPlB,IAA4B,IAAAuD,Ef3O9B,SAAAC,EAkEyB5T,GACrB,IAAIE,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UAAWG,EAAI,EAChE,OAAIL,EAAUA,EAAEM,KAAKR,GACd,CACH7D,KAAM,WAEF,OADI6D,GAAKO,GAAKP,EAAExM,SAAQwM,OAAI,GACrB,CAAE1Q,MAAO0Q,GAAKA,EAAEO,KAAMG,MAAOV,KemKlB6T,CAiB9B,SAAAC,EAA0BC,GACxB,OAAOA,EAAErgB,IAAI,SAAC+f,EAAM1M,GAAU,MAAA,CAAE0M,KAAIA,EAAE1M,MAAKA,KAlBf+M,CAAcd,IAAcgB,EAAAL,EAAAxX,QAAA6X,EAAAtT,KAAAsT,EAAAL,EAAAxX,OAAA,8BAA7C8X,EAAAR,KAAMQ,EAAAlN,kHAajB,OAFAoK,EAAc+C,MAAMhE,IAASqD,EAAM,KACnCpC,EAAc+C,MAAM9D,KAAUoD,EAAO,KAC9BF,EC5RT,IAAMa,GAA8B,CAClC,UAAW,yBAA0B,6CAA8C,yBACnF,2BAA4B,oBAAqB,mCACjDC,KAAK,MAmBP,IAAaC,GAAe,SAAClF,EAAsBmF,GAEjD,IAAMC,EACFC,EAAAA,UAAsBrF,EAAS,WAAWvT,KAAKG,EAAAA,UAAUuY,GAAiB5gB,EAAAA,IAAI,SAAA4M,GAAK,OAAAA,EAAEzI,UAGzF2c,EAAAA,UAAyBrF,EAAS,WAC7BvT,KAAKG,EAAAA,UAAUuY,GAAiB7gB,EAAAA,OAAO,SAAA6M,GAAK,OAAAA,EAAEqL,QAAUD,GAAIrB,MAAMoK,EAAAA,eAAeF,IACjFtY,UAAU,SAAC0X,OAAAK,EAAAjU,EAAA4T,EAAA,GAACe,EAAAV,EAAA,GAAUW,EAAAX,EAAA,GACrBC,EAAAlU,EAvBR,SAAA6U,EAAsCzF,GACpC,IAAM0F,EAAgC1F,EAAQ2F,iBAAiBX,IAC/D,MAAO,CAACU,EAAK,GAAIA,EAAKA,EAAKrhB,OAAS,IAqB9BohB,CAAAzF,GAAA,GAAM5d,EAAA0iB,EAAA,GAAOc,EAAAd,EAAA,GAETU,IAAmBpjB,GAASmjB,EAAS9I,WACvCmJ,EAAKpM,QACL+L,EAAS1hB,kBAGP2hB,IAAmBI,GAASL,EAAS9I,WACvCra,EAAMoX,QACN+L,EAAS1hB,oBAKjBwhB,EAAAA,UAAUrF,EAAS,SACdvT,KAAKG,EAAAA,UAAUuY,GAAiBG,EAAAA,eAAeF,GAAsB7gB,EAAAA,IAAI,SAAAshB,GAAG,OAAIA,EAAI,MACpF/Y,UAAU,SAAAgZ,GAAsB,OAAAA,EAAmBtM,WCdpDyD,GAAgC,CACpCvV,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAke,KAC9Bhe,OAAO,GAGHie,GAA2B,CAC/Bte,QAASue,EAAAA,cACTre,YAAaC,EAAAA,WAAW,WAAM,OAAAke,KAC9Bhe,OAAO,iBA+IP,SAAAge,EACYG,EAAkDC,EAClDC,EAAkCzgB,EAA8B0gB,EAChEza,EAAyBmQ,EAAwCtD,EACjE6N,EAA6DC,GAJzE,IAAAviB,EAAAtC,KACYA,KAAAwkB,iBAAAA,EAAkDxkB,KAAAykB,OAAAA,EAClDzkB,KAAA0kB,OAAAA,EAAkC1kB,KAAAiE,UAAAA,EAA8BjE,KAAA2kB,KAAAA,EAChE3kB,KAAAkK,QAAAA,EAAyBlK,KAAAqa,SAAAA,EAAwCra,KAAA+W,UAAAA,EACjE/W,KAAA4kB,aAAAA,EAA6D5kB,KAAA6kB,UAAAA,gBA/HtD,IAAIza,EAAAA,mBACsB,qBACzB,kBAaiC,iBAmDhB,8BAgCd,IAAIlJ,EAAAA,2BAMN,IAAIA,EAAAA,4BAcL,SAACqF,qBACA,mCACM,aAQzBvG,KAAK8kB,kBAAoB5a,EAAQqS,SAASnR,UAAU,WAC9C9I,EAAKyiB,OACP3E,GACI9d,EAAKmiB,OAAO9f,cAAerC,EAAKyiB,MAAMC,SAASrgB,cAAerC,EAAKie,UAA8B,SAAnBje,EAAK2iB,oBAzB7Fze,OAAAC,eACI4d,EAAA/jB,UAAA,WAAQ,KADZ,WAEE,OAAON,KAAKsI,eAEd,SAAa7J,GACXuB,KAAKsI,UAAsB,KAAV7J,GAAiBA,GAAmB,UAAVA,EAEvCuB,KAAKkC,UACPlC,KAAK+kB,MAAMG,SAASzd,iBAAiBzH,KAAKsI,4CAsB9C+b,EAAA/jB,UAAAgH,iBAAA,SAAiBC,GAAiCvH,KAAKmlB,UAAY5d,GAEnE8c,EAAA/jB,UAAAkH,kBAAA,SAAkBD,GAAuBvH,KAAKolB,WAAa7d,GAE3D8c,EAAA/jB,UAAA+kB,0BAAA,SAA0B9d,GAAwBvH,KAAKslB,iBAAmB/d,GAE1E8c,EAAA/jB,UAAAmH,iBAAA,SAAiBC,GAA6B1H,KAAK6B,SAAW6F,GAE9D2c,EAAA/jB,UAAAilB,SAAA,SAASC,GACP,IAAM/mB,EAAQ+mB,EAAE/mB,MAEhB,GAAc,OAAVA,GAAkBA,IAAUG,UAC9B,OAAO,KAGT,IAAM0Z,EAAUtY,KAAKylB,gBAAgBzlB,KAAK4kB,aAAaxJ,UAAU3c,IAEjE,OAAKuB,KAAK+W,UAAUzE,QAAQgG,GAIxBtY,KAAK2S,SAAW2F,EAAQ9H,OAAOR,EAAQI,KAAKpQ,KAAK2S,UAC5C,CAAC2F,QAAW,CAACoN,eAAgB1lB,KAAK2S,UAGvC3S,KAAK4S,SAAW0F,EAAQ7H,MAAMT,EAAQI,KAAKpQ,KAAK4S,UAC3C,CAAC0F,QAAW,CAACqN,cAAe3lB,KAAK4S,eAD1C,EAPS,CAAC0F,QAAW,CAACsN,QAASJ,EAAE/mB,SAYnC4lB,EAAA/jB,UAAA+G,WAAA,SAAW5I,GACTuB,KAAK6lB,OAAS7lB,KAAKylB,gBAAgBzlB,KAAK4kB,aAAaxJ,UAAU3c,IAC/DuB,KAAK8lB,iBAAiB9lB,KAAK6lB,SAG7BxB,EAAA/jB,UAAAylB,iBAAA,SAAiBtnB,EAAeunB,QAAA,IAAAA,IAAAA,GAAA,GAC9BhmB,KAAK6lB,OAAS7lB,KAAKylB,gBAAgBzlB,KAAKwkB,iBAAiBzG,MAAMtf,IAC/DuB,KAAKmlB,UAAUnlB,KAAK6lB,OAAS7lB,KAAK4kB,aAAavJ,QAAQrb,KAAK6lB,QAAqB,KAAVpnB,EAAe,KAAOA,GACzFunB,GAAchmB,KAAK6lB,QACrB7lB,KAAK8lB,iBAAiB9lB,KAAK6lB,SAI/BxB,EAAA/jB,UAAA4B,OAAA,WAAW,QAASlC,KAAK+kB,OAKzBV,EAAA/jB,UAAA6X,KAAA,WAAA,IAAA7V,EAAAtC,KACE,IAAKA,KAAKkC,SAAU,CAClB,IAAM+jB,EAAKjmB,KAAK2kB,KAAKuB,wBAAwB1K,IAC7Cxb,KAAK+kB,MAAQ/kB,KAAK0kB,OAAOyB,gBAAgBF,GAEzCjmB,KAAKomB,mBAAmBpmB,KAAK+kB,MAAMC,SAASrgB,eAC5C3E,KAAKqmB,uBAAuBrmB,KAAK+kB,MAAMG,UACvCllB,KAAKsmB,+BAA+BtmB,KAAK+kB,MAAMG,UAC/CllB,KAAK+kB,MAAMG,SAASngB,WACpB/E,KAAK+kB,MAAMG,SAAS7d,WAAWrH,KAAK4kB,aAAavJ,QAAQrb,KAAK6lB,SAG9D7lB,KAAK+kB,MAAMG,SAAS5d,iBAAiB,SAACiQ,GACpCjV,EAAK+E,WAAWkQ,GAChBjV,EAAK6iB,UAAU5N,KAGjBvX,KAAK+kB,MAAMwB,kBAAkBhb,gBAE7BvL,KAAK+kB,MAAMG,SAASzd,iBAAiBzH,KAAK6B,UAEnB,SAAnB7B,KAAKilB,WACP1G,OAAOO,SAASnC,cAAc3c,KAAKilB,WAAWuB,YAAYxmB,KAAK+kB,MAAMC,SAASrgB,eAIhF6e,GAAaxjB,KAAK+kB,MAAMC,SAASrgB,cAAe3E,KAAKymB,UAErDzmB,KAAK+kB,MAAMG,SAASpN,QAGpB9X,KAAKkK,QAAQW,kBAAkB,WAE7B,IAGI6b,EAHEC,EAAWhD,EAAAA,UAAyBrhB,EAAKuiB,UAAW,SACpC9Z,KAAKG,EAAAA,UAAU5I,EAAKmkB,UAAW7jB,EAAAA,OAAO,SAAA6M,GAAK,OAAAA,EAAEqL,QAAUD,GAAInB,UAGjF,IAAuB,IAAnBpX,EAAKskB,WAAyC,YAAnBtkB,EAAKskB,UAAyB,CAG3D,IAAIC,GAAY,EAChBC,sBAAsB,WAAM,OAAAD,GAAY,IAExCH,EACI/C,EAAAA,UAAsBrhB,EAAKuiB,UAAW,SACjC9Z,KACGG,EAAAA,UAAU5I,EAAKmkB,UAAW7jB,EAAAA,OAAO,SAAAgY,GAAS,OAACiM,GAAavkB,EAAKykB,2BAA2BnM,WAEpG8L,EAAiBM,EAAAA,MAGnBC,EAAAA,KAAY,CAACN,EAAUD,IAAiBtb,UAAU,WAAM,OAAA9I,EAAK4H,QAAQmB,IAAI,WAAM,OAAA/I,EAAK+B,gBAQ1FggB,EAAA/jB,UAAA+D,MAAA,WACMrE,KAAKkC,WACPlC,KAAK0kB,OAAOwC,OAAOlnB,KAAK0kB,OAAOhiB,QAAQ1C,KAAK+kB,MAAMoC,WAClDnnB,KAAK+kB,MAAQ,KACb/kB,KAAKymB,SAASnb,SAOlB+Y,EAAA/jB,UAAAgB,OAAA,WACMtB,KAAKkC,SACPlC,KAAKqE,QAELrE,KAAKmY,QAUTkM,EAAA/jB,UAAAsc,WAAA,SAAWvM,GACLrQ,KAAKkC,UACPlC,KAAK+kB,MAAMG,SAAStI,WAAWvM,IAInCgU,EAAA/jB,UAAA8mB,OAAA,WAAWpnB,KAAKolB,cAEhBf,EAAA/jB,UAAAgE,YAAA,SAAYC,IACNA,EAAiB,SAAKA,EAAiB,UACzCvE,KAAKslB,oBAITjB,EAAA/jB,UAAAoJ,YAAA,WACE1J,KAAKqE,QACLrE,KAAK8kB,kBAAkB5H,eAGjBmH,EAAA/jB,UAAA+lB,gCAAuBgB,cAC7B,CAAC,cAAe,gBAAiB,iBAAkB,eAAgB,UAAW,UAAW,aACxF,cAAe,iBAAkB,eAAgB,mBAC7C5kB,QAAQ,SAAC6kB,GACJhlB,EAAKglB,KAAgB1oB,YACvByoB,EAAmBC,GAAchlB,EAAKglB,MAG9CD,EAAmB1O,UAAY3Y,KAAK2Y,WAAa3Y,KAAK6lB,QAGhDxB,EAAA/jB,UAAA8lB,4BAAmBzhB,GACzB3E,KAAKiE,UAAUY,SAASF,EAAe,iBACvC3E,KAAKiE,UAAUsjB,SAAS5iB,EAAe,UAAW,KAClD3E,KAAKiE,UAAUY,SAASF,EAAe,SAGjC0f,EAAA/jB,UAAAymB,oCAA2BnM,GACjC,OAAQ,CAAC5a,KAAKykB,OAAO9f,cAAe3E,KAAK+kB,MAAMC,SAASrgB,eAAe6iB,KAAK,SAAAC,GAAM,OAAAA,EAAGC,SAAS9M,EAAM5T,WAG9Fqd,EAAA/jB,UAAAgmB,wCAA+Be,cACrCA,EAAmBhL,SAASjR,UAAU,SAAAiF,GAAQ,OAAA/N,EAAK+Z,SAASra,KAAKqO,KACjEgX,EAAmBxb,OAAOT,UAAU,SAAAiF,GAClC/N,EAAKqlB,WAAW3lB,KAAKqO,IACE,IAAnB/N,EAAKskB,WAAyC,WAAnBtkB,EAAKskB,WAClCtkB,EAAK+B,WAKHggB,EAAA/jB,UAAAwlB,0BAAiBrO,GACvBzX,KAAKiE,UAAUsF,YAAYvJ,KAAKykB,OAAO9f,cAAe,QAAS3E,KAAKwkB,iBAAiBtG,OAAOzG,IACxFzX,KAAKkC,WACPlC,KAAK+kB,MAAMG,SAAS7d,WAAWrH,KAAK4kB,aAAavJ,QAAQ5D,IACzDzX,KAAKolB,eAIDf,EAAA/jB,UAAAmlB,yBAAgBpV,GACtB,IAAMiI,EAAUjI,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAAO,KACtE,OAAOnQ,KAAK+W,UAAUzE,QAAQgG,GAAWA,EAAU,0BArVtDrY,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,uBACV6C,SAAU,gBACVC,KAAM,CACJ4kB,UAAW,wCACX7f,WAAY,8CACZE,SAAU,WACVH,aAAc,YAEhBI,UAAW,CAACqT,GAA+B+I,GAA0BxN,iDAtC/D+G,UApBNtY,EAAAA,kBACAsiB,EAAAA,wBACAviB,EAAAA,iBACAwiB,EAAAA,gCACA/Z,EAAAA,cAwBM+I,UADAvE,SADA+I,sCAmK0CzN,EAAAA,OAAMlO,KAAA,CAACooB,EAAAA,kDAhHtDlnB,EAAAA,2BAKAA,EAAAA,6BAKAA,EAAAA,8BAKAA,EAAAA,4BAMAA,EAAAA,uBAKAA,EAAAA,uBAKAA,EAAAA,0BAMAA,EAAAA,2BAMAA,EAAAA,yBAQAA,EAAAA,4BAKAA,EAAAA,+BAKAA,EAAAA,yBAQAA,EAAAA,yBAMAA,EAAAA,0BAQAyC,EAAAA,yBAMAA,EAAAA,yBAEAzC,EAAAA,cC5KHmnB,GAAA,WAqCE,SAAAA,EAAmB9U,GAAAlT,KAAAkT,KAAAA,SAEnB8U,EAAA1nB,UAAA2nB,QAAA,WAAY,OAAQjoB,KAAK+U,WAAa/U,KAAKqQ,KAAKH,QAAUlQ,KAAK8U,cAAgB9U,KAAK6B,+BAnCrFiB,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,yBACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzCE,OAAQ,CAAC,0OAaTpC,KAAM,CACJC,QAAS,YACTilB,qBAAsB,WACtBC,qBAAsB,WACtBC,qBAAsB,YACtBC,kBAAmB,YACnBziB,iBAAkB,WAEpBxC,SAAU,+EA1BJ+R,4CA6BLtU,EAAAA,oBACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,wBACAA,EAAAA,WAnCH,GCAAynB,GAAA,WA2CE,SAAAA,EAAmBpV,GAAAlT,KAAAkT,KAAAA,cAFA,IAAIhS,EAAAA,oBAIvBonB,EAAAhoB,UAAAioB,YAAA,SAAYrY,GAAiBlQ,KAAK6L,OAAO7J,KAAK,IAAIgO,EAAQhQ,KAAKqQ,KAAKJ,KAAMzR,EAAU0R,GAAQ,KAE5FoY,EAAAhoB,UAAAkoB,WAAA,SAAWvY,GAAgBjQ,KAAK6L,OAAO7J,KAAK,IAAIgO,EAAQxR,EAAUyR,GAAOjQ,KAAKqQ,KAAKH,MAAO,yBA1C3FpN,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,mCACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzCE,OAAQ,CAAC,mNAWThC,SAAU,kmBAhBJ+R,oCAiCLtU,EAAAA,wBACAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,sBAEAyC,EAAAA,YAzCH,qFCM+C6N,EAAAA,EAAAA,GAmB7CsX,EAAAnoB,UAAA+Q,eAAA,WAAmB,OAAO,GAE1BoX,EAAAnoB,UAAAgR,UAAA,WAAc,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAEzDmX,EAAAnoB,UAAAiR,iBAAA,WAAqB,OAAO,GAE5BkX,EAAAnoB,UAAAkR,QAAA,SAAQnB,EAAeoB,EAAyBC,GAG9C,YAHqB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9CrB,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAEvCsB,GACN,IAAK,IAIH,OAHApB,EAAOrQ,KAAK0oB,SAASrY,EAAMA,EAAKJ,KAAOyB,IAClCxB,MAAQ,EACbG,EAAKF,IAAM,EACJE,EACT,IAAK,IAGH,OAFAA,EAAOrQ,KAAK2oB,UAAUtY,EAAMA,EAAKH,MAAQwB,IACpCvB,IAAM,EACJE,EACT,IAAK,IACH,OAAOrQ,KAAK4oB,QAAQvY,EAAMA,EAAKF,IAAMuB,GACvC,QACE,OAAOrB,IAIboY,EAAAnoB,UAAAsR,QAAA,SAAQvB,EAAeoB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqB1R,KAAKwR,QAAQnB,EAAMoB,GAASC,IAEjG+W,EAAAnoB,UAAAuR,WAAA,SAAWxB,GACT,IAAMF,EAAMnQ,KAAK6oB,YAAYxY,GAAMyB,SAEnC,OAAe,IAAR3B,EAAY,EAAIA,GAGzBsY,EAAAnoB,UAAAyR,cAAA,SAAcC,EAAiBC,GAEN,IAAnBA,IACFA,EAAiB,GAGnB,IACM5B,EAAO2B,GADU,GAAQC,GAAkB,GAG3CtB,EAAS3Q,KAAK6oB,YAAYxY,GAChCM,EAAOgB,QAAQhB,EAAOG,UAAY,GAAKH,EAAOmB,UAAY,IAC1D,IAAMI,EAAOvB,EAAOM,UACd6X,EAAU9oB,KAAK6oB,YAAY,IAAI7Y,EAAQK,EAAKJ,KAAM,EAAG,IAC3D,OAAOjR,KAAKM,MAAMN,KAAKoT,OAAOF,EAAO4W,EAAQ7X,WAAa,OAAY,GAAK,GAG7EwX,EAAAnoB,UAAA+R,SAAA,WAAsB,OAAOrS,KAAK+oB,cAAc,IAAI/X,OAGpDyX,EAAAnoB,UAAAgS,QAAA,SAAQjC,GACN,OAAOA,GAAQnR,EAASmR,EAAKJ,OAAS/Q,EAASmR,EAAKH,QAAUhR,EAASmR,EAAKF,OACvEhR,MAAMa,KAAK6oB,YAAYxY,GAAMY,YAG5BwX,EAAAnoB,UAAAsoB,iBAAQvY,EAAeF,GAC7BA,GAAOA,EACP,IAAI6Y,EAAQhpB,KAAKipB,gBAAgB5Y,EAAKH,MAAOG,EAAKJ,MAClD,GAAIE,GAAO,EACT,KAAOA,GAAO,GACZE,EAAOrQ,KAAK2oB,UAAUtY,EAAMA,EAAKH,MAAQ,GAEzCC,GADA6Y,EAAQhpB,KAAKipB,gBAAgB5Y,EAAKH,MAAOG,EAAKJ,WAG3C,GAAU+Y,EAAN7Y,EACT,KAAa6Y,EAAN7Y,GACLA,GAAO6Y,EACP3Y,EAAOrQ,KAAK2oB,UAAUtY,EAAMA,EAAKH,MAAQ,GACzC8Y,EAAQhpB,KAAKipB,gBAAgB5Y,EAAKH,MAAOG,EAAKJ,MAIlD,OADAI,EAAKF,IAAMA,EACJE,GAGDoY,EAAAnoB,UAAAqoB,mBAAUtY,EAAeH,GAI/B,OAHAA,GAASA,EACTG,EAAKJ,KAAOI,EAAKJ,KAAOjR,KAAKM,OAAO4Q,EAAQ,GAAK,IACjDG,EAAKH,MAAQlR,KAAKM,QAAQ4Q,EAAQ,GAAK,GAAK,IAAM,IAAM,EACjDG,GAGDoY,EAAAnoB,UAAAooB,kBAASrY,EAAeJ,GAE9B,OADAI,EAAKJ,MAAQA,EACNI,uBA3GV3Q,EAAAA,gBAC8C6S,GCQ/C,SAAA2W,GAA6BC,GAC3B,IAAMlZ,EAAOkZ,EAAMvY,cACnB,OAAOX,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAKA,EAAO,KAAQ,EAoB9D,SAAAmZ,GAAalG,EAAWzU,GACtB,OAAOyU,EAAIzU,EAAIzP,KAAKM,MAAM4jB,EAAIzU,GAYhC,IAAM4a,GAAkB,UAClBC,GAAgB,4FAGuBnY,EAAAA,EAAAA,GAK3CoY,EAAAjpB,UAAAyoB,cAAA,SAAcI,GACZ,IAAMK,EAAQL,EAAMvY,cAAe6Y,EAASN,EAAMtY,WAAY6Y,EAAOP,EAAMrY,UAEvE6Y,EAAYN,GAAkB,EAAI,KAAOG,EAAQ,GAAKxqB,KAAKM,OAAOkqB,EAAQ,GAAK,IAC9ExqB,KAAKM,OAAOkqB,EAAQ,GAAK,KAAOxqB,KAAKM,OAAOkqB,EAAQ,GAAK,KAC1DxqB,KAAKM,OACA,KAAOmqB,EAAS,GAAK,KAAO,IAAMA,EAAS,GAAK,EAAI,EAAIP,GAAoBC,IAAU,GAAK,GAAKO,GAGnGrV,GAFNsV,EAAY3qB,KAAKM,MAAMqqB,GAAa,IAEXL,GACnBM,EAAQ5qB,KAAKM,OAAO,GAAK+U,EAAO,OAAS,OAC3CwV,EAAS7qB,KAAK8qB,MAAMzV,EAAO,GArCnC,SAAA0V,EAA6B9Z,GAC3B,OAAoB,KAAZA,EAAO,GAAWjR,KAAKM,OAAO,EAAI,GAAK2Q,GAAQ,IAoCjB8Z,CAAoBH,IAAU,MAClEC,EAAS7qB,KAAKD,IAAI8qB,EAAQ,IAC1B,IAAMG,EAAOhrB,KAAK8qB,KAAKzV,EA/C3B,SAAA4V,EAA8BL,EAAeC,GAC3C,OAAO7qB,KAAK8qB,KAAK,KAAOD,GAAwB,KAAbD,EAAQ,GAAW5qB,KAAKM,OAAO,EAAI,GAAKsqB,GAAS,IA8CpDK,CAAqBL,EAAOC,IAAW,EACrE,OAAO,IAAI7Z,EAAQ4Z,EAAOC,EAAS,EAAGG,IAOxCT,EAAAjpB,UAAAuoB,YAAA,SAAYqB,GACV,IAAMN,EAAQM,EAAMja,KACd4Z,EAASK,EAAMha,MAAQ,EAEvByZ,EADOO,EAAM/Z,IAERnR,KAAK8qB,KAAK,KAAOD,GAAwB,KAAbD,EAAQ,GAAW5qB,KAAKM,OAAO,EAAI,GAAKsqB,GAAS,IAAMN,GAAgB,EAExGa,EAAMnrB,KAAKM,MAAMqqB,EAAY,IAAO,GAAKS,EAASD,EAAMd,GACxDgB,EAAarrB,KAAKM,MAAM8qB,EAAS,QAASE,EAAMlB,GAAIgB,EAAQ,QAASG,EAAOvrB,KAAKM,MAAMgrB,EAAM,OAC7FE,EAAQpB,GAAIkB,EAAK,OAAQG,EAAOzrB,KAAKM,MAAMkrB,EAAQ,MAAOE,EAAQtB,GAAIoB,EAAO,MAC7EG,EAAS3rB,KAAKM,MAAMorB,EAAQ,KAC9Bza,EAAoB,IAAboa,EAA0B,IAAPE,EAAoB,EAAPE,EAAWE,EACvC,IAATJ,GAAyB,IAAXI,GAClB1a,IAGF,IAGM2a,EAAUT,GAHGd,GAAkB,KAAOpZ,EAAO,GAAKjR,KAAKM,OAAO2Q,EAAO,GAAK,GAAKjR,KAAKM,OAAO2Q,EAAO,GAAK,KACzGjR,KAAKM,OAAO2Q,EAAO,GAAK,MAOtB4a,EAAUV,EAHJd,GAAkB,EAAI,KAAOpZ,EAAO,GAAKjR,KAAKM,OAAO2Q,EAAO,GAAK,GAAKjR,KAAKM,OAAO2Q,EAAO,GAAK,KACtGjR,KAAKM,OAAO2Q,EAAO,GAAK,KAAOjR,KAAKM,MAAM,IAAM,IAAM4pB,GAAoB,IAAIlY,KAAKf,EAAM,EAAG,KAAO,GAAK,GAAK,GAErF,EAAIiZ,GAAoB,IAAIlY,KAAKf,EAAM,EAAG,IAAM,EAAI,EAE1EC,EAAQlR,KAAKM,OAA6B,IAArBsrB,EAAUC,GAAgB,KAAO,KACtDC,EAAOzB,GAAkB,EAAI,KAAOpZ,EAAO,GAAKjR,KAAKM,OAAO2Q,EAAO,GAAK,GAAKjR,KAAKM,OAAO2Q,EAAO,GAAK,KACvGjR,KAAKM,OAAO2Q,EAAO,GAAK,KACxBjR,KAAKM,OACA,IAAM4Q,EAAQ,KAAO,IAAMA,GAAS,EAAI,EAAIgZ,GAAoB,IAAIlY,KAAKf,EAAMC,EAAQ,EAAG,KAAO,GAAK,GACvG,GAIR,OAAO,IAAIc,KAAKf,EAAMC,EAAQ,EAFlBia,EAAMW,EAAO,IAU3BvB,EAAAjpB,UAAA2oB,gBAAA,SAAgB/Y,EAAeD,GAC7BA,GAAcjR,KAAKM,MAAM4Q,EAAQ,IAEjC,IAAIvN,EAAS,IADbuN,GAAUA,EAAQ,GAAK,GAAM,GACH,EAI1B,OAHc,KAAVA,GAvHR,SAAA6a,EAA2BnB,GACzB,OAAQ,GAAK,GAAKA,GAAS,GAAK,GAsHVmB,CAAkB9a,IACpCtN,IAEKA,uBA7EVjD,EAAAA,gBAC4C+oB,IC1CvCuC,GAAuB,IAAIha,KAAK,KAAM,GAAI,IAC1Cia,GAAsB,IAAIja,KAAK,KAAM,GAAI,IACzCka,GAAc,KAIdC,GAAe,CAEnB,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,sGAS8Cha,EAAAA,EAAAA,GAK9Cia,EAAA9qB,UAAAyoB,cAAA,SAAcI,GACZ,IAAIa,EAAO,EACPqB,EAbR,SAAAC,EAAqBC,EAAaC,GAChC,IAAMC,EAAOzsB,KAAK0sB,IAAIH,EAAMta,UAAYua,EAAMva,WAC9C,OAAOjS,KAAKoT,MAAMqZ,EAjIJ,OA4IGH,CAAYnC,EAAO6B,IAClC,KAAwD,GAApD7B,EAAMlY,UAAY+Z,GAAqB/Z,WAAkBkY,EAAMlY,UAAYga,GAAoBha,WAAa,GAuB9G,OAAOyE,EAAApV,UAAMyoB,cAAapZ,KAAA3P,KAACmpB,GArB3B,IADA,IAAIlZ,EAAO,KACFP,EAAI,EAAGA,EAAIyb,GAAaxoB,OAAQ+M,IAAKO,IAC5C,IAAK,IAAI0b,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,GAAaT,GAAazb,GAAGic,GAAK,GACtC,GAAIN,GAAYO,EAYd,OAVWA,GADX5B,EAAOqB,EAAW,KAEhBrB,EAAO,EACP2B,KAEM,GAAJA,IACFA,EAAI,EACJ1b,KAIK,IAAID,EADHC,EADC0b,EAE0B,EAAG3B,GAExCqB,GAAsBO,IAU9BR,EAAA9qB,UAAAuoB,YAAA,SAAYqB,GACV,IAAMN,EAAQM,EAAMja,KACd4Z,EAASK,EAAMha,MAAQ,EACvB8Z,EAAOE,EAAM/Z,IACfgZ,EAAQ,IAAInY,KAAKga,IACjBa,EAAU7B,EAAO,EACrB,GAAakB,IAATtB,GAAwBA,GAjLd,KAiLkC,CAC9C,IAAK,IAAIkC,EAAI,EAAGA,EAAIlC,EAAQsB,GAAaY,IACvC,IAAK,IAAIzc,EAAI,EAAGA,EAAI,GAAIA,IACtBwc,IAAYV,GAAaW,GAAGzc,GAAK,GAGrC,IAASA,EAAI,EAAGA,EAAIwa,EAAQxa,IAC1Bwc,IAAYV,GAAavB,EAAQsB,IAAa7b,GAAK,GAErD8Z,EAAMxX,QAAQqZ,GAAqBla,UAAY+a,QAE/C1C,EAAQzT,EAAApV,UAAMuoB,YAAWlZ,KAAA3P,KAACkqB,GAE5B,OAAOf,GAOTiC,EAAA9qB,UAAA2oB,gBAAA,SAAgBY,EAAgBD,GAC9B,OAAasB,IAATtB,GAAwBA,GAtMd,MAwMJuB,GADIvB,EAAQsB,IACMrB,EAAS,GAAK,GAEnCnU,EAAApV,UAAM2oB,gBAAetZ,KAAA3P,KAAC6pB,EAAQD,wBArExClqB,EAAAA,gBAC+C6pB,sFC/INpY,EAAAA,EAAAA,GACxC4a,EAAAzrB,UAAA8a,UAAA,SAAU/K,GACR,OAAQA,GAAQA,EAAKO,YAAe,CAACX,KAAMI,EAAKO,cAAeV,MAAOG,EAAKQ,WAAa,EAAGV,IAAKE,EAAKS,WACjE,MAGtCib,EAAAzrB,UAAA+a,QAAA,SAAQhL,GACN,OAAOA,GAAQA,EAAKJ,MAAQI,EAAKH,MAAQ,IAAIc,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,IAAK,IAAM,0BARhGzQ,EAAAA,gBACyC4b,ICC1C,SAAAuN,GAA4BmD,GAC1B,IACI3b,EAAO4b,GAuMb,SAAAC,EAAwBC,EAAeC,EAAgBC,GACrD,IAAI7c,EAAI8c,GAAOH,GACf,OAAOI,GAAkB/c,EAAEgd,GAAI,EAAGhd,EAAEid,OAAwB,IAAdL,EAAS,GAAUM,GAAIN,EAAQ,IAAMA,EAAS,GAAKC,EAAO,EA1M9FH,CAAeF,EAAW/b,KAAM+b,EAAW9b,MAAO8b,EAAW7b,MAGvE,OADAE,EAAKsc,SAAS,EAAG,GAAI,EAAG,KACjBtc,EAQT,SAAA0Y,GAA8B6D,GAE5B,OAoJF,SAAAC,EAAwBC,GACtB,IAEqGC,EACjGC,EAAaC,EAHbT,EAAKP,GAAkBa,GAAiBlc,cAExCsc,EAAaV,EAAK,IAAKhd,EAAI8c,GAAOY,GAAaC,EAAeZ,GAAkBC,EAAI,EAAGhd,EAAEid,OAK7F,GAAoB,IADpBQ,EAAeH,EAAkBK,GACV,CACrB,GAAIF,GAAgB,IAIlB,OAFAD,EAAc,EAAIN,GAAIO,EAAc,IACpCF,EAAY3D,GAAI6D,EAAc,IAAM,EAC7B,IAAIjd,EAAQkd,EAAYF,EAAaD,GAG5CE,GAAgB,SAIlBC,GAAc,EACdD,GAAgB,IACD,IAAXzd,EAAE4d,OACJH,GAAgB,GAMpB,OAHAD,EAAc,EAAIN,GAAIO,EAAc,IACpCF,EAAY3D,GAAI6D,EAAc,IAAM,EAE7B,IAAIjd,EAAQkd,EAAYF,EAAaD,GAjLrCF,CADGN,GAAkBK,EAAMhc,cAAegc,EAAM/b,WAAa,EAAG+b,EAAM9b,YAS/E,SAAAuc,GAA+Bhd,EAAeH,GAI5C,OAHAA,GAASA,EACTG,EAAKJ,KAAOI,EAAKJ,KAAOjR,KAAKM,OAAO4Q,EAAQ,GAAK,IACjDG,EAAKH,MAAQlR,KAAKM,QAAQ4Q,EAAQ,GAAK,GAAK,IAAM,IAAM,EACjDG,EAsBT,SAAAid,GAAapK,EAAWzU,GACtB,OAAOyU,EAAIzU,EAAIzP,KAAKM,MAAM4jB,EAAIzU,GAGhC,SAAAie,GAAaxJ,EAAWzU,GACtB,OAAOzP,KAAKuuB,MAAMrK,EAAIzU,GAgBxB,SAAA6d,GAAgBY,GAEd,IAYIM,EAZAC,EACA,EAAE,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtGC,EAAeD,EAAO9qB,OACtB6mB,EAAQ0D,EAAa,IACvBS,GAAS,GACTC,EAAKH,EAAO,GAEhB,GAAIP,EAAaU,GAAoBH,EAAOC,EAAe,IAApCR,EACrB,MAAM,IAAIrU,MAAM,uBAAyBqU,GAK3C,IAAK,IAAIxd,EAAI,EAAGA,EAAIge,EAAche,GAAK,EAAG,CACxC,IAAMme,EAAKJ,EAAO/d,GAElB,GADA8d,EAAOK,EAAKD,EACRV,EAAaW,EACf,MAEFF,EAAQA,EAAwB,EAAhBjB,GAAIc,EAAM,IAAUd,GAAItD,GAAIoE,EAAM,IAAK,GACvDI,EAAKC,EAEP,IAAIze,EAAI8d,EAAaU,EAIrBD,EAAQA,EAAqB,EAAbjB,GAAItd,EAAG,IAAUsd,GAAItD,GAAIha,EAAG,IAAM,EAAG,GAC/B,IAAlBga,GAAIoE,EAAM,KAAaA,EAAOpe,GAAM,IACtCue,GAAS,GAIX,IAGMlB,EAAQ,GAAKkB,GAHLjB,GAAIlD,EAAO,GAAKkD,GAA4B,GAAvBA,GAAIlD,EAAO,KAAO,GAAQ,GAAK,KAM9DgE,EAAOpe,EAAI,IACbA,EAAIA,EAAIoe,EAA2B,GAApBd,GAAIc,EAAO,EAAG,KAE/B,IAAIJ,EAAOhE,GAAIA,GAAIha,EAAI,EAAG,IAAM,EAAG,GAKnC,OAJc,IAAVge,IACFA,EAAO,GAGF,CAACA,KAAMA,EAAMZ,GAAIhD,EAAOiD,MAAOA,GAaxC,SAAAR,GAA2Ba,GACzB,IAAInB,EAAI,EAAImB,EAAkB,UAExBpd,EAA2B,EAAvBgd,GAAItD,GADduC,EAAIA,EAA+D,EAA3De,GAAmD,EAA/CA,GAAI,EAAII,EAAkB,UAAW,QAAa,GAAS,KAClD,MAAO,GAAS,IAC/BpD,EAAOgD,GAAItD,GAAI1Z,EAAG,KAAM,GAAK,EAC7B+Z,EAASL,GAAIsD,GAAIhd,EAAG,KAAM,IAAM,EAChC8Z,EAAQkD,GAAIf,EAAG,MAAQ,OAASe,GAAI,EAAIjD,EAAQ,GAEtD,OAAO,IAAIzY,KAAKwY,EAAOC,EAAS,EAAGC,GAUrC,SAAA6C,GAA2BC,EAAYsB,EAAYC,GACjD,IAAIvf,EAAIke,GAAqC,MAAhCF,EAAKE,GAAIoB,EAAK,EAAG,GAAK,QAAgB,GAAKpB,GAAI,IAAMtD,GAAI0E,EAAK,EAAG,IAAM,EAAG,GAAKC,EAAK,SAEjG,OADAvf,EAAIA,EAAIke,GAA6C,EAAzCA,GAAIF,EAAK,OAASE,GAAIoB,EAAK,EAAG,GAAI,KAAU,GAAK,IA2D/D,SAAA7E,GAAyB/Y,EAAeD,GACtC,OAAIC,GAAS,EACJ,GAELA,GAAS,GACJ,GAEiB,IAAtBoc,GAAOrc,GAAMmd,KACR,GAEF,yFCzN+Bjc,EAAAA,EAAAA,GACtC6c,EAAA1tB,UAAA+Q,eAAA,WAAmB,OAAO,GAE1B2c,EAAA1tB,UAAAgR,UAAA,WAAc,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAEzD0c,EAAA1tB,UAAAiR,iBAAA,WAAqB,OAAO,GAE5Byc,EAAA1tB,UAAAkR,QAAA,SAAQnB,EAAeoB,EAAyBC,GAG9C,YAHqB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9CrB,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAEvCsB,GACN,IAAK,IAIH,OAHApB,EDGR,SAAA4d,EAA8B5d,EAAe6d,GAE3C,OADA7d,EAAKJ,MAAQie,EACN7d,ECLM4d,CAAc5d,EAAMA,EAAKJ,KAAOyB,IAClCxB,MAAQ,EACbG,EAAKF,IAAM,EACJE,EACT,IAAK,IAGH,OAFAA,EAAOgd,GAAehd,EAAMA,EAAKH,MAAQwB,IACpCvB,IAAM,EACJE,EACT,IAAK,IACH,ODMR,SAAA8d,EAA6B9d,EAAeF,GAC1C,IAAI6Y,EAAQC,GAAgB5Y,EAAKH,MAAOG,EAAKJ,MAC7C,GAAIE,GAAO,EACT,KAAOA,GAAO,GAGZA,GADA6Y,EAAQC,IADR5Y,EAAOgd,GAAehd,EAAMA,EAAKH,MAAQ,IACZA,MAAOG,EAAKJ,WAGtC,GAAU+Y,EAAN7Y,EACT,KAAa6Y,EAAN7Y,GACLA,GAAO6Y,EAEPA,EAAQC,IADR5Y,EAAOgd,GAAehd,EAAMA,EAAKH,MAAQ,IACZA,MAAOG,EAAKJ,MAI7C,OADAI,EAAKF,IAAMA,EACJE,ECtBM8d,CAAa9d,EAAMA,EAAKF,IAAMuB,GACvC,QACE,OAAOrB,IAIb2d,EAAA1tB,UAAAsR,QAAA,SAAQvB,EAAeoB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqB1R,KAAKwR,QAAQnB,EAAMoB,GAASC,IAEjGsc,EAAA1tB,UAAAuR,WAAA,SAAWxB,GACT,IAAMF,EAAM0Y,GAAYxY,GAAMyB,SAE9B,OAAe,IAAR3B,EAAY,EAAIA,GAGzB6d,EAAA1tB,UAAAyR,cAAA,SAAcC,EAAiBC,GAEN,IAAnBA,IACFA,EAAiB,GAGnB,IACM5B,EAAO2B,GADU,GAAQC,GAAkB,GAG3CtB,EAASkY,GAAYxY,GAC3BM,EAAOgB,QAAQhB,EAAOG,UAAY,GAAKH,EAAOmB,UAAY,IAC1D,IAAMI,EAAOvB,EAAOM,UACd0H,EAAYkQ,GAAY,IAAI7Y,EAAQK,EAAKJ,KAAM,EAAG,IACxD,OAAOjR,KAAKM,MAAMN,KAAKoT,OAAOF,EAAOyG,EAAU1H,WAAa,OAAY,GAAK,GAG/E+c,EAAA1tB,UAAA+R,SAAA,WAAsB,OAAO0W,GAAc,IAAI/X,OAE/Cgd,EAAA1tB,UAAAgS,QAAA,SAAQjC,GACN,OAAOA,GAAQjR,EAAUiR,EAAKJ,OAAS7Q,EAAUiR,EAAKH,QAAU9Q,EAAUiR,EAAKF,OAC1EhR,MAAM0pB,GAAYxY,GAAMY,gCAxDhCvR,EAAAA,gBACuC6S,GCRxC6b,GAAA,gCAsDSA,EAAA3qB,QAAP,WAAwC,MAAO,CAACC,SAAU0qB,wBAtB3DzqB,EAAAA,SAAQhE,KAAA,CAAC,CACRiE,aAAc,CACZ4X,GAAekC,GAAwBE,GAAyB0K,GAA+BN,GAC/F3D,IAEFxgB,QAAS,CAAC2X,GAAe6I,IACzBvgB,QAAS,CAACC,EAAAA,aAAcsqB,EAAAA,aACxBnmB,UAAW,CACT,CAAClC,QAASuM,EAAa+b,SAAUld,GACjC,CAACpL,QAASmP,GAAmBmZ,SAAU9Y,IACvC,CAACxP,QAAS6X,GAAwByQ,SAAUxQ,IAC5C,CAAC9X,QAASsV,GAAgBgT,SAAUnT,KAEtC1V,gBAAiB,CAAC+V,UA7CpB,8CCU8C,iBAChB,yCAH7B9b,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,mICwBvB,SAAA2uB,EACkDC,EAAkB9S,EACxDzX,GADsCjE,KAAAwuB,SAAAA,EAAkBxuB,KAAA0b,YAAAA,EACxD1b,KAAAiE,UAAAA,iBALW,sBACd,SAMTsqB,EAAAjuB,UAAAmuB,YAAA,SAAY3nB,GAAU,OAAO9G,KAAK0b,YAAY/W,cAAc+iB,SAAS5gB,EAAOE,SAE5EunB,EAAAjuB,UAAA0e,SAAA,SAAS0P,EAAWnO,GAClBvgB,KAAK2uB,eAAevO,GAAiBsO,EAAW1uB,KAAK0b,YAAY/W,cAAe4b,KAGlFgO,EAAAjuB,UAAAquB,eAAA,SAAeC,GAEb5uB,KAAKiE,UAAUS,YAAY1E,KAAK0b,YAAY/W,cAAckqB,WAAY,UACtE7uB,KAAKiE,UAAUS,YAAY1E,KAAK0b,YAAY/W,cAAckqB,WAAY,aAMnC,KALnC7uB,KAAKugB,UAAYqO,GAKFpM,OAAO,QACpBxiB,KAAKiE,UAAUY,SAAS7E,KAAK0b,YAAY/W,cAAckqB,WAAY,UAEnE7uB,KAAKiE,UAAUY,SAAS7E,KAAK0b,YAAY/W,cAAckqB,WAAY,iCA9BxE5uB,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,oBACV8C,KAAM,CAAC8rB,wBAAyB,OAAQ1gB,eAAgB,oBAAqB2gB,qBAAsB,sFAO9FlhB,EAAAA,OAAMlO,KAAA,CAACwG,EAAAA,WAAW,WAAM,OAAA6oB,eA1B7BzpB,EAAAA,kBAGAD,EAAAA,gCAgEA,SAAA2pB,EAA0DT,EAAkB9S,GAAlB1b,KAAAwuB,SAAAA,EAAkBxuB,KAAA0b,YAAAA,EAC1E1b,KAAKkvB,SAAWxT,EAAY/W,qBAG9BsqB,EAAA3uB,UAAAmuB,YAAA,SAAY3nB,GAAU,OAAO9G,KAAK0b,YAAY/W,cAAc+iB,SAAS5gB,EAAOE,6BAX7E/G,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,sBACV8C,KAAM,CAACC,QAAS,kBAAmBksB,gBAAiB,OAAQC,uBAAwB,8FAKvEvhB,EAAAA,OAAMlO,KAAA,CAACwG,EAAAA,WAAW,WAAM,OAAA6oB,eAnErCzpB,EAAAA,kCAyFA,SAAA8pB,EAAmDb,EAAUc,UAC3D5Z,EAAA/F,KAAA3P,KAAMwuB,EAAUc,IAAWtvB,YAFQmR,EAAAA,EAAAA,GAKrCke,EAAA/uB,UAAAivB,WAAA,WAAevvB,KAAKwuB,SAASltB,8BAf9BrB,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,sBACV8C,KAAM,CACJC,QAAS,kBACTksB,gBAAiB,OACjBC,uBAAwB,oBACxBI,UAAW,gBAEbtnB,UAAW,CAAC,CAAClC,QAASipB,GAAmB/oB,YAAaC,EAAAA,WAAW,WAAM,OAAAkpB,+EAG1DxhB,EAAAA,OAAMlO,KAAA,CAACwG,EAAAA,WAAW,WAAM,OAAA6oB,eAzFrCzpB,EAAAA,iBAwFqC0pB,kBAgDrC,SAAAD,EACYS,EAAoCxuB,EAAqD4jB,EACzF3a,GAFZ,IAAA5H,EAAAtC,KACYA,KAAAyvB,gBAAAA,EAAyFzvB,KAAA6kB,UAAAA,EACzF7kB,KAAAkK,QAAAA,gBArCO,IAAIE,EAAAA,oBAmBA,kBAcA,IAAIlJ,EAAAA,aAKzBlB,KAAKugB,UAAYtf,EAAOsf,UACxBvgB,KAAK4mB,UAAY3lB,EAAO2lB,UACxB5mB,KAAK8kB,kBAAoB5a,EAAQqS,SAASnR,UAAU,WAAQ9I,EAAKotB,yBAGnEV,EAAA1uB,UAAAyE,SAAA,WACM/E,KAAK2vB,OACP3vB,KAAK2vB,MAAMhB,eAAe/f,MAAMwT,QAAQpiB,KAAKugB,WAAcvgB,KAAKugB,UAAU,GAAMvgB,KAA2B,WAGzGA,KAAK4vB,OACP5vB,KAAK6vB,qBAOTb,EAAA1uB,UAAA4B,OAAA,WAAoB,OAAOlC,KAAK4vB,OAKhCZ,EAAA1uB,UAAA6X,KAAA,WACOnY,KAAK4vB,QACR5vB,KAAK4vB,OAAQ,EACb5vB,KAAK0vB,gBACL1vB,KAAK8vB,WAAW9tB,MAAK,GACrBhC,KAAK6vB,sBAIDb,EAAA1uB,UAAAuvB,wCACF7vB,KAAK4mB,WACP5mB,KAAKkK,QAAQW,kBAAkB,WAC7B,IAAM8b,EAAWhD,EAAAA,UAAyBrhB,EAAKuiB,UAAW,SACpC9Z,KAAKG,EAAAA,UAAU5I,EAAKmkB,UAAW7jB,EAAAA,OAAO,SAAAgY,GAAS,OAAAA,EAAME,QAAUD,GAAInB,UAEnFqW,EAAUpM,EAAAA,UAAsBrhB,EAAKuiB,UAAW,SACjC9Z,KAAKG,EAAAA,UAAU5I,EAAKmkB,UAAW7jB,EAAAA,OAAO,SAAAgY,GAAS,OAAAtY,EAAK0tB,sBAAsBpV,MAE/FqM,EAAAA,KAAY,CAACN,EAAUoJ,IAAUhlB,KAAKG,EAAAA,UAAU5I,EAAKmkB,WAAWrb,UAAU,WAAM,OAAA9I,EAAK4H,QAAQmB,IAAI,WAC/F/I,EAAK+B,QACL/B,EAAKmtB,gBAAgBnT,sBAS7B0S,EAAA1uB,UAAA+D,MAAA,WACMrE,KAAK4vB,QACP5vB,KAAK4vB,OAAQ,EACb5vB,KAAKymB,SAASnb,OACdtL,KAAK8vB,WAAW9tB,MAAK,KAOzBgtB,EAAA1uB,UAAAgB,OAAA,WACMtB,KAAKkC,SACPlC,KAAKqE,QAELrE,KAAKmY,QAID6W,EAAA1uB,UAAA0vB,+BAAsBpV,GAC5B,GAAqB,IAAjBA,EAAMqV,SAAiBjwB,KAAKkwB,mBAAmBtV,GAAQ,CACzD,IAAuB,IAAnB5a,KAAK4mB,UACP,OAAO,EACF,GAAuB,WAAnB5mB,KAAK4mB,WAA0B5mB,KAAKmwB,iBAAiBvV,GAC9D,OAAO,EACF,GAAuB,YAAnB5a,KAAK4mB,YAA4B5mB,KAAKmwB,iBAAiBvV,GAChE,OAAO,EAGX,OAAO,GAGToU,EAAA1uB,UAAAoJ,YAAA,WACE1J,KAAKymB,SAASnb,OACdtL,KAAK8kB,kBAAkB5H,eAGjB8R,EAAA1uB,UAAA4vB,4BAAmBppB,GAAU,OAAO9G,KAAKowB,QAAQ3B,YAAY3nB,IAE7DkoB,EAAA1uB,UAAA6vB,0BAAiBrpB,GAAU,QAAO9G,KAAK2vB,OAAQ3vB,KAAK2vB,MAAMlB,YAAY3nB,IAEtEkoB,EAAA1uB,UAAAovB,yBACF1vB,KAAKkC,UAAYlC,KAAK2vB,OACxB3vB,KAAK2vB,MAAM3Q,SAAShf,KAAKowB,QAAQlB,SAAUlvB,KAAKugB,gCAvIrDtgB,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,gBAAiB6C,SAAU,cAAeC,KAAM,CAACoL,eAAgB,yDA7FrFJ,EAAAA,yBAKMqiB,sCA8HsExiB,EAAAA,OAAMlO,KAAA,CAACooB,EAAAA,mBAvInFha,EAAAA,yCAsGCuiB,EAAAA,aAAY3wB,KAAA,CAAC4uB,qBAEb+B,EAAAA,aAAY3wB,KAAA,CAACsvB,uBASbpuB,EAAAA,qBAKAA,EAAAA,MAAKlB,KAAA,CAAC,2BAQNkB,EAAAA,0BAMAyC,EAAAA,eCvIGitB,GAA0B,CAACvB,GAAaC,GAAmBI,GAAmBd,uCAU3EiC,EAAA/sB,QAAP,WAAwC,MAAO,CAACC,SAAU8sB,wBAR3D7sB,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAc2sB,GAAyB1sB,QAAS0sB,YCR3DE,GAAA,oDAEC3tB,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,qBACVkD,SAAU,GACVJ,KAAM,CAAC0tB,UAAW,sHAGjB7vB,EAAAA,WARH,OCCE8vB,eAAA,EACAC,IAAA,SADAD,gBAAc,uBACdC,KAAG,MCFL,IAAAC,GAAA,WA+CE,SAAAA,EAA8B/R,EAAkB2F,EAAyCxgB,GAAzCjE,KAAAykB,OAAAA,EAAyCzkB,KAAAiE,UAAAA,iBARnD,iBAElB,oBAIc,IAAI/C,EAAAA,aAGpClB,KAAK6kB,UAAY/F,EACjB0E,GAAaxjB,KAAKykB,OAAO9f,cAAe3E,KAAK8wB,qBAG/CD,EAAAvwB,UAAAywB,cAAA,SAAcjqB,IACU,IAAlB9G,KAAKgxB,UAAqBhxB,KAAKykB,OAAO9f,gBAAkBmC,EAAOE,QACjEhH,KAAKixB,QAAQC,GAAoBP,iBAIrCE,EAAAvwB,UAAA6wB,OAAA,SAAOrqB,GACD9G,KAAKuK,WAAazD,EAAOsqB,kBAC3BpxB,KAAKixB,QAAQC,GAAoBN,MAIrCC,EAAAvwB,UAAA2wB,QAAA,SAAQI,GAAgBrxB,KAAK8wB,aAAa9uB,KAAKqvB,IAE/CR,EAAAvwB,UAAAyE,SAAA,WACE/E,KAAKsxB,aAAetxB,KAAK6kB,UAAU0M,cACnCvxB,KAAKiE,UAAUY,SAAS7E,KAAK6kB,UAAU2M,KAAM,eAG/CX,EAAAvwB,UAAAmxB,gBAAA,WACOzxB,KAAKykB,OAAO9f,cAAc+iB,SAAS5I,SAASyS,gBAC/CvxB,KAAKykB,OAAO9f,cAAqB,MAAEsY,MAAMjd,KAAKykB,OAAO9f,cAAe,KAIxEksB,EAAAvwB,UAAAoJ,YAAA,WACE,IAGIgT,EAHE8U,EAAOxxB,KAAK6kB,UAAU2M,KACtBE,EAAc1xB,KAAKsxB,cAIvB5U,EADEgV,GAAeA,EAAmB,OAAKF,EAAK9J,SAASgK,GACtCA,EAEAF,GAEG,MAAEvU,MAAMP,EAAgB,IAE9C1c,KAAKsxB,aAAe,KACpBtxB,KAAKiE,UAAUS,YAAY8sB,EAAM,mCAzEpC1uB,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,mBACV8C,KAAM,CACJ0tB,UAAW,qEACXxtB,KAAQ,SACR8R,SAAY,KACZ2c,cAAe,iBACfnC,UAAW,wBACXoC,yBAA0B,kBAE5BxuB,SAAU,0SAoBGyK,EAAAA,OAAMlO,KAAA,CAACooB,EAAAA,mBAxCpBxiB,EAAAA,kBACAD,EAAAA,qDA8BCzE,EAAAA,wBACAA,EAAAA,wBACAA,EAAAA,wBACAA,EAAAA,oBACAA,EAAAA,2BACAA,EAAAA,4BAEAyC,EAAAA,OAAM3D,KAAA,CAAC,gBA7CV,GCUAkyB,GACE,SAAAA,GAAmBC,EAAqBC,EAA0BC,GAA/ChyB,KAAA8xB,MAAAA,EAAqB9xB,KAAA+xB,QAAAA,EAA0B/xB,KAAAgyB,aAAAA,GAGpEC,GAAA,WAIE,SAAAA,EACYC,EAAoBC,EAA6BC,EACjDnuB,EAA8BouB,GAD9BryB,KAAAkyB,MAAAA,EAAoBlyB,KAAAmyB,UAAAA,EAA6BnyB,KAAAoyB,kBAAAA,EACjDpyB,KAAAiE,UAAAA,EAA8BjE,KAAAqyB,0BAAAA,SAE1CJ,EAAA3xB,UAAA6X,KAAA,SAAKma,EAAqC1d,GAQxC,OAPK5U,KAAKuyB,aACRvyB,KAAKwyB,YAAcxyB,KAAKyyB,eAAeH,EAAS1d,GAChD5U,KAAKuyB,WAAavyB,KAAKoyB,kBAAkBjM,gBACrCnmB,KAAKqyB,0BAA0BnM,wBAA2BlmB,KAAKkyB,OAAQ,EAAGlyB,KAAKmyB,UAC/EnyB,KAAKwyB,YAAYV,QAGhB9xB,KAAKuyB,YAGdN,EAAA3xB,UAAA+D,MAAA,WACMrE,KAAKuyB,aACPvyB,KAAKoyB,kBAAkBlL,OAAOlnB,KAAKoyB,kBAAkB1vB,QAAQ1C,KAAKuyB,WAAWpL,WAC7EnnB,KAAKuyB,WAAa,KAEdvyB,KAAKwyB,YAAYT,UACnB/xB,KAAKoyB,kBAAkBlL,OAAOlnB,KAAKoyB,kBAAkB1vB,QAAQ1C,KAAKwyB,YAAYT,UAC9E/xB,KAAKwyB,YAAc,QAKjBP,EAAA3xB,UAAAmyB,wBAAeH,EAAoC1d,GACzD,GAAK0d,EAEE,CAAA,GAAIA,aAAmBnyB,EAAAA,YAAa,CACzC,IAAM4xB,EAAU/xB,KAAKoyB,kBAAkBM,mBAAkB,EAA0B9d,GACnF,OAAO,IAAIid,GAAW,CAACE,EAAQY,WAAYZ,GAE3C,OAAO,IAAIF,GAAW,CAAC,CAAC7xB,KAAKiE,UAAU2uB,WAAW,GAAGN,MALrD,OAAO,IAAIT,GAAW,OAjC5B,GCVMgB,GAAO,2BAiBX,SAAAC,EAAsCjO,GAAA7kB,KAAA6kB,UAAAA,SAStCiO,EAAAxyB,UAAAyyB,WAAA,WAAqC,OAAQ/yB,KAAKgzB,aAAsBhzB,KAAKizB,YAAYjzB,KAAKkzB,aAA7BL,IAOzDC,EAAAxyB,UAAA2yB,qBAAY9T,GAClB,IAAMqS,EAAOxxB,KAAK6kB,UAAU2M,KACtB2B,EAAiB3B,EAAKnO,MAAM+P,aAC5BC,EAAgBtS,WAAWxC,OAAOC,iBAAiBgT,GAAM,kBAE/D,OADAA,EAAKnO,MAAM,iBAAsBgQ,EAAgBlU,EAAK,KAC/C,WAAM,OAAAqS,EAAKnO,MAAM,iBAAmB8P,IAQrCL,EAAAxyB,UAAA0yB,sBACN,IAAMM,EAAOtzB,KAAK6kB,UAAU2M,KAAK/R,wBACjC,OAAO6T,EAAK/T,KAAO+T,EAAK9T,MAAQjB,OAAOoD,YAQjCmR,EAAAxyB,UAAA4yB,qBACN,IAAMK,EAAWvzB,KAAK6kB,UAAU2O,cAAc,OAC9CD,EAASE,UAAY,0BAErB,IAAMjC,EAAOxxB,KAAK6kB,UAAU2M,KAC5BA,EAAKhL,YAAY+M,GACjB,IAAMpU,EAAQoU,EAAS9T,wBAAwBN,MAAQoU,EAAS3R,YAGhE,OAFA4P,EAAKkC,YAAYH,GAEVpU,uBAlDVzf,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gFAEViO,EAAAA,OAAMlO,KAAA,CAACooB,EAAAA,+ICVtB4L,GAAA,gCAIEA,EAAArzB,UAAA+D,MAAA,SAAMuvB,KAKND,EAAArzB,UAAA2wB,QAAA,SAAQI,OATV,GAeAwC,GAAA,WAsBE,SAAAA,EACYC,EAAsDtB,EACtDuB,EAA2DC,GAFvE,IAAA1xB,EAAAtC,KACYA,KAAA8zB,eAAAA,EAAsD9zB,KAAAwyB,YAAAA,EACtDxyB,KAAA+zB,iBAAAA,EAA2D/zB,KAAAg0B,eAAAA,EACrEF,EAAe5O,SAAS4L,aAAa1lB,UAAU,SAACimB,GAAkB/uB,EAAK2uB,QAAQI,KAE/ErxB,KAAK4zB,OAAS,IAAIK,QAAQ,SAACC,EAASC,GAClC7xB,EAAK8xB,SAAWF,EAChB5xB,EAAK+xB,QAAUF,IAEjBn0B,KAAK4zB,OAAOU,KAAK,KAAM,qBAvBzB9tB,OAAAC,eAAIotB,EAAAvzB,UAAA,oBAAiB,KAArB,WACE,GAAIN,KAAKwyB,YAAYR,aACnB,OAAOhyB,KAAKwyB,YAAYR,aAAa9M,cAKzC,SAAsBA,qCAsBtB2O,EAAAvzB,UAAA+D,MAAA,SAAMuvB,GACA5zB,KAAK8zB,iBACP9zB,KAAKo0B,SAASR,GACd5zB,KAAKu0B,yBAIDV,EAAAvzB,UAAAk0B,kBAASnD,GACfrxB,KAAKq0B,QAAQhD,GACbrxB,KAAKu0B,wBAMPV,EAAAvzB,UAAA2wB,QAAA,SAAQI,GAAR,IAAA/uB,EAAAtC,KACE,GAAIA,KAAK8zB,eACP,GAAK9zB,KAAKg0B,eAEH,CACL,IAAM/C,EAAUjxB,KAAKg0B,iBACjB/C,GAAWA,EAAQqD,KACrBrD,EAAQqD,KACJ,SAAAV,IACiB,IAAXA,GACFtxB,EAAKkyB,SAASnD,IAGlB,eACiB,IAAZJ,GACTjxB,KAAKw0B,SAASnD,QAZhBrxB,KAAKw0B,SAASnD,IAkBZwC,EAAAvzB,UAAAi0B,gCACN,IAAME,EAAiBz0B,KAAK8zB,eAAe9O,SAASrgB,cAIpD,GAHA8vB,EAAe5F,WAAW6E,YAAYe,GACtCz0B,KAAK8zB,eAAeY,UAEhB10B,KAAK+zB,iBAAkB,CACzB,IAAMY,EAAmB30B,KAAK+zB,iBAAiB/O,SAASrgB,cACxDgwB,EAAiB9F,WAAW6E,YAAYiB,GACxC30B,KAAK+zB,iBAAiBW,UAGpB10B,KAAKwyB,aAAexyB,KAAKwyB,YAAYT,SACvC/xB,KAAKwyB,YAAYT,QAAQ2C,UAG3B10B,KAAK8zB,eAAiB,KACtB9zB,KAAK+zB,iBAAmB,KACxB/zB,KAAKwyB,YAAc,QA1FvB,GC1BAoC,GAAA,WAyBE,SAAAA,EACYC,EAAyC1C,EAA+CtN,EACxFiQ,GADA90B,KAAA60B,gBAAAA,EAAyC70B,KAAAmyB,UAAAA,EAA+CnyB,KAAA6kB,UAAAA,EACxF7kB,KAAA80B,WAAAA,yBALgB,CAAC,iBAAkB,WAAY,WAAY,WAAY,OAAQ,wCAC7D,CAAC,wBAM/BF,EAAAt0B,UAAA6X,KAAA,SAAK4c,EAAqCC,EAA2B1C,EAAcla,GACjF,IAAM6c,EACF11B,EAAU6Y,EAAQ6M,WAAajlB,KAAK6kB,UAAUlI,cAAcvE,EAAQ6M,WAAajlB,KAAK6kB,UAAU2M,KAE9F0D,EAA4Bl1B,KAAK80B,WAAW/B,aAElD,IAAKkC,EACH,MAAM,IAAIpc,MAAM,mCAAkCT,EAAQ6M,WAAa,QAAM,+BAG/E,IAAMkQ,EAAc,IAAIxB,GAClByB,EAAap1B,KAAKyyB,eAAesC,EAAW3c,EAAQid,UAAYL,EAAiB1C,EAAS6C,GAE5FG,GACqB,IAArBld,EAAQ4Y,SAAqBhxB,KAAKu1B,gBAAgBR,EAAWE,GAAe,KAC5EO,EAA8Cx1B,KAAKy1B,uBAAuBV,EAAWE,EAAaG,GAClGM,EAA2B,IAAI7B,GAAY2B,EAAeJ,EAAYE,EAAiBld,EAAQud,eAWnG,OATAD,EAAY9B,OAAOU,KAAKY,EAA2BA,GACnDC,EAAY9wB,MAAQ,SAACuvB,GAAkB8B,EAAYrxB,MAAMuvB,IACzDuB,EAAYlE,QAAU,SAACI,GAAkBqE,EAAYzE,QAAQI,IAE7DrxB,KAAK41B,oBAAoBJ,EAActQ,SAAU9M,GAE7Ckd,GAAmBA,EAAgBpQ,UACrCllB,KAAK61B,sBAAsBP,EAAgBpQ,SAAU9M,GAEhDsd,GAGDd,EAAAt0B,UAAAi1B,yBAAgBR,EAAqCE,GAC3D,IACIK,EADkBP,EAAU7O,wBAAwBuK,IAClBxhB,OAAOjP,KAAKmyB,WAGlD,OAFAnyB,KAAK60B,gBAAgBiB,WAAWR,EAAgBnO,UAChD8N,EAAYzO,YAAY8O,EAAgBtQ,SAASrgB,eAC1C2wB,GAGDV,EAAAt0B,UAAAm1B,gCAAuBV,EAAqCE,EAAkBG,GAEpF,IACII,EADgBT,EAAU7O,wBAAwB2K,IACpB5hB,OAAOjP,KAAKmyB,UAAWiD,EAAWtD,OAGpE,OAFA9xB,KAAK60B,gBAAgBiB,WAAWN,EAAcrO,UAC9C8N,EAAYzO,YAAYgP,EAAcxQ,SAASrgB,eACxC6wB,GAGDZ,EAAAt0B,UAAAs1B,6BAAoBG,EAAgC3d,GAC1DpY,KAAKg2B,kBAAkBvzB,QAAQ,SAAC6kB,GAC1B/nB,EAAU6Y,EAAQkP,MACpByO,EAAezO,GAAclP,EAAQkP,OAKnCsN,EAAAt0B,UAAAu1B,+BAAsBI,EAAoC7d,GAChEpY,KAAKk2B,oBAAoBzzB,QAAQ,SAAC6kB,GAC5B/nB,EAAU6Y,EAAQkP,MACpB2O,EAAiB3O,GAAclP,EAAQkP,OAKrCsN,EAAAt0B,UAAAmyB,wBACJsC,EAAqCC,EAA2B1C,EAChE1d,GACF,OAAK0d,EAEMA,aAAmBnyB,EAAAA,YACrBH,KAAKm2B,uBAAuB7D,EAAS1d,GACnC3V,EAASqzB,GACXtyB,KAAKo2B,kBAAkB9D,GAEvBtyB,KAAKq2B,qBAAqBtB,EAAWC,EAAiB1C,EAAS1d,GAN/D,IAAIid,GAAW,KAUlB+C,EAAAt0B,UAAA61B,gCAAuB7D,EAA2B1d,GACxD,IAAMmd,EAAUO,EAAQI,mBAAmB9d,GAE3C,OADA5U,KAAK60B,gBAAgBiB,WAAW/D,GACzB,IAAIF,GAAW,CAACE,EAAQY,WAAYZ,IAGrC6C,EAAAt0B,UAAA81B,2BAAkB9D,GACxB,IAAMgE,EAAYt2B,KAAK6kB,UAAU0R,eAAe,GAAGjE,GACnD,OAAO,IAAIT,GAAW,CAAC,CAACyE,MAGlB1B,EAAAt0B,UAAA+1B,8BACJtB,EAAqCC,EAA2B1C,EAChE1d,GACF,IAAM4hB,EAAqBzB,EAAU7O,wBAAwBoM,GACvDmE,EACFC,EAAAA,SAASznB,OAAO,CAAC/G,UAAW,CAAC,CAAClC,QAAS2tB,GAAgBgD,SAAU/hB,IAAWgiB,OAAQ5B,IAClFhD,EAAewE,EAAmBvnB,OAAOwnB,GAE/C,OADAz2B,KAAK60B,gBAAgBiB,WAAW9D,EAAa7K,UACtC,IAAI0K,GAAW,CAAC,CAACG,EAAahN,SAASrgB,gBAAiBqtB,EAAa7K,SAAU6K,wBAzGzFtyB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,oDAlBvBi3B,EAAAA,sBAEAH,EAAAA,4CAsB2E7oB,EAAAA,OAAMlO,KAAA,CAACooB,EAAAA,mBAZ5E+K,gMAdR,iBC2EE,SAAAgE,EACYC,EAA8C5E,EAA6B6E,GAA3Eh3B,KAAA+2B,WAAAA,EAA8C/2B,KAAAmyB,UAAAA,EAA6BnyB,KAAAg3B,YAAAA,SAQvFF,EAAAx2B,UAAA6X,KAAA,SAAKma,EAAcla,GACjB,YADiB,IAAAA,IAAAA,EAAA,IACVpY,KAAKg3B,YAAY7e,KAAKnY,KAAK+2B,WAAY/2B,KAAKmyB,UAAWG,EAASla,wBAZ1E1Y,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,oDAzEKkoB,EAAAA,gCAAV4O,EAAAA,gBAEZ9B,wLCFRqC,GAAA,gCAsBSA,EAAAxzB,QAAP,WAAwC,MAAO,CAACC,SAAUuzB,wBAZ3DtzB,EAAAA,SAAQhE,KAAA,CAAC,CACRiE,aAAc,CAAC6sB,GAAkBI,IACjCprB,gBAAiB,CAACgrB,GAAkBI,IACpC3oB,UAAW,CAAC4uB,UAbd,6CCSa,sBACK,uBACC,iBACN,eACD,gBACC,gBACF,6BARVp3B,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,mIC4GvB,SAAAs3B,EAAYj2B,kBA9DA,aACM,aAyCF,kBAaO,IAAIC,EAAAA,cAAqB,GAQ9ClB,KAAK6B,SAAWZ,EAAOY,SACvB7B,KAAKm3B,cAAgBl2B,EAAOk2B,cAC5Bn3B,KAAKo3B,eAAiBn2B,EAAOm2B,eAC7Bp3B,KAAKq3B,SAAWp2B,EAAOo2B,SACvBr3B,KAAKs3B,QAAUr2B,EAAOq2B,QACtBt3B,KAAKu3B,SAAWt2B,EAAOs2B,SACvBv3B,KAAKw3B,OAASv2B,EAAOu2B,OACrBx3B,KAAKy3B,KAAOx2B,EAAOw2B,YAGrBP,EAAA52B,UAAAo3B,YAAA,WAAyB,OAAmB,EAAZ13B,KAAK23B,MAErCT,EAAA52B,UAAAs3B,QAAA,WAAqB,OAAO53B,KAAK23B,KAAO33B,KAAK63B,WAE7CX,EAAA52B,UAAAw3B,WAAA,SAAWC,GAA4B/3B,KAAKg4B,aAAaD,IAEzDb,EAAA52B,UAAAgE,YAAA,SAAYC,GAAgCvE,KAAKg4B,aAAah4B,KAAK23B,OAEnET,EAAA52B,UAAA23B,WAAA,SAAWF,GAAuB,OAAuB,IAAhBA,GAKjCb,EAAA52B,UAAA43B,wBAAehf,EAAeC,GAChCnZ,KAAKq3B,WACK,EAARne,IACU,EAARA,GACFlZ,KAAKm4B,MAAMC,SAAS,GAEtBp4B,KAAKm4B,MAAMC,QAAQ,IAEjBjf,EAAMnZ,KAAK63B,YACT1e,EAAOnZ,KAAK63B,UAAY,GAC1B73B,KAAKm4B,MAAMroB,MAAM,GAEnB9P,KAAKm4B,MAAMroB,KAAK9P,KAAK63B,cAanBX,EAAA52B,UAAA+3B,0BACN,IAAInf,EAAQ,EACRC,EAAMnZ,KAAK63B,UACXS,EAAat5B,KAAKM,MAAMU,KAAKs3B,QAAU,GACvCiB,EAAcv4B,KAAKs3B,QAAU,GAAM,EAAIgB,EAAa,EAAIA,EAc5D,OAZIt4B,KAAK23B,MAAQW,EAEfnf,EAAMnZ,KAAKs3B,QACFt3B,KAAK63B,UAAY73B,KAAK23B,KAAOW,EAEtCpf,EAAQlZ,KAAK63B,UAAY73B,KAAKs3B,SAG9Bpe,EAAQlZ,KAAK23B,KAAOW,EAAa,EACjCnf,EAAMnZ,KAAK23B,KAAOY,GAGb,CAACrf,EAAOC,IAMT+d,EAAA52B,UAAAk4B,4BACN,IACItf,GADOla,KAAK8qB,KAAK9pB,KAAK23B,KAAO33B,KAAKs3B,SAAW,GAC9Bt3B,KAAKs3B,QAGxB,MAAO,CAACpe,EAFEA,EAAQlZ,KAAKs3B,UAKjBJ,EAAA52B,UAAAm4B,yBAAgBC,GACtB,IAAMC,EAAa34B,KAAK23B,KACxB33B,KAAK23B,KAAO94B,EAAgB65B,EAAW14B,KAAK63B,UAAW,GAEnD73B,KAAK23B,OAASgB,GAAcz5B,EAASc,KAAK44B,iBAC5C54B,KAAK64B,WAAW72B,KAAKhC,KAAK23B,OAItBT,EAAA52B,UAAA03B,sBAAac,GACnB94B,KAAK63B,UAAY74B,KAAK8qB,KAAK9pB,KAAK44B,eAAiB54B,KAAKu3B,UAEjDr4B,EAASc,KAAK63B,aACjB73B,KAAK63B,UAAY,GAInB73B,KAAKm4B,MAAMx1B,OAAS,EACpB,IAAK,IAAI+M,EAAI,EAAGA,GAAK1P,KAAK63B,UAAWnoB,IACnC1P,KAAKm4B,MAAMroB,KAAKJ,GAOlB,GAHA1P,KAAKy4B,gBAAgBK,GAGF,EAAf94B,KAAKs3B,SAAet3B,KAAK63B,UAAY73B,KAAKs3B,QAAS,CACrD,IAAIpe,EAAQ,EACRC,EAAMnZ,KAAK63B,UAGX73B,KAAKw3B,QACNte,GAAD4J,EAAA5T,EAAAlP,KAAAq4B,iBAAA,IAAC,GAAOlf,EAAA2J,EAAA,KAEP5J,GAADiK,EAAAjU,EAAAlP,KAAAw4B,mBAAA,IAAC,GAAOrf,EAAAgK,EAAA,IAGVnjB,KAAKm4B,MAAQn4B,KAAKm4B,MAAM14B,MAAMyZ,EAAOC,GAGrCnZ,KAAKk4B,eAAehf,EAAOC,gCArOhCrW,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,iBACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzClC,KAAM,CAACE,KAAQ,cACfE,SAAU,irEATJ21B,wCAyDLl4B,EAAAA,6BAKAA,EAAAA,8BAKAA,EAAAA,wBAKAA,EAAAA,sBAMAA,EAAAA,8BAKAA,EAAAA,uBAKAA,EAAAA,oBAKAA,EAAAA,wBAKAA,EAAAA,0BAQAyC,EAAAA,qBAKAzC,EAAAA,cCjHHm4B,GAAA,gCAgBSA,EAAAv1B,QAAP,WAAwC,MAAO,CAACC,SAAUs1B,wBAR3Dr1B,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAc,CAACszB,IAAgBrzB,QAAS,CAACqzB,IAAgBpzB,QAAS,CAACC,EAAAA,oBAR9E,GCAAk1B,GAAA,WACE,SAAAA,EAAmB9gB,EAAqB9T,GAArBrE,KAAAmY,KAAAA,GAAqBnY,KAAAqE,MAAAA,KAEpCrE,KAAKqE,MAAQ8T,UAIjB8gB,EAAA34B,UAAA44B,SAAA,WAAa,MAAqB,WAAdl5B,KAAKmY,MAAoC,WAAfnY,KAAKqE,SAPrD,GAUM80B,GAAkB,CACtBC,MAAS,CAAC,aAAc,eA4B1B,IAAMC,GAAS,aAEf,SAAAC,GAAiCC,EAAe50B,EAAoB60B,EAAkBC,EAAQC,EAASC,GACrG,IAAMC,EA5BR,SAAAC,EAA8BL,EAAkBM,QAAA,IAAAA,IAAAA,EAAAX,IAC9C,IAAMY,GAAmBP,GAAY,IAAIvb,OAEzC,GAA+B,IAA3B8b,EAAgBp3B,OAClB,MAAO,GAGT,IAAMi3B,EAAiBG,EAAgBv3B,MAAM,OAAOK,IAAI,SAAAm3B,GAAW,OAAAA,EAAQx3B,MAAM,OAAMK,IAAI,SAACo3B,GAC1F,IAAIC,EAAQJ,EAAQG,EAAY,KAAOA,EACvC,OAAO,IAAIhB,GAAQiB,EAAM,GAAIA,EAAM,MAG/BC,EAAiBP,EAAeh3B,OAAO,SAAAq3B,GAAe,OAAAA,EAAYf,aAExE,GAA4B,EAAxBiB,EAAex3B,OACjB,KAAM,2DAGR,GAA8B,IAA1Bw3B,EAAex3B,QAAwC,EAAxBi3B,EAAej3B,OAChD,KAAM,0EAGR,OAAOi3B,EAMgBC,CAAcL,GAC/BY,EAAY,GAElB,OAA8B,IAA1BR,EAAej3B,QAAgBi3B,EAAe,GAAGV,WAC5CG,IAGTO,EAAen3B,QAAQ,SAACu3B,GAClBA,EAAQ7hB,OAAS6hB,EAAQ31B,MAC3B+1B,EAAUtqB,KAAKypB,EAASc,OAAO11B,EAAeq1B,EAAQ7hB,KAAMwhB,IAE5DS,EAAUtqB,KACNypB,EAASc,OAAO11B,EAAeq1B,EAAQ7hB,KAAMshB,GAASF,EAASc,OAAO11B,EAAeq1B,EAAQ31B,MAAOq1B,MAIrG,WAAQU,EAAU33B,QAAQ,SAAA63B,GAAiB,OAAAA,uDChDN,iBAChB,oBACjB,6BAEM,6BANlB56B,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHCwBrBC,GAAS,gBAkDX,SAAA06B,EAAoBr2B,EAA2CD,GAA3CjE,KAAAkE,SAAAA,EAA2ClE,KAAAiE,UAAAA,iBAL/B,aAOhCs2B,EAAAj6B,UAAAquB,eAAA,SAAeC,GAEb5uB,KAAKiE,UAAUS,YAAY1E,KAAKkE,SAASS,cAAe,cAAgB3E,KAAKugB,UAAU5hB,WAAW6D,MAAM,KAAK,IAC7GxC,KAAKiE,UAAUS,YAAY1E,KAAKkE,SAASS,cAAe,cAAgB3E,KAAKugB,UAAU5hB,YAGvFqB,KAAKugB,UAAYqO,EAGjB5uB,KAAKiE,UAAUY,SAAS7E,KAAKkE,SAASS,cAAe,cAAgB3E,KAAKugB,UAAU5hB,WAAW6D,MAAM,KAAK,IAC1GxC,KAAKiE,UAAUY,SAAS7E,KAAKkE,SAASS,cAAe,cAAgB3E,KAAKugB,UAAU5hB,aAUtF47B,EAAAj6B,UAAAmuB,YAAA,SAAY7T,GAAyB,OAAO5a,KAAKkE,SAASS,cAAc+iB,SAAS9M,EAA2B,6BAtE7G9X,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,qBACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzClC,KAAM,CACJ0tB,UACI,wHACJxtB,KAAQ,UACRs3B,OAAQ,MAEVp3B,SAAU,0IAGVgC,OAAQ,CAAC,gvBAhCTG,EAAAA,kBAFAD,EAAAA,gDAiECzE,EAAAA,qBACAA,EAAAA,kBACAA,EAAAA,4BACAA,EAAAA,4BAwGD,SAAA45B,EACY/e,EAA8CzX,EAAsBoxB,EAC5EqF,EAAoDC,EAAoC15B,EAChFiJ,EAA2C2a,GAHvD,IAAAviB,EAAAtC,KACYA,KAAA0b,YAAAA,EAA8C1b,KAAAiE,UAAAA,EAE9CjE,KAAAkK,QAAAA,EAA2ClK,KAAA6kB,UAAAA,aAxBrC,IAAI3jB,EAAAA,yBAIH,IAAIA,EAAAA,sCAEO,eAAerB,KAmB3CG,KAAK4mB,UAAY3lB,EAAO2lB,UACxB5mB,KAAKugB,UAAYtf,EAAOsf,UACxBvgB,KAAKw5B,SAAWv4B,EAAOu4B,SACvBx5B,KAAKilB,UAAYhkB,EAAOgkB,UACxBjlB,KAAK46B,eAAiB35B,EAAO25B,eAC7B56B,KAAK66B,aAAe55B,EAAO45B,aAC3B76B,KAAK86B,cAAgB,IAAI7I,GACrBsI,GAAkBlF,EAAUsF,EAAkB12B,EAAWy2B,GAE7D16B,KAAK8kB,kBAAoB5a,EAAQqS,SAASnR,UAAU,WAC9C9I,EAAKiwB,YACPjwB,EAAKiwB,WAAWrN,SAASyJ,eACrBvO,GACI9d,EAAKoZ,YAAY/W,cAAerC,EAAKiwB,WAAWvN,SAASrgB,cAAerC,EAAKie,UAC1D,SAAnBje,EAAK2iB,qBA5BXwV,EAAAn6B,UAAAy6B,uBACN,QAAI/6B,KAAK46B,iBAGJ56B,KAAKg7B,aAAeh7B,KAAKi7B,cAiChCR,EAAAn6B,UAAA6X,KAAA,SAAKvD,GAAL,IAAAtS,EAAAtC,KACOA,KAAKuyB,YAAevyB,KAAK+6B,gBAC5B/6B,KAAKuyB,WAAavyB,KAAK86B,cAAc3iB,KAAKnY,KAAKg7B,WAAYpmB,GAC3D5U,KAAKuyB,WAAWrN,SAASgW,MAAQl7B,KAAKi7B,aACtCj7B,KAAKuyB,WAAWrN,SAAS2V,aAAe76B,KAAK66B,aAC7C76B,KAAKuyB,WAAWrN,SAAStjB,GAAK5B,KAAKm7B,oBAEnCn7B,KAAKiE,UAAUm3B,aAAap7B,KAAK0b,YAAY/W,cAAe,mBAAoB3E,KAAKm7B,qBAE9D,SAAnBn7B,KAAKilB,WACPjlB,KAAK6kB,UAAUlI,cAAc3c,KAAKilB,WAAWuB,YAAYxmB,KAAKuyB,WAAWvN,SAASrgB,eAIpF3E,KAAKuyB,WAAWhM,kBAAkBhb,gBAClCvL,KAAKuyB,WAAWhM,kBAAkBjK,eAGlCtc,KAAKuyB,WAAWrN,SAASyJ,eACrBvO,GACIpgB,KAAK0b,YAAY/W,cAAe3E,KAAKuyB,WAAWvN,SAASrgB,cAAe3E,KAAKugB,UAC1D,SAAnBvgB,KAAKilB,YAETjlB,KAAK4mB,WACP5mB,KAAKkK,QAAQW,kBAAkB,WAK7B,IAAIwwB,GAAa,EACjBvU,sBAAsB,WAAM,OAAAuU,GAAa,IAEzC,IAAM1U,EAAWhD,EAAAA,UAAyBrhB,EAAKuiB,UAAW,SACpC9Z,KAAKG,EAAAA,UAAU5I,EAAK2S,QAASrS,EAAAA,OAAO,SAAAgY,GAAS,OAAAA,EAAME,QAAUD,GAAInB,UAEjFqW,EAAUpM,EAAAA,UAAsBrhB,EAAKuiB,UAAW,SACjC9Z,KACGG,EAAAA,UAAU5I,EAAK2S,QAASrS,EAAAA,OAAO,WAAM,OAACy4B,IACtCz4B,EAAAA,OAAO,SAAAgY,GAAS,OAAAtY,EAAK0tB,sBAAsBpV,MAEnEqM,EAAAA,KAAY,CAACN,EAAUoJ,IAAU3kB,UAAU,WAAM,OAAA9I,EAAK4H,QAAQmB,IAAI,WAAM,OAAA/I,EAAK+B,cAIjFrE,KAAKs7B,MAAMt5B,SAOfy4B,EAAAn6B,UAAA+D,MAAA,WACMrE,KAAKuyB,aACPvyB,KAAKiE,UAAUs3B,gBAAgBv7B,KAAK0b,YAAY/W,cAAe,oBAC/D3E,KAAK86B,cAAcz2B,QACnBrE,KAAKuyB,WAAa,KAClBvyB,KAAKiV,OAAOjT,SAOhBy4B,EAAAn6B,UAAAgB,OAAA,WACMtB,KAAKuyB,WACPvyB,KAAKqE,QAELrE,KAAKmY,QAOTsiB,EAAAn6B,UAAA4B,OAAA,WAAoB,OAA0B,MAAnBlC,KAAKuyB,YAEhCkI,EAAAn6B,UAAAyE,SAAA,WACE/E,KAAKw7B,uBAAyBlC,GAC1Bt5B,KAAKiE,UAAWjE,KAAK0b,YAAY/W,cAAe3E,KAAKw5B,SAAUx5B,KAAKmY,KAAKsjB,KAAKz7B,MAAOA,KAAKqE,MAAMo3B,KAAKz7B,MACrGA,KAAKsB,OAAOm6B,KAAKz7B,QAGvBy6B,EAAAn6B,UAAAgE,YAAA,SAAYC,IAELA,EAAoB,YAAKA,EAAsB,cAAKA,EAAwB,iBAAMvE,KAAK+6B,eAC1F/6B,KAAKqE,SAITo2B,EAAAn6B,UAAAoJ,YAAA,WACE1J,KAAKqE,QACLrE,KAAKw7B,yBACLx7B,KAAK8kB,kBAAkB5H,eAGjBud,EAAAn6B,UAAA0vB,+BAAsBpV,GAC5B,GAAqB,IAAjBA,EAAMqV,OAAc,CACtB,IAAuB,IAAnBjwB,KAAK4mB,UACP,OAAO,EACF,GAAuB,WAAnB5mB,KAAK4mB,WAA0B5mB,KAAK07B,oBAAoB9gB,GACjE,OAAO,EACF,GAAuB,YAAnB5a,KAAK4mB,YAA4B5mB,KAAK07B,oBAAoB9gB,GACnE,OAAO,EAGX,OAAO,GAGD6f,EAAAn6B,UAAAo7B,6BAAoB9gB,GAC1B,IAAM+gB,EAAQ37B,KAAKuyB,WAAWrN,SAC9B,QAAOyW,GAAQA,EAAMlN,YAAY7T,wBAnNpC3a,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,eAAgB6C,SAAU,0DAhG9CwC,EAAAA,kBAFAD,EAAAA,iBADAoxB,EAAAA,gBAMA5O,EAAAA,gCADAD,EAAAA,wBAcM+T,UAZN7tB,EAAAA,0CAyK8BF,EAAAA,OAAMlO,KAAA,CAACooB,EAAAA,kDAhEpClnB,EAAAA,0BAIAA,EAAAA,4BAIAA,EAAAA,yBAOAA,EAAAA,wBAIAA,EAAAA,yBAKAA,EAAAA,8BAMAA,EAAAA,4BAMAA,EAAAA,qBAIAyC,EAAAA,uBAIAA,EAAAA,eCvKHu4B,GAAA,gCAgBSA,EAAAp4B,QAAP,WAAwC,MAAO,CAACC,SAAUm4B,wBAR3Dl4B,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAc,CAAC62B,GAAYF,IAAmB12B,QAAS,CAAC42B,IAAah1B,gBAAiB,CAAC80B,UARlG,uCCSQ,mBACK,gBACD,kBAEE,6BANb76B,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,mICkDvB,SAAAk8B,EAAY76B,cAPK,EAQfjB,KAAKlB,IAAMmC,EAAOnC,IAClBkB,KAAK+7B,SAAW96B,EAAO86B,SACvB/7B,KAAKg8B,QAAU/6B,EAAO+6B,QACtBh8B,KAAKmB,KAAOF,EAAOE,KACnBnB,KAAKi8B,UAAYh7B,EAAOg7B,UACxBj8B,KAAKof,OAASne,EAAOme,cAGvB0c,EAAAx7B,UAAA47B,SAAA,WAAa,OAAOr9B,EAAgBmB,KAAKvB,MAAOuB,KAAKlB,MAErDg9B,EAAAx7B,UAAA67B,gBAAA,WAAoB,OAAO,IAAMn8B,KAAKk8B,WAAal8B,KAAKlB,yBA7DzDgE,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,kBACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzC9B,SAAU,0iBARJg5B,mCAsBLv7B,EAAAA,wBAMAA,EAAAA,uBAKAA,EAAAA,yBAKAA,EAAAA,oBAKAA,EAAAA,qBAKAA,EAAAA,sBAKAA,EAAAA,cCvDHw7B,GAAA,gCAgBSA,EAAA54B,QAAP,WAAwC,MAAO,CAACC,SAAU24B,wBAR3D14B,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAc,CAACk4B,IAAiBj4B,QAAS,CAACi4B,IAAiBh4B,QAAS,CAACC,EAAAA,oBARhF,uCCSQ,kBACK,mBACE,6BAJdrE,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHC2BnB08B,GAA4B,CAChCt2B,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAo2B,KAC9Bl2B,OAAO,iBAuFP,SAAAk2B,EAAYt7B,EAAiCu7B,GAAAx8B,KAAAw8B,mBAAAA,gBApDX,kBACvB,aAkCO,IAAIt7B,EAAAA,wBAMJ,IAAIA,EAAAA,6BAMC,IAAIA,EAAAA,cAAqB,iBAErC,SAACqF,oBACA,aAGVvG,KAAKlB,IAAMmC,EAAOnC,IAClBkB,KAAKy8B,SAAWx7B,EAAOw7B,gBAGzBF,EAAAj8B,UAAAo8B,cAAA,WAAkB,OAAU18B,KAAK28B,SAAQ,WAAW38B,KAAKlB,KAEzDy9B,EAAAj8B,UAAAs8B,MAAA,SAAMn+B,GACCuB,KAAKy8B,UAAaz8B,KAAK6B,UAC1B7B,KAAKyY,aAAaha,GAEpBuB,KAAKo5B,MAAMp3B,KAAKvD,IAGlB89B,EAAAj8B,UAAAu8B,WAAA,WAAe78B,KAAK4G,aAEpB21B,EAAAj8B,UAAAw8B,YAAA,SAAYr+B,GAAiBuB,KAAK+8B,OAAO/8B,KAAKg9B,YAAch9B,KAAKi9B,OAASx+B,EAAQ,EAAIA,IAEtF89B,EAAAj8B,UAAA48B,cAAA,SAActiB,GACZ,GAAIC,GAAIlc,EAASic,EAAME,QAGrB,OAFAF,EAAMzY,iBAEEyY,EAAME,OACZ,KAAKD,GAAIV,UACT,KAAKU,GAAIb,UACPha,KAAK+8B,OAAO/8B,KAAKi9B,KAAO,GACxB,MACF,KAAKpiB,GAAIZ,QACT,KAAKY,GAAIX,WACPla,KAAK+8B,OAAO/8B,KAAKi9B,KAAO,GACxB,MACF,KAAKpiB,GAAId,KACP/Z,KAAK+8B,OAAO,GACZ,MACF,KAAKliB,GAAIf,IACP9Z,KAAK+8B,OAAO/8B,KAAKlB,OAMzBy9B,EAAAj8B,UAAAgE,YAAA,SAAYC,GACNA,EAAc,MAChBvE,KAAK+8B,OAAO/8B,KAAKi9B,OAIrBV,EAAAj8B,UAAAyE,SAAA,WACE/E,KAAKm9B,SAAWvuB,MAAMwB,KAAK,CAACzN,OAAQ3C,KAAKlB,KAAM,SAACs+B,EAAGC,GAAM,MAAA,CAAEC,KAAM,EAAGpnB,MAAOmnB,KAC3Er9B,KAAKyY,aAAazY,KAAKi9B,OAGzBV,EAAAj8B,UAAAgH,iBAAA,SAAiBC,GAAiCvH,KAAKoH,SAAWG,GAElEg1B,EAAAj8B,UAAAkH,kBAAA,SAAkBD,GAAuBvH,KAAK4G,UAAYW,GAE1Dg1B,EAAAj8B,UAAAi9B,MAAA,WACEv9B,KAAKw9B,MAAMx7B,KAAKhC,KAAK28B,UACrB38B,KAAKyY,aAAazY,KAAKi9B,OAGzBV,EAAAj8B,UAAAmH,iBAAA,SAAiBC,GAAuB1H,KAAK6B,SAAW6F,GAExD60B,EAAAj8B,UAAAy8B,OAAA,SAAOt+B,EAAeg/B,QAAA,IAAAA,IAAAA,GAAA,GACpB,IAAMC,EAAU7+B,EAAgBJ,EAAOuB,KAAKlB,IAAK,GAC5CkB,KAAKy8B,UAAaz8B,KAAK6B,UAAY7B,KAAKi9B,OAASS,IACpD19B,KAAKi9B,KAAOS,EACZ19B,KAAK29B,WAAW37B,KAAKhC,KAAKi9B,OAExBQ,IACFz9B,KAAKoH,SAASpH,KAAKi9B,MACnBj9B,KAAK4G,aAEP5G,KAAKyY,aAAazY,KAAKi9B,OAGzBV,EAAAj8B,UAAA+G,WAAA,SAAW5I,GACTuB,KAAK+8B,OAAOt+B,GAAO,GACnBuB,KAAKw8B,mBAAmBlgB,gBAGlBigB,EAAAj8B,UAAAs9B,uBAAc1nB,GACpB,IAAMuV,EAAOzrB,KAAK28B,SAAWzmB,EAE7B,OAAY,GAARuV,EACK,IAELA,EAAO,GAAY,EAAPA,EACPoS,OAAOn/B,UAAiB,IAAP+sB,GAAYqS,QAAQ,IAGvC,GAGDvB,EAAAj8B,UAAAmY,sBAAaslB,cACnB/9B,KAAK28B,SAAWoB,EAChB/9B,KAAKm9B,SAAS16B,QAAQ,SAACmS,EAASsB,GAAU,OAAAtB,EAAQ0oB,KAAOh7B,EAAKs7B,cAAc1nB,0BAjL/EpT,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,aACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzClC,KAAM,CACJC,QAAS,gBACT+R,SAAY,IACZ9R,KAAQ,SACR86B,gBAAiB,IACjBC,uBAAwB,MACxBC,uBAAwB,WACxBC,wBAAyB,kBACzBC,uBAAwB,yBACxBn2B,SAAU,eACVo2B,YAAa,wBACb5wB,eAAgB,WAElBrK,SAAU,kiBASV8E,UAAW,CAACo0B,iDAtDNgC,UAFNtwB,EAAAA,kDAoECnN,EAAAA,oBAKAA,EAAAA,wBAKAA,EAAAA,0BAKAA,EAAAA,4BAMAA,EAAAA,OAAK,CAAAM,KAAImvB,EAAAA,aAAY3wB,KAAA,CAACQ,EAAAA,4BAMtBmD,EAAAA,sBAMAA,EAAAA,2BAMAA,EAAAA,eCvHHi7B,GAAA,gCAgBSA,EAAA96B,QAAP,WAAwC,MAAO,CAACC,SAAU66B,wBAR3D56B,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAc,CAAC24B,IAAY14B,QAAS,CAAC04B,IAAYz4B,QAAS,CAACC,EAAAA,oBARtE,2CCS+D,yBACpB,uBAChB,kCAJ1BrE,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHCOrBC,GAAS,gBAOX,SAAA2+B,EAAmBz+B,GAAAC,KAAAD,YAAAA,6BAFpBE,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,wEAbpBC,EAAAA,kCAuBA,SAAAs+B,EAAmB1+B,GAAAC,KAAAD,YAAAA,6BAFpBE,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,0EArBpBC,EAAAA,uDAkCc,WAAWN,oBAQL,SAQpB6+B,EAAAp+B,UAAAC,sBAAA,WAKEP,KAAKQ,SAAWR,KAAKS,UAAUC,MAC/BV,KAAKW,WAAaX,KAAKY,YAAYF,2BA3BtCT,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,0CAKnBW,EAAAA,qBAIAA,EAAAA,wBAIAA,EAAAA,yBAKAC,EAAAA,gBAAenB,KAAA,CAAC6+B,GAAa,CAACz9B,aAAa,yBAC3CD,EAAAA,gBAAenB,KAAA,CAAC8+B,GAAe,CAAC19B,aAAa,0BA6G9C,SAAA49B,EAAY19B,uBAjCa,iBA+BH,IAAIC,EAAAA,aAGxBlB,KAAKmB,KAAOF,EAAOE,KACnBnB,KAAK4+B,QAAU39B,EAAO29B,QACtB5+B,KAAK6+B,YAAc59B,EAAO49B,mBA7B5Br4B,OAAAC,eACIk4B,EAAAr+B,UAAA,UAAO,KADX,SACYmzB,GAERzzB,KAAK8+B,aADW,SAAdrL,GAAsC,cAAdA,EACN,OAAOA,EAEP,mBAAmBA,mCA+B3CkL,EAAAr+B,UAAAuL,OAAA,SAAOkzB,GACL,IAAIC,EAAch/B,KAAKi/B,YAAYF,GACnC,GAAIC,IAAgBA,EAAYn9B,UAAY7B,KAAK0L,WAAaszB,EAAYp9B,GAAI,CAC5E,IAAIE,GAAmB,EAEvB9B,KAAKk/B,UAAUl9B,KACX,CAAC0J,SAAU1L,KAAK0L,SAAU7L,OAAQm/B,EAAYp9B,GAAIO,eAAgB,WAAQL,GAAmB,KAE5FA,IACH9B,KAAK0L,SAAWszB,EAAYp9B,MAKlC+8B,EAAAr+B,UAAAC,sBAAA,WAEE,IAAI4+B,EAAYn/B,KAAKi/B,YAAYj/B,KAAK0L,UACtC1L,KAAK0L,SAAWyzB,EAAYA,EAAUv9B,GAAM5B,KAAKo/B,KAAKz8B,OAAS3C,KAAKo/B,KAAK1+B,MAAMkB,GAAK,MAG9E+8B,EAAAr+B,UAAA2+B,qBAAYr9B,GAClB,IAAIy9B,EAAuBr/B,KAAKo/B,KAAKx8B,OAAO,SAAA08B,GAAO,OAAAA,EAAI19B,KAAOA,IAC9D,OAAOy9B,EAAW18B,OAAS08B,EAAW,GAAK,0BA1G9Cv8B,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,aACV6C,SAAU,YACVK,SAAU,kxCAhFJm8B,oCA4GLz+B,EAAAA,gBAAenB,KAAA,CAAC++B,sBAKhB79B,EAAAA,6BAKAA,EAAAA,uBAOAA,EAAAA,2BAaAA,EAAAA,oBAMAA,EAAAA,yBAKAyC,EAAAA,eCzJGk8B,GAAwB,CAACb,GAAWD,GAAQD,GAAeD,uCAUxDiB,EAAAh8B,QAAP,WAAwC,MAAO,CAACC,SAAU+7B,wBAR3D97B,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAc47B,GAAuB37B,QAAS27B,GAAuB17B,QAAS,CAACC,EAAAA,uBCR1F27B,GAAA,WAKE,SAAAA,EAAYC,EAAeC,EAAiBC,GAC1C7/B,KAAK2/B,KAAOnhC,EAAUmhC,GACtB3/B,KAAK4/B,OAASphC,EAAUohC,GACxB5/B,KAAK6/B,OAASrhC,EAAUqhC,UAG1BH,EAAAp/B,UAAAw/B,WAAA,SAAWC,QAAA,IAAAA,IAAAA,EAAA,GAAY//B,KAAKggC,YAAY7gC,MAAMa,KAAK2/B,MAAQ,EAAI3/B,KAAK2/B,MAAQI,IAE5EL,EAAAp/B,UAAA0/B,WAAA,SAAWL,GACLzgC,EAASygC,GACX3/B,KAAK2/B,MAAQA,EAAO,EAAI,GAAKA,EAAOA,GAAQ,GAE5C3/B,KAAK2/B,KAAOM,KAIhBP,EAAAp/B,UAAA4/B,aAAA,SAAaH,QAAA,IAAAA,IAAAA,EAAA,GAAY//B,KAAKmgC,cAAchhC,MAAMa,KAAK4/B,QAAU,EAAI5/B,KAAK4/B,QAAUG,IAEpFL,EAAAp/B,UAAA6/B,aAAA,SAAaP,GACP1gC,EAAS0gC,IACX5/B,KAAK4/B,OAASA,EAAS,GAAK,EAAI,GAAKA,EAAS,GAAKA,EAAS,GAC5D5/B,KAAK8/B,WAAW9gC,KAAKM,MAAMsgC,EAAS,MAEpC5/B,KAAK4/B,OAASK,KAIlBP,EAAAp/B,UAAA8/B,aAAA,SAAaL,QAAA,IAAAA,IAAAA,EAAA,GAAY//B,KAAKqgC,cAAclhC,MAAMa,KAAK6/B,QAAU,EAAI7/B,KAAK6/B,QAAUE,IAEpFL,EAAAp/B,UAAA+/B,aAAA,SAAaR,GACP3gC,EAAS2gC,IACX7/B,KAAK6/B,OAASA,EAAS,EAAI,GAAKA,EAAS,GAAKA,EAAS,GACvD7/B,KAAKkgC,aAAalhC,KAAKM,MAAMugC,EAAS,MAEtC7/B,KAAK6/B,OAASI,KAIlBP,EAAAp/B,UAAAgS,QAAA,SAAQguB,GACN,YADM,IAAAA,IAAAA,GAAA,GACCphC,EAASc,KAAK2/B,OAASzgC,EAASc,KAAK4/B,WAAYU,GAAYphC,EAASc,KAAK6/B,UAGpFH,EAAAp/B,UAAA3B,SAAA,WAAa,OAAUqB,KAAK2/B,MAAQ,GAAC,KAAI3/B,KAAK4/B,QAAU,GAAC,KAAI5/B,KAAK6/B,QAAU,MA/C9E,6CCOa,iBACA,gBACD,gBACC,kBACE,kBACA,iBACF,uBACM,YACoB,oCAVtCngC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,4KCKxBF,EAAAA,oGAeyCyR,EAAAA,EAAAA,GAIxCovB,EAAAjgC,UAAA8a,UAAA,SAAUlJ,GACR,OAAQA,GAAQ9S,EAAU8S,EAAKytB,OAASvgC,EAAU8S,EAAK0tB,QACnD,CAACD,KAAMztB,EAAKytB,KAAMC,OAAQ1tB,EAAK0tB,OAAQC,OAAQzgC,EAAU8S,EAAK2tB,QAAU3tB,EAAK2tB,OAAS,MACtF,MAMNU,EAAAjgC,UAAA+a,QAAA,SAAQnJ,GACN,OAAQA,GAAQ9S,EAAU8S,EAAKytB,OAASvgC,EAAU8S,EAAK0tB,QACnD,CAACD,KAAMztB,EAAKytB,KAAMC,OAAQ1tB,EAAK0tB,OAAQC,OAAQzgC,EAAU8S,EAAK2tB,QAAU3tB,EAAK2tB,OAAS,MACtF,0BAjBPngC,EAAAA,gBACyC8gC,ICnBpCC,GAAgC,CACpCz6B,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAu6B,KAC9Br6B,OAAO,iBAoLP,SAAAq6B,EAAYz/B,EAAqC0/B,GAAA3gC,KAAA2gC,gBAAAA,gBAYtC,SAACp6B,oBACA,aAZVvG,KAAK4gC,SAAW3/B,EAAO2/B,SACvB5gC,KAAK6gC,SAAW5/B,EAAO4/B,SACvB7gC,KAAK8gC,QAAU7/B,EAAO6/B,QACtB9gC,KAAK+gC,SAAW9/B,EAAO8/B,SACvB/gC,KAAKghC,WAAa//B,EAAO+/B,WACzBhhC,KAAKihC,WAAahgC,EAAOggC,WACzBjhC,KAAK6B,SAAWZ,EAAOY,SACvB7B,KAAKkhC,eAAiBjgC,EAAOigC,eAC7BlhC,KAAKy3B,KAAOx2B,EAAOw2B,YAMrBiJ,EAAApgC,UAAA+G,WAAA,SAAW5I,GACT,IAAM0iC,EAAcnhC,KAAK2gC,gBAAgBvlB,UAAU3c,GACnDuB,KAAKyX,MAAQ0pB,EAAc,IAAIzB,GAAQyB,EAAYxB,KAAMwB,EAAYvB,OAAQuB,EAAYtB,QAAU,IAAIH,GAClG1/B,KAAK8gC,SAAaK,GAAgBjiC,EAASiiC,EAAYtB,UAC1D7/B,KAAKyX,MAAMooB,OAAS,IAIxBa,EAAApgC,UAAAgH,iBAAA,SAAiBC,GAAiCvH,KAAKoH,SAAWG,GAElEm5B,EAAApgC,UAAAkH,kBAAA,SAAkBD,GAAuBvH,KAAK4G,UAAYW,GAE1Dm5B,EAAApgC,UAAAmH,iBAAA,SAAiBC,GAAuB1H,KAAK6B,SAAW6F,GAExDg5B,EAAApgC,UAAAw/B,WAAA,SAAWC,GACT//B,KAAKyX,MAAMqoB,WAAWC,GACtB//B,KAAKohC,wBAGPV,EAAApgC,UAAA4/B,aAAA,SAAaH,GACX//B,KAAKyX,MAAMyoB,aAAaH,GACxB//B,KAAKohC,wBAGPV,EAAApgC,UAAA8/B,aAAA,SAAaL,GACX//B,KAAKyX,MAAM2oB,aAAaL,GACxB//B,KAAKohC,wBAGPV,EAAApgC,UAAA0/B,WAAA,SAAWqB,GACT,IAAMC,EAA0B,IAAnBthC,KAAKyX,MAAMkoB,KAClB4B,EAAc/iC,EAAU6iC,GAC1BrhC,KAAK4gC,WAAaU,GAAQC,EAAc,KAAOD,GAAwB,KAAhBC,GACzDvhC,KAAKyX,MAAMuoB,WAAWuB,EAAc,IAEpCvhC,KAAKyX,MAAMuoB,WAAWuB,GAExBvhC,KAAKohC,wBAGPV,EAAApgC,UAAA6/B,aAAA,SAAakB,GACXrhC,KAAKyX,MAAM0oB,aAAa3hC,EAAU6iC,IAClCrhC,KAAKohC,wBAGPV,EAAApgC,UAAA+/B,aAAA,SAAagB,GACXrhC,KAAKyX,MAAM4oB,aAAa7hC,EAAU6iC,IAClCrhC,KAAKohC,wBAGPV,EAAApgC,UAAAkhC,eAAA,WACMxhC,KAAK4gC,UACP5gC,KAAK8/B,WAAW,KAIpBY,EAAApgC,UAAAmhC,WAAA,SAAWhjC,GACT,OAAIS,EAAST,GACPuB,KAAK4gC,SACAphC,EAAUf,EAAQ,IAAO,EAAI,GAAKA,EAAQ,IAE1Ce,EAAUf,EAAQ,IAGpBe,EAAUygC,MAIrBS,EAAApgC,UAAAohC,aAAA,SAAajjC,GAAiB,OAAOe,EAAUf,IAE/CiiC,EAAApgC,UAAAqhC,mBAAA,WAAuB,MAAO,CAACC,kBAAiC,UAAd5hC,KAAKy3B,KAAkBoK,kBAAiC,UAAd7hC,KAAKy3B,OAEjGiJ,EAAApgC,UAAAwhC,cAAA,WAAkB,MAAO,CAACC,SAAwB,UAAd/hC,KAAKy3B,KAAkBuK,SAAwB,UAAdhiC,KAAKy3B,OAG1EiJ,EAAApgC,UAAAgE,YAAA,SAAYC,GACNA,EAAiB,UAAMvE,KAAK8gC,SAAW9gC,KAAKyX,QAAUvY,EAASc,KAAKyX,MAAMooB,UAC5E7/B,KAAKyX,MAAMooB,OAAS,EACpB7/B,KAAKohC,sBAAqB,KAItBV,EAAApgC,UAAA8gC,8BAAqBa,QAAA,IAAAA,IAAAA,GAAA,GACvBA,GACFjiC,KAAK4G,YAEH5G,KAAKyX,MAAMnF,QAAQtS,KAAK8gC,SAC1B9gC,KAAKoH,SACDpH,KAAK2gC,gBAAgBtlB,QAAQ,CAACskB,KAAM3/B,KAAKyX,MAAMkoB,KAAMC,OAAQ5/B,KAAKyX,MAAMmoB,OAAQC,OAAQ7/B,KAAKyX,MAAMooB,UAEvG7/B,KAAKoH,SAASpH,KAAK2gC,gBAAgBtlB,QAAQ,4BAvRhDvY,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,iBACVkF,OAAQ,CAAC,iwCA4DThC,SAAU,mxIAiEV8E,UAAW,CAACu4B,iDA3INyB,UACA1B,wCAoJL3/B,EAAAA,wBAKAA,EAAAA,uBAKAA,EAAAA,wBAKAA,EAAAA,0BAKAA,EAAAA,0BAKAA,EAAAA,8BAKAA,EAAAA,oBAKAA,EAAAA,cC7LHshC,GAAA,gCAwBSA,EAAA1+B,QAAP,WAAwC,MAAO,CAACC,SAAUy+B,wBAb3Dx+B,EAAAA,SAAQhE,KAAA,CAAC,CACRiE,aAAc,CAAC88B,IACf78B,QAAS,CAAC68B,IACV58B,QAAS,CAACC,EAAAA,cACVmE,UAAW,CAAC,CAAClC,QAASw6B,GAAgBlS,SAAUiS,WAflD,8CCU8C,iBAChB,oBACjB,6BAEM,6BANlB7gC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHCuBrBC,GAAS,gBA2CX,SAAAuiC,EAAoBl+B,EAA2CD,GAA3CjE,KAAAkE,SAAAA,EAA2ClE,KAAAiE,UAAAA,iBAH/B,aAKhCm+B,EAAA9hC,UAAAquB,eAAA,SAAeC,GAEb5uB,KAAKiE,UAAUS,YAAY1E,KAAKkE,SAASS,cAAe,cAAgB3E,KAAKugB,UAAU5hB,WAAW6D,MAAM,KAAK,IAC7GxC,KAAKiE,UAAUS,YAAY1E,KAAKkE,SAASS,cAAe,cAAgB3E,KAAKugB,UAAU5hB,YAGvFqB,KAAKugB,UAAYqO,EAGjB5uB,KAAKiE,UAAUY,SAAS7E,KAAKkE,SAASS,cAAe,cAAgB3E,KAAKugB,UAAU5hB,WAAW6D,MAAM,KAAK,IAC1GxC,KAAKiE,UAAUY,SAAS7E,KAAKkE,SAASS,cAAe,cAAgB3E,KAAKugB,UAAU5hB,aAStFyjC,EAAA9hC,UAAAmuB,YAAA,SAAY7T,GAAyB,OAAO5a,KAAKkE,SAASS,cAAc+iB,SAAS9M,EAA2B,6BA9D7G9X,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,qBACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzClC,KAAM,CACJ0tB,UAAW,kFACXxtB,KAAQ,UACRs3B,OAAQ,MAEVp3B,SAAU,sFACVgC,OAAQ,CAAC,guBA7BTG,EAAAA,kBAFAD,EAAAA,gDA4DCzE,EAAAA,kBACAA,EAAAA,4BAiFD,SAAAwhC,EACY3mB,EAA8CzX,EAAsBoxB,EAC5EqF,EAAoDC,EAAoC15B,EAChFiJ,EAA2C2a,GAHvD,IAAAviB,EAAAtC,KACYA,KAAA0b,YAAAA,EAA8C1b,KAAAiE,UAAAA,EAE9CjE,KAAAkK,QAAAA,EAA2ClK,KAAA6kB,UAAAA,aAhBrC,IAAI3jB,EAAAA,yBAIH,IAAIA,EAAAA,sCAGO,eAAerB,KAU3CG,KAAK4mB,UAAY3lB,EAAO2lB,UACxB5mB,KAAKugB,UAAYtf,EAAOsf,UACxBvgB,KAAKw5B,SAAWv4B,EAAOu4B,SACvBx5B,KAAKilB,UAAYhkB,EAAOgkB,UACxBjlB,KAAKsiC,eAAiBrhC,EAAOqhC,eAC7BtiC,KAAK86B,cAAgB,IAAI7I,GACrBmQ,GAAkB/M,EAAUsF,EAAkB12B,EAAWy2B,GAE7D16B,KAAK8kB,kBAAoB5a,EAAQqS,SAASnR,UAAU,WAC9C9I,EAAKiwB,YACPjwB,EAAKiwB,WAAWrN,SAASyJ,eACrBvO,GACI9d,EAAKoZ,YAAY/W,cAAerC,EAAKiwB,WAAWvN,SAASrgB,cAAerC,EAAKie,UAC1D,SAAnBje,EAAK2iB,qBAQnBze,OAAAC,eACI47B,EAAA/hC,UAAA,aAAU,KAOd,WAAmB,OAAON,KAAKuiC,iBAR/B,SACe9jC,KACbuB,KAAKuiC,YAAc9jC,IACLuB,KAAKuyB,YACjBvyB,KAAKqE,yCAUTg+B,EAAA/hC,UAAA6X,KAAA,SAAKvD,GAAL,IAAAtS,EAAAtC,KACOA,KAAKuyB,aAAcvyB,KAAKuiC,aAAgBviC,KAAKsiC,iBAChDtiC,KAAKuyB,WAAavyB,KAAK86B,cAAc3iB,KAAKnY,KAAKuiC,YAAa3tB,GAC5D5U,KAAKuyB,WAAWrN,SAAStjB,GAAK5B,KAAKwiC,oBAEnCxiC,KAAKiE,UAAUm3B,aAAap7B,KAAK0b,YAAY/W,cAAe,mBAAoB3E,KAAKwiC,qBAE9D,SAAnBxiC,KAAKilB,WACPjlB,KAAK6kB,UAAUlI,cAAc3c,KAAKilB,WAAWuB,YAAYxmB,KAAKuyB,WAAWvN,SAASrgB,eAGpF3E,KAAKuyB,WAAWrN,SAAS3E,UAAY3R,MAAMwT,QAAQpiB,KAAKugB,WAAavgB,KAAKugB,UAAU,GAAKvgB,KAAKugB,UAG9FvgB,KAAKuyB,WAAWhM,kBAAkBhb,gBAClCvL,KAAKuyB,WAAWhM,kBAAkBjK,eAGlCtc,KAAKuyB,WAAWrN,SAASyJ,eACrBvO,GACIpgB,KAAK0b,YAAY/W,cAAe3E,KAAKuyB,WAAWvN,SAASrgB,cAAe3E,KAAKugB,UAC1D,SAAnBvgB,KAAKilB,YAETjlB,KAAK4mB,WACP5mB,KAAKkK,QAAQW,kBAAkB,WAK7B,IAAIwwB,GAAa,EACjBvU,sBAAsB,WAAM,OAAAuU,GAAa,IAEzC,IAAM1U,EAAWhD,EAAAA,UAAyBrhB,EAAKuiB,UAAW,SACpC9Z,KAAKG,EAAAA,UAAU5I,EAAK2S,QAASrS,EAAAA,OAAO,SAAAgY,GAAS,OAAAA,EAAME,QAAUD,GAAInB,UAEjFqW,EAAUpM,EAAAA,UAAsBrhB,EAAKuiB,UAAW,SACjC9Z,KACGG,EAAAA,UAAU5I,EAAK2S,QAASrS,EAAAA,OAAO,WAAM,OAACy4B,IACtCz4B,EAAAA,OAAO,SAAAgY,GAAS,OAAAtY,EAAK0tB,sBAAsBpV,MAEnEqM,EAAAA,KAAY,CAACN,EAAUoJ,IAAU3kB,UAAU,WAAM,OAAA9I,EAAK4H,QAAQmB,IAAI,WAAM,OAAA/I,EAAK+B,cAIjFrE,KAAKs7B,MAAMt5B,SAOfqgC,EAAA/hC,UAAA+D,MAAA,WACyB,MAAnBrE,KAAKuyB,aACPvyB,KAAKiE,UAAUs3B,gBAAgBv7B,KAAK0b,YAAY/W,cAAe,oBAC/D3E,KAAK86B,cAAcz2B,QACnBrE,KAAKuyB,WAAa,KAClBvyB,KAAKiV,OAAOjT,SAOhBqgC,EAAA/hC,UAAAgB,OAAA,WACMtB,KAAKuyB,WACPvyB,KAAKqE,QAELrE,KAAKmY,QAOTkqB,EAAA/hC,UAAA4B,OAAA,WAAoB,OAA0B,MAAnBlC,KAAKuyB,YAEhC8P,EAAA/hC,UAAAyE,SAAA,WACE/E,KAAKw7B,uBAAyBlC,GAC1Bt5B,KAAKiE,UAAWjE,KAAK0b,YAAY/W,cAAe3E,KAAKw5B,SAAUx5B,KAAKmY,KAAKsjB,KAAKz7B,MAAOA,KAAKqE,MAAMo3B,KAAKz7B,MACrGA,KAAKsB,OAAOm6B,KAAKz7B,QAGvBqiC,EAAA/hC,UAAAoJ,YAAA,WACE1J,KAAKqE,QAGDrE,KAAKw7B,wBACPx7B,KAAKw7B,yBAEPx7B,KAAK8kB,kBAAkB5H,eAGjBmlB,EAAA/hC,UAAA0vB,+BAAsBpV,GAC5B,GAAqB,IAAjBA,EAAMqV,OAAc,CACtB,IAAuB,IAAnBjwB,KAAK4mB,UACP,OAAO,EACF,GAAuB,WAAnB5mB,KAAK4mB,WAA0B5mB,KAAKyiC,oBAAoB7nB,GACjE,OAAO,EACF,GAAuB,YAAnB5a,KAAK4mB,YAA4B5mB,KAAKyiC,oBAAoB7nB,GACnE,OAAO,EAGX,OAAO,GAGDynB,EAAA/hC,UAAAmiC,6BAAoB7nB,GAC1B,IAAM+gB,EAAQ37B,KAAKuyB,WAAWrN,SAC9B,QAAOyW,GAAQA,EAAMlN,YAAY7T,wBAtMpC3a,EAAAA,UAASN,KAAA,CAAC,CAACO,SAAU,eAAgB6C,SAAU,0DAxF9CwC,EAAAA,kBAFAD,EAAAA,iBADAoxB,EAAAA,gBAMA5O,EAAAA,gCADAD,EAAAA,wBAcM6a,UAZN30B,EAAAA,0CA2I8BF,EAAAA,OAAMlO,KAAA,CAACooB,EAAAA,kDA1CpClnB,EAAAA,yBAOAA,EAAAA,wBAIAA,EAAAA,yBAKAA,EAAAA,8BAMAA,EAAAA,qBAIAyC,EAAAA,uBAIAA,EAAAA,2BAkCAzC,EAAAA,cClLH8hC,GAAA,gCAeSA,EAAAl/B,QAAP,WAAwC,MAAO,CAACC,SAAUi/B,wBAP3Dh/B,EAAAA,SAAQhE,KAAA,CAAC,CAACiE,aAAc,CAACy+B,GAAYD,IAAmBv+B,QAAS,CAACw+B,IAAa58B,gBAAiB,CAAC28B,UARlG,kDCyB4B,uBAY1BQ,EAAAtiC,UAAAgE,YAAA,SAAYC,GACV,IAAMs+B,EAAYlkC,EAASqB,KAAK4zB,QAC1BkP,EAAWD,EAAUE,cACrBC,EAASrkC,EAASqB,KAAKijC,MAAMF,cAC/BG,EAAa,EAEG,EAAhBF,EAAOrgC,OACT3C,KAAKmjC,MAAQL,EAAStgC,MAAM,IAAI4gC,OAAO,I/ER7C,SAAAC,EAA6BC,GAC3B,OAAOA,EAAKC,QAAQ,2BAA4B,Q+EODF,CAAaL,GAAO,MAAMngC,IAAI,SAAC2gC,GACxE,IAAMC,EAAeZ,EAAUa,OAAOR,EAAYM,EAAK7gC,QAEvD,OADAugC,GAAcM,EAAK7gC,OACZ8gC,IAGTzjC,KAAKmjC,MAAQ,CAACN,wBA3CnB//B,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,gBACV8E,gBAAiBC,EAAAA,wBAAwBC,OACzC9B,SAAU,+LAGVgC,OAAQ,CAAC,2GAYRvE,EAAAA,sBAKAA,EAAAA,oBAKAA,EAAAA,cCnCH8iC,GAAA,uCAwCc,mBAWU,iBAgBDhlC,mBAUW,IAAIuC,EAAAA,oCAEQ,IAAIA,EAAAA,oBAEhDyiC,EAAArjC,UAAAsjC,UAAA,WAAc,OAAyB,EAAlB5jC,KAAK6jC,WAAkB7jC,KAAK6jC,UAAY7jC,KAAK8jC,QAAQnhC,QAE1EghC,EAAArjC,UAAAyjC,UAAA,WAAc,OAAO/jC,KAAK8jC,QAAQ9jC,KAAK6jC,YAEvCF,EAAArjC,UAAA0jC,WAAA,SAAWH,GACT7jC,KAAK6jC,UAAYA,EACjB7jC,KAAKikC,kBAGPN,EAAArjC,UAAAgL,KAAA,WACMtL,KAAK6jC,YAAc7jC,KAAK8jC,QAAQnhC,OAAS,EAC3C3C,KAAK6jC,UAAY7jC,KAAKkkC,YAAclkC,KAAK6jC,UAAY,GAAK7jC,KAAK8jC,QAAQnhC,QAAU,EAEjF3C,KAAK6jC,YAEP7jC,KAAKikC,kBAGPN,EAAArjC,UAAA2L,KAAA,WACMjM,KAAK6jC,UAAY,EACnB7jC,KAAK6jC,UAAY7jC,KAAK8jC,QAAQnhC,OAAS,EACX,IAAnB3C,KAAK6jC,UACd7jC,KAAK6jC,UAAY7jC,KAAKkkC,WAAalkC,KAAK8jC,QAAQnhC,OAAS,GAAK,EAE9D3C,KAAK6jC,YAEP7jC,KAAKikC,kBAGPN,EAAArjC,UAAA6jC,YAAA,WACEnkC,KAAK6jC,UAAY7jC,KAAKkkC,WAAa,GAAK,EACxClkC,KAAKikC,kBAGPN,EAAArjC,UAAAuL,OAAA,SAAO+W,GAAQ5iB,KAAKokC,YAAYpiC,KAAK4gB,IAErC+gB,EAAArjC,UAAAyE,SAAA,WAAa/E,KAAKmkC,eAEVR,EAAArjC,UAAA2jC,0BACNjkC,KAAKqkC,kBAAkBriC,KAAuB,GAAlBhC,KAAK6jC,UAAiB7jC,KAAK4B,GAAK,IAAM5B,KAAK6jC,UAAYjlC,gCArGtFkE,EAAAA,UAASnD,KAAA,CAAC,CACTO,SAAU,uBACV6C,SAAU,qBACVC,KAAM,CAACC,QAAS,qBAAsBC,KAAQ,UAAWs3B,OAAQ,MACjEp3B,SAAU,mtBAuBTvC,EAAAA,0BAKAA,EAAAA,uBAKAA,EAAAA,oBAKAA,EAAAA,yBAMAA,EAAAA,8BAKAA,EAAAA,2BAKAyC,EAAAA,OAAM3D,KAAA,CAAC,qCAEP2D,EAAAA,OAAM3D,KAAA,CAAC,qBA/EV,GCQa2kC,GAAkB,IAAIC,EAAAA,eAC/B,uBAAwB,CAAC3kC,WAAY,OAAQ4kC,QAASC,KAC1D,SAAAA,KACE,OAAO,IAIT,SAAAC,GAAwB5lB,EAAe6lB,QAAA,IAAAA,IAAAA,GAAA,GACrC,IAAIrmB,EAAUQ,EAAS0S,KAAK7U,cAAc,aAc1C,OAZe,MAAX2B,GAAmBqmB,KACrBrmB,EAAUQ,EAAS0U,cAAc,QAEzB4H,aAAa,KAAM,YAC3B9c,EAAQ8c,aAAa,YAAa,UAClC9c,EAAQ8c,aAAa,cAAe,QAEpC9c,EAAQsmB,UAAU/7B,IAAI,WAEtBiW,EAAS0S,KAAKhL,YAAYlI,IAGrBA,oBAOP,SAAAumB,EAAsChgB,EAAiDigB,GAAjD9kC,KAAA6kB,UAAAA,EAAiD7kB,KAAA8kC,OAAAA,SAEvFD,EAAAvkC,UAAAoJ,YAAA,WACE,IAAM4U,EAAUomB,GAAe1kC,KAAK6kB,WAChCvG,GACFA,EAAQymB,cAAcrR,YAAYpV,IAItCumB,EAAAvkC,UAAA0kC,IAAA,SAAIC,GACF,IAAM3mB,EAAUomB,GAAe1kC,KAAK6kB,WAAW,GACzCqgB,EAAQllC,KAAK8kC,OAEnBxmB,EAAQ6mB,YAAc,GACtB,IAAMC,EAAU,WAAM,OAAA9mB,EAAQ6mB,YAAcF,GAC9B,OAAVC,EACFE,IAEAC,WAAWD,EAASF,wBApBzBxlC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gFAEViO,EAAAA,OAAMlO,KAAA,CAACooB,EAAAA,+CAAmCla,EAAAA,OAAMlO,KAAA,CAAC2kC,gMC1BnD,mBACE,iBACF,iBACiB,yCAN7B5kC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,qHCoBnB0lC,GAA+B,CACnCt/B,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAo/B,KAC9Bl/B,OAAO,GAkBLm/B,GAAe,gBAyGjB,SAAAD,EACY7pB,EAAmD0W,EACnDnuB,EAA8BkuB,EAAqBuI,EAC3Dz5B,EAA4BwkC,EAAwBC,GAHxD,IAAApjC,EAAAtC,KACYA,KAAA0b,YAAAA,EAAmD1b,KAAAoyB,kBAAAA,EACnDpyB,KAAAiE,UAAAA,EAA8BjE,KAAAmyB,UAAAA,EACcnyB,KAAA0lC,MAAAA,oBAlEhC,qBAkDa,8BAKd,IAAIxkC,EAAAA,0BAGjB,iBAAiBskC,qBAEN,4BACD,SAACj/B,KAMnBvG,KAAKilB,UAAYhkB,EAAOgkB,UACxBjlB,KAAK2lC,SAAW1kC,EAAO0kC,SACvB3lC,KAAKkkC,WAAajjC,EAAOijC,WACzBlkC,KAAK4lC,SAAW3kC,EAAO2kC,SACvB5lC,KAAKugB,UAAYtf,EAAOsf,UAExBvgB,KAAK6lC,cAAgBliB,EAAAA,UAAiBjI,EAAY/W,cAAe,SACvCoG,KAAKlI,EAAAA,IAAI,SAAAiE,GAAU,OAACA,EAAiC,OAAErI,SAEjFuB,KAAK8lC,sBAAwB,IAAIC,EAAAA,gBAAgB,MAEjD/lC,KAAK86B,cAAgB,IAAI7I,GACrB0R,GAAoBxR,EAAWC,EAAmBnuB,EAAWy2B,GAEjE16B,KAAK8kB,kBAAoB2gB,EAAOlpB,SAASnR,UAAU,WAC7C9I,EAAK0jC,eACP5lB,GACI9d,EAAKoZ,YAAY/W,cAAerC,EAAKiwB,WAAWvN,SAASrgB,cAAerC,EAAKie,UAC1D,SAAnBje,EAAK2iB,oBAKfsgB,EAAAjlC,UAAAyE,SAAA,WAAA,IAAAzC,EAAAtC,KAQQimC,EAPejmC,KAAK6lC,cAAc96B,KAAKm7B,EAAAA,IAAI,SAAAznC,GAC/C6D,EAAK6jC,kBAAoB1nC,EACrB6D,EAAKqjC,UACPrjC,EAAK6iB,UAAU1mB,MAGWsM,KAAK/K,KAAKomC,cACLr7B,KAAKm7B,EAAAA,IAAI,WACrC5jC,EAAKqjC,UACRrjC,EAAK6iB,UAAUvmB,cAGbynC,EAAarmC,KAAK8lC,sBAAsB/6B,KAAKC,EAAAA,UAAU,WAAM,OAAAi7B,KACnEjmC,KAAK+b,cAAgB/b,KAAKsmC,sBAAsBD,IAGlDd,EAAAjlC,UAAAoJ,YAAA,WACE1J,KAAKumC,cACLvmC,KAAKwmC,4BACLxmC,KAAK8kB,kBAAkB5H,eAGzBqoB,EAAAjlC,UAAAgH,iBAAA,SAAiBC,GAAiCvH,KAAKmlB,UAAY5d,GAEnEg+B,EAAAjlC,UAAAkH,kBAAA,SAAkBD,GAAuBvH,KAAKolB,WAAa7d,GAE3Dg+B,EAAAjlC,UAAA+G,WAAA,SAAW5I,GAASuB,KAAKymC,iBAAiBzmC,KAAK0mC,oBAAoBjoC,KAEnE8mC,EAAAjlC,UAAAmH,iBAAA,SAAiBC,GACf1H,KAAKiE,UAAUsF,YAAYvJ,KAAK0b,YAAY/W,cAAe,WAAY+C,IAGzE69B,EAAAjlC,UAAAqmC,gBAAA,SAAgB/rB,GACVA,EAAM5T,SAAWhH,KAAK0b,YAAY/W,eACpC3E,KAAK4mC,gBAOTrB,EAAAjlC,UAAAsmC,aAAA,WACM5mC,KAAKgmC,gBACPhmC,KAAKumC,cACLvmC,KAAKymC,iBAAiBzmC,KAAKmmC,qBAO/BZ,EAAAjlC,UAAA0lC,YAAA,WAAgB,OAA0B,MAAnBhmC,KAAKuyB,YAE5BgT,EAAAjlC,UAAAu8B,WAAA,WACE78B,KAAK8lC,sBAAsBx6B,KAAK,MAChCtL,KAAKolB,cAGPmgB,EAAAjlC,UAAA48B,cAAA,SAActiB,GACZ,GAAK5a,KAAKgmC,eAINnrB,GAAIlc,EAASic,EAAME,QACrB,OAAQF,EAAME,OACZ,KAAKD,GAAIV,UACPS,EAAMzY,iBACNnC,KAAKuyB,WAAWrN,SAAS5Z,OACzBtL,KAAK6mC,YACL,MACF,KAAKhsB,GAAIZ,QACPW,EAAMzY,iBACNnC,KAAKuyB,WAAWrN,SAASjZ,OACzBjM,KAAK6mC,YACL,MACF,KAAKhsB,GAAIpB,MACT,KAAKoB,GAAIrB,IACP,IAAMoa,EAAS5zB,KAAKuyB,WAAWrN,SAAS6e,YACpCxkC,EAAUq0B,KACZhZ,EAAMzY,iBACNyY,EAAMI,kBACNhb,KAAK8mC,cAAclT,IAErB5zB,KAAKumC,cACL,MACF,KAAK1rB,GAAInB,OACPkB,EAAMzY,iBACNnC,KAAK8lC,sBAAsBx6B,KAAK,MAChCtL,KAAK4mC,iBAMLrB,EAAAjlC,UAAAymC,iCACD/mC,KAAKgmC,gBACRhmC,KAAKmmC,kBAAoBnmC,KAAK0b,YAAY/W,cAAclG,MACxDuB,KAAKuyB,WAAavyB,KAAK86B,cAAc3iB,OACrCnY,KAAKuyB,WAAWrN,SAAStjB,GAAK5B,KAAKgnC,QACnChnC,KAAKuyB,WAAWrN,SAASkf,YAAYh5B,UAAU,SAACwoB,GAAgB,OAAAtxB,EAAK2kC,wBAAwBrT,KAC7F5zB,KAAKuyB,WAAWrN,SAASmf,kBAAkBj5B,UAAU,SAACM,GAAqB,OAAApJ,EAAK4kC,iBAAmBx7B,IAE5E,SAAnB1L,KAAKilB,WACP1G,OAAOO,SAASnC,cAAc3c,KAAKilB,WAAWuB,YAAYxmB,KAAKuyB,WAAWvN,SAASrgB,iBAKjF4gC,EAAAjlC,UAAAimC,uBACNvmC,KAAK86B,cAAcz2B,QACnBrE,KAAKuyB,WAAa,KAClBvyB,KAAKknC,iBAAmBtoC,WAGlB2mC,EAAAjlC,UAAAwmC,uBAAclT,GACpB,IAAIxC,GAAmB,EACvBpxB,KAAKmnC,WAAWnlC,KAAK,CAAC4gB,KAAMgR,EAAQzxB,eAAgB,WAAQivB,GAAmB,KAC/EpxB,KAAK8lC,sBAAsBx6B,KAAK,MAE3B8lB,IACHpxB,KAAKqH,WAAWusB,GAChB5zB,KAAKmlB,UAAUyO,KAIX2R,EAAAjlC,UAAA2mC,iCAAwBrT,GAC9B5zB,KAAK8mC,cAAclT,GACnB5zB,KAAKumC,eAGChB,EAAAjlC,UAAAumC,qBACN,GAAI7mC,KAAK4lC,UAAY5lC,KAAKuyB,WAAWrN,SAAS0e,aAAyC,MAA1B5jC,KAAKmmC,kBAA2B,CAC3F,IAAMiB,EAAqBpnC,KAAKmmC,kBAAkBpD,cAC5CsE,EAAernC,KAAK0mC,oBAAoB1mC,KAAKuyB,WAAWrN,SAAS6e,aAEnEqD,IAAuBC,EAAa3D,OAAO,EAAG1jC,KAAKmmC,kBAAkBxjC,QAAQogC,eAC/E/iC,KAAKymC,iBAAiBzmC,KAAKmmC,kBAAoBkB,EAAa3D,OAAO1jC,KAAKmmC,kBAAkBxjC,SAC1F3C,KAAK0b,YAAY/W,cAAiC,kBAAEsY,MAChDjd,KAAK0b,YAAY/W,cAAe,CAAC3E,KAAKmmC,kBAAkBxjC,OAAQ0kC,EAAa1kC,UAEjF3C,KAAKqH,WAAWrH,KAAKuyB,WAAWrN,SAAS6e,eAKvCwB,EAAAjlC,UAAAomC,6BAAoB9jB,GAC1B,OAAe,MAARA,GAAgB5iB,KAAKsnC,eAAiBtnC,KAAKsnC,eAAe1kB,GAAQjkB,EAASikB,IAG5E2iB,EAAAjlC,UAAAmmC,0BAAiBhoC,GACvBuB,KAAKiE,UAAUsF,YAAYvJ,KAAK0b,YAAY/W,cAAe,QAAShG,EAASF,KAGvE8mC,EAAAjlC,UAAAgmC,+BAAsBD,cAC5B,OAAOA,EAAWj7B,UAAU,SAAC04B,GACtBA,GAA8B,IAAnBA,EAAQnhC,QAGtBL,EAAKykC,aACLzkC,EAAKiwB,WAAWrN,SAASgf,WAAa5hC,EAAK4hC,WAC3C5hC,EAAKiwB,WAAWrN,SAAS4e,QAAUA,EACnCxhC,EAAKiwB,WAAWrN,SAAS+d,KAAO3gC,EAAKoZ,YAAY/W,cAAclG,MAC3D6D,EAAKilC,kBACPjlC,EAAKiwB,WAAWrN,SAASsiB,UAAYllC,EAAKilC,iBAExCjlC,EAAKmlC,iBACPnlC,EAAKiwB,WAAWrN,SAASuiB,eAAiBnlC,EAAKmlC,gBAEjDnlC,EAAKiwB,WAAWrN,SAASif,cAKzB7hC,EAAKiwB,WAAWhM,kBAAkBhb,gBAElCjJ,EAAKukC,aAnBLvkC,EAAKikC,cAuBP,IAAMmB,EAAQ5D,EAAUA,EAAQnhC,OAAS,EACzCL,EAAKojC,MAAMV,IAAc,IAAV0C,EAAc,uBAA4BA,EAAK,WAAoB,IAAVA,EAAc,GAAK,KAAG,iBAI1FnC,EAAAjlC,UAAAkmC,qCACFxmC,KAAK+b,eACP/b,KAAK+b,cAAcmB,cAErBld,KAAK+b,cAAgB,0BA5TxB9b,EAAAA,UAASN,KAAA,CAAC,CACTO,SAAU,sBACV6C,SAAU,eACVC,KAAM,CACJiF,SAAU,eACV0/B,eAAgB,gBAChBC,mBAAoB,0BACpBvJ,YAAa,wBACbwJ,iBAAkB,eAClBC,eAAkB,MAClBC,YAAe,MACf7kC,KAAQ,WACR8kC,iBAAkB,QAClBC,2BAA4B,6BAC5BC,+BAAgC,mBAChCC,mBAAoB,iCACpB/Y,uBAAwB,iBAE1BlnB,UAAW,CAACo9B,iDApEZ//B,EAAAA,kBAWAsiB,EAAAA,wBAFAviB,EAAAA,iBANAoxB,EAAAA,gBANA5O,EAAAA,gCAwBMsgB,UAhBNr6B,EAAAA,cAeM82B,4CAmELhkC,EAAAA,yBAMAA,EAAAA,wBAKAA,EAAAA,0BAKAA,EAAAA,8BAKAA,EAAAA,4BAMAA,EAAAA,+BAMAA,EAAAA,8BAKAA,EAAAA,wBAKAA,EAAAA,yBAOAA,EAAAA,0BAKAyC,EAAAA,eClJH+kC,GAAA,gCAyBSA,EAAA5kC,QAAP,WAAwC,MAAO,CAACC,SAAU2kC,wBAb3D1kC,EAAAA,SAAQhE,KAAA,CAAC,CACRiE,aAAc,CAAC2hC,GAAc3C,GAAce,IAC3C9/B,QAAS,CAAC0hC,GAAc3C,IACxB9+B,QAAS,CAACC,EAAAA,cACV0B,gBAAiB,CAACk+B,UAhBpB,GCyFM2E,GAAc,CAClB9kC,EAAoBgC,EAAgBqE,EAAkBqE,EAAmBG,EAAmB+f,GAC5FoC,GAAmByG,GAAgB+B,GAAqB6C,GAAkBQ,GAAsBkC,GAChGkB,GAAiB0C,GAAqBQ,GAAkB0F,2DASzD1kC,EAAAA,SAAQhE,KAAA,CAAC,CAACmE,QAAS,CAACwkC,IAAczkC,QAASykC,+CAYnCC,EAAA9kC,QAAP,WAAwC,MAAO,CAACC,SAAU8kC,yBAR3D7kC,EAAAA,SAAQhE,KAAA,CAAC,CAACmE,QAASwkC,GAAazkC,QAASykC","sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAccordion component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * The NgbPanel directive represents an individual panel with the title and collapsible\n * content\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  A flag determining whether the panel is disabled or not.\n   *  When disabled, the panel cannot be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel. The id should be unique.\n   *  If not provided, it will be auto-generated.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  /**\n   * A flag telling if the panel is currently open\n   */\n  isOpen = false;\n\n  /**\n   *  The title for the panel.\n   */\n  @Input() title: string;\n\n  /**\n   *  Accordion's types of panels to be applied per panel basis.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\"\n   */\n  @Input() type: string;\n\n  titleTpl: NgbPanelTitle | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContantChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before toggling an accordion panel\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * Id of the accordion panel that is toggled\n   */\n  panelId: string;\n\n  /**\n   * Whether the panel will be opened (true) or closed (false)\n   */\n  nextState: boolean;\n\n  /**\n   * Function that will prevent panel toggling if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * The NgbAccordion directive is a collection of panels.\n * It can assure that only one panel can be opened at a time.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <h5 class=\"mb-0\">\n            <button class=\"btn btn-link\" (click)=\"!!toggle(panel.id)\" [disabled]=\"panel.disabled\" [class.collapsed]=\"!panel.isOpen\"\n              [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"panel.id\">\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n            </button>\n          </h5>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel identifiers that should be opened\n   */\n  @Input() activeIds: string | string[] = [];\n\n  /**\n   *  Whether the other panels should be closed when a panel is opened\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * Whether the closed panels should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   *  Accordion's types of panels to be applied globally.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\n   */\n  @Input() type: string;\n\n  /**\n   * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Programmatically toggle a panel with a given id.\n   */\n  toggle(panelId: string) {\n    const panel = this.panels.find(p => p.id === panelId);\n\n    if (panel && !panel.disabled) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panelId, nextState: !panel.isOpen, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = !panel.isOpen;\n\n        if (this.closeOtherPanels) {\n          this._closeOthers(panelId);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent} from './accordion';\n\nexport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAlert component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alerts can be used to provide feedback messages.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <ng-content></ng-content>\n    `,\n  styles: [`\n    :host {\n      display: block;\n    }\n  `]\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\n   * form of an Ã) will be displayed.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\", \"danger\",\n   * \"primary\", \"secondary\", \"light\", \"dark\".\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAlertModule}; }\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable\n * specified via ngModel.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    'autocomplete': 'off',\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * A flag indicating if a given checkbox button is disabled.\n   */\n  @Input() disabled = false;\n\n  /**\n   * Value to be propagated as model when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * Value to be propagated as model when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n  }\n}\n","import {Directive, forwardRef, Input, Renderer2, ElementRef, OnDestroy} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'group'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the\n   * enclosed inputs. If not specified, a name is generated automatically.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The name of the input. All inputs of a group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * You can specify model value of a given radio by binding to the value property.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * A flag indicating if a given radio button is disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>) {\n    this._group.register(this);\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbButtonsModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbCarousel component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {Subject, timer} from 'rxjs';\nimport {filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * Represents an individual slide to be used within a carousel.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n   * Will be auto-generated if not provided.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Directive to easily create carousels based on Bootstrap's markup.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(mouseenter)': 'pauseOnHover && pause()',\n    '(mouseleave)': 'pauseOnHover && cycle()',\n    '(keydown.arrowLeft)': 'keyboard && prev()',\n    '(keydown.arrowRight)': 'keyboard && next()'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id); pauseOnHover && pause()\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnChanges, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  private _start$ = new Subject<void>();\n  private _stop$ = new Subject<void>();\n\n  /**\n   * The active slide id.\n   */\n  @Input() activeId: string;\n\n\n  /**\n   * Amount of time in milliseconds before next slide is shown.\n   */\n  @Input() interval: number;\n\n  /**\n   * Whether can wrap from the last to the first slide.\n   */\n  @Input() wrap: boolean;\n\n  /**\n   * A flag for allowing navigation via keyboard\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * A flag to enable slide cycling pause/resume on mouseover.\n   * @since 2.2.0\n   */\n  @Input() pauseOnHover: boolean;\n\n  /**\n   * A flag to show / hide navigation arrows.\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * A flag to show / hide navigation indicators.\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * A carousel slide event fired when the slide transition is completed.\n   * See NgbSlideEvent for payload details\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        this._start$\n            .pipe(\n                map(() => this.interval), filter(interval => interval > 0),\n                switchMap(interval => timer(interval).pipe(takeUntil(this._stop$))))\n            .subscribe(() => this._ngZone.run(() => {\n              this.next();\n              this._cd.detectChanges();\n            }));\n\n        this._start$.next();\n      });\n    }\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._stop$.next(); }\n\n  ngOnChanges(changes) {\n    if ('interval' in changes && !changes['interval'].isFirstChange()) {\n      this._start$.next();\n    }\n  }\n\n  /**\n   * Navigate to a slide with the specified identifier.\n   */\n  select(slideId: string) { this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId)); }\n\n  /**\n   * Navigate to the next slide.\n   */\n  prev() { this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\n\n  /**\n   * Navigate to the next slide.\n   */\n  next() { this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\n\n  /**\n   * Stops the carousel from cycling through items.\n   */\n  pause() { this._stop$.next(); }\n\n  /**\n   * Restarts cycling through the carousel slides from left to right.\n   */\n  cycle() { this._start$.next(); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit({prev: this.activeId, current: selectedSlide.id, direction: direction});\n      this._start$.next();\n      this.activeId = selectedSlide.id;\n    }\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * The payload of the slide event fired when the slide transition is completed\n */\nexport interface NgbSlideEvent {\n  /**\n   * Previous slide id\n   */\n  prev: string;\n\n  /**\n   * New slide ids\n   */\n  current: string;\n\n  /**\n   * Slide event direction\n   */\n  direction: NgbSlideEventDirection;\n}\n\n/**\n * Enum to define the carousel slide event direction\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCarouselModule}; }\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * A flag indicating collapsed (true) or open (false) state.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCollapseModule}; }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * Simple class used for a date representation that datepicker also uses internally\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * Static method. Creates a new date object from the NgbDateStruct, ex. NgbDate.from({year: 2000,\n   * month: 5, day: 1}). If the 'date' is already of NgbDate, the method will return the same object\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if current date is equal to another date\n   */\n  equals(other: NgbDate): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if current date is before another date\n   */\n  before(other: NgbDate): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if current date is after another date\n   */\n  after(other: NgbDate): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nfunction fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\n/**\n * Calendar used by the datepicker.\n * Default implementation uses Gregorian calendar.\n */\n@Injectable()\nexport abstract class NgbCalendar {\n  /**\n   * Returns number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(): number[];\n\n  /**\n   * Returns number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns weekday number for a given day.\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   * Period can be 'y', 'm' or 'd' and defaults to day.\n   * Number defaults to 1.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   * Period can be 'y', 'm' or 'd' and defaults to day.\n   * Number defaults to 1.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns week number for a given week.\n   */\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid for a current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n\n    switch (period) {\n      case 'y':\n        return new NgbDate(date.year + number, 1, 1);\n      case 'm':\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        break;\n      default:\n        return date;\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths();\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate && minDate.year || date.year - 10;\n  const end = maxDate && maxDate.year || date.year + 10;\n\n  return Array.from({length: end - start + 1}, (e, i) => start + i);\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = calendar.getPrev(date, 'm');\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = calendar.getNext(date, 'm', i);\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(\n          dayObject.context || {},\n          {date: newDate, currentMonth: month.number, disabled, focused: false, selected: false});\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n */\n@Injectable()\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec\n   */\n  abstract getMonthShortName(month: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=January ... 12=December\n   */\n  abstract getMonthFullName(month: number): string;\n\n  /**\n   * Returns the value of the 'aria-label' attribute for a specific date\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by date picker\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered\n   * in date picker year select box\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar, NgbPeriod} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _select$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get select$(): Observable<NgbDate> { return this._select$.pipe(filter(date => date !== null)); }\n\n  set disabled(disabled: boolean) {\n    if (this._state.disabled !== disabled) {\n      this._nextState({disabled});\n    }\n  }\n\n  set displayMonths(displayMonths: number) {\n    displayMonths = toInteger(displayMonths);\n    if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n      this._nextState({displayMonths});\n    }\n  }\n\n  set firstDayOfWeek(firstDayOfWeek: number) {\n    firstDayOfWeek = toInteger(firstDayOfWeek);\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n      this._nextState({firstDayOfWeek});\n    }\n  }\n\n  set focusVisible(focusVisible: boolean) {\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n      this._nextState({focusVisible});\n    }\n  }\n\n  set maxDate(date: NgbDate) {\n    const maxDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.maxDate, maxDate)) {\n      this._nextState({maxDate});\n    }\n  }\n\n  set markDisabled(markDisabled: NgbMarkDisabled) {\n    if (this._state.markDisabled !== markDisabled) {\n      this._nextState({markDisabled});\n    }\n  }\n\n  set minDate(date: NgbDate) {\n    const minDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.minDate, minDate)) {\n      this._nextState({minDate});\n    }\n  }\n\n  set navigation(navigation: 'select' | 'arrows' | 'none') {\n    if (this._state.navigation !== navigation) {\n      this._nextState({navigation});\n    }\n  }\n\n  set outsideDays(outsideDays: 'visible' | 'collapsed' | 'hidden') {\n    if (this._state.outsideDays !== outsideDays) {\n      this._nextState({outsideDays});\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusMove(period?: NgbPeriod, number?: number) {\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._select$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch ||\n          'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbCalendar} from './ngb-calendar';\nimport {toString} from '../util/util';\nimport {Key} from '../util/key';\nimport {NgbDate} from './ngb-date';\n\n@Injectable()\nexport class NgbDatepickerKeyMapService {\n  private _minDate: NgbDate;\n  private _maxDate: NgbDate;\n  private _firstViewDate: NgbDate;\n  private _lastViewDate: NgbDate;\n\n  constructor(private _service: NgbDatepickerService, private _calendar: NgbCalendar) {\n    _service.model$.subscribe(model => {\n      this._minDate = model.minDate;\n      this._maxDate = model.maxDate;\n      this._firstViewDate = model.firstDate;\n      this._lastViewDate = model.lastDate;\n    });\n  }\n\n  processKey(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.PageUp:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n          break;\n        case Key.PageDown:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n          break;\n        case Key.End:\n          this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n          break;\n        case Key.Home:\n          this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n          break;\n        case Key.ArrowLeft:\n          this._service.focusMove('d', -1);\n          break;\n        case Key.ArrowUp:\n          this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n          break;\n        case Key.ArrowRight:\n          this._service.focusMove('d', 1);\n          break;\n        case Key.ArrowDown:\n          this._service.focusMove('d', this._calendar.getDaysPerWeek());\n          break;\n        case Key.Enter:\n        case Key.Space:\n          this._service.focusSelect();\n          break;\n        default:\n          return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\n * NgbDateStruct model.\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n */\n@Injectable()\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts user-model date into an NgbDateStruct for internal use in the library\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts internal date value NgbDateStruct to user-model date\n   * The returned type is suposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\n  }\n}\n","import {Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  TemplateRef,\n  forwardRef,\n  OnInit,\n  SimpleChanges,\n  EventEmitter,\n  Output,\n  OnDestroy,\n  ElementRef,\n  NgZone\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbDatepickerKeyMapService} from './datepicker-keymap-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate} from './datepicker-tools';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * The payload of the datepicker navigation event\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * Currently displayed month\n   */\n  current: {year: number, month: number};\n\n  /**\n   * Month we're navigating to\n   */\n  next: {year: number, month: number};\n}\n\n/**\n * A lightweight and highly configurable datepicker directive\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    :host {\n      border: 1px solid #dfdfdf;\n      border-radius: 0.25rem;\n      display: inline-block;\n    }\n    .ngb-dp-month {\n      pointer-events: none;\n    }\n    .ngb-dp-header {\n      border-bottom: 0;\n      border-radius: 0.25rem 0.25rem 0 0;\n      padding-top: 0.25rem;\n    }\n    ngb-datepicker-month-view {\n      pointer-events: auto;\n    }\n    .ngb-dp-month-name {\n      font-size: larger;\n      height: 2rem;\n      line-height: 2rem;\n      text-align: center;\n    }\n    /deep/ .ngb-dp-month + .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week {\n      padding-left: 1rem;\n    }\n    /deep/ .ngb-dp-month + .ngb-dp-month > .ngb-dp-month-name {\n      padding-left: 1rem;\n    }\n    /deep/ .ngb-dp-month:last-child .ngb-dp-week {\n      padding-right: .25rem;\n    }\n    /deep/ .ngb-dp-month:first-child .ngb-dp-week {\n      padding-left: .25rem;\n    }\n    /deep/ .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week:last-child {\n      padding-bottom: .25rem;\n    }\n    .ngb-dp-months {\n      display: -ms-flexbox;\n      display: flex;\n    }\n  `],\n  template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\" (focusin)=\"showFocus(true)\" (focusout)=\"showFocus(false)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  private _subscription: Subscription;\n  private _selectSubscription: Subscription;\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Max date for the navigation. If not provided, 'year' select box will display 10 years after current month\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Min date for the navigation. If not provided, 'year' select box will display 10 years before current month\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDate.\n   */\n  @Output() select = new EventEmitter<NgbDate>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _keyMapService: NgbDatepickerKeyMapService, public _service: NgbDatepickerService,\n      private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n, config: NgbDatepickerConfig,\n      private _cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n     'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    this._selectSubscription = _service.select$.subscribe(date => { this.select.emit(date); });\n\n    this._subscription = _service.model$.subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n      const newSelectedDate = model.selectedDate;\n      const oldSelectedDate = this.model ? this.model.selectedDate : null;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, oldSelectedDate)) {\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month}\n        });\n      }\n      _cd.markForCheck();\n    });\n  }\n\n  /**\n   * Manually focus the focusable day in the datepicker\n   */\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    this._service.open(NgbDate.from(date ? {...date, day: 1} : null));\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n    this._selectSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].forEach(\n          input => this._service[input] = this[input]);\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays']\n        .filter(input => input in changes)\n        .forEach(input => this._service[input] = this[input]);\n\n    if ('startDate' in changes) {\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onKeyDown(event: KeyboardEvent) { this._keyMapService.processKey(event); }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this._service.disabled = isDisabled; }\n\n  showFocus(focusVisible: boolean) { this._service.focusVisible = focusVisible; }\n\n  writeValue(value) { this._service.select(NgbDate.from(this._ngbDateAdapter.fromModel(value))); }\n}\n","import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n@Component({\n  selector: 'ngb-datepicker-month-view',\n  host: {'role': 'grid'},\n  styles: [`\n    :host {\n      display: block;\n    }\n    .ngb-dp-weekday, .ngb-dp-week-number {\n      line-height: 2rem;\n      text-align: center;\n      font-style: italic;\n    }\n    .ngb-dp-weekday {\n      color: #5bc0de;\n      color: var(--info);\n    }\n    .ngb-dp-week {\n      border-radius: 0.25rem;\n      display: -ms-flexbox;\n      display: flex;\n    }\n    .ngb-dp-weekdays {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n      border-radius: 0;\n    }\n    .ngb-dp-day, .ngb-dp-weekday, .ngb-dp-week-number {\n      width: 2rem;\n      height: 2rem;\n    }\n    .ngb-dp-day {\n      cursor: pointer;\n    }\n    .ngb-dp-day.disabled, .ngb-dp-day.hidden {\n      cursor: default;\n    }\n  `],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonthView {\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n  @Input() month: MonthViewModel;\n  @Input() showWeekdays;\n  @Input() showWeekNumbers;\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.select.emit(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n// The -ms- and -webkit- element for the CSS can be removed if we are generating the CSS using SASS.\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    :host {\n      display: -ms-flexbox;\n      display: flex;\n      align-items: center;\n    }\n    .ngb-dp-navigation-chevron {\n      border-style: solid;\n      border-width: 0.2em 0.2em 0 0;\n      display: inline-block;\n      width: 0.75em;\n      height: 0.75em;\n      margin-left: 0.25em;\n      margin-right: 0.15em;\n      transform: rotate(-135deg);\n      -ms-transform: rotate(-135deg);\n    }\n    .right .ngb-dp-navigation-chevron {\n      -ms-transform: rotate(45deg);\n      transform: rotate(45deg);\n      margin-left: 0.15em;\n      margin-right: 0.25em;\n    }\n    .ngb-dp-arrow {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex: 1 1 auto;\n      flex-grow: 1;\n      padding-right: 0;\n      padding-left: 0;\n      margin: 0;\n      width: 2rem;\n      height: 2rem;\n    }\n    .ngb-dp-arrow.right {\n      -ms-flex-pack: end;\n      justify-content: flex-end;\n    }\n    .ngb-dp-arrow-btn {\n      padding: 0 0.25rem;\n      margin: 0 0.5rem;\n      border: none;\n      background-color: transparent;\n      z-index: 1;\n    }\n    .ngb-dp-arrow-btn:focus {\n      outline: auto 1px;\n    }\n    .ngb-dp-month-name {\n      font-size: larger;\n      height: 2rem;\n      line-height: 2rem;\n      text-align: center;\n    }\n    .ngb-dp-navigation-select {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex: 1 1 9rem;\n      flex-grow: 1;\n      flex-basis: 9rem;\n    }\n  `],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n}\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given value to an NgbDateStruct. Implementations should try their best to provide a result, even\n   * partial. They must return null if the value can't be parsed.\n   * @param value the value to parse\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given date to a string. Implementations should return an empty string if the given date is null,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   * @param date the date to format as a string\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      ClientRect {\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const placementPrimary = placement.split('-')[0] || 'top';\n    const placementSecondary = placement.split('-')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      'height': targetElBCR.height || targetElement.offsetHeight,\n      'width': targetElBCR.width || targetElement.offsetWidth,\n      'top': 0,\n      'bottom': targetElBCR.height || targetElement.offsetHeight,\n      'left': 0,\n      'right': targetElBCR.width || targetElement.offsetWidth\n    };\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n            hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height;\n        break;\n      case 'left':\n        targetElPosition.left =\n            hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width;\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        targetElPosition.top = hostElPosition.top;\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        targetElPosition.left = hostElPosition.left;\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n        } else {\n          targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n        }\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  // get the availble placements of the target element in the viewport dependeing on the host element\n  getAvailablePlacements(hostElement: HTMLElement, targetElement: HTMLElement): string[] {\n    let availablePlacements: Array<string> = [];\n    let hostElemClientRect = hostElement.getBoundingClientRect();\n    let targetElemClientRect = targetElement.getBoundingClientRect();\n    let html = document.documentElement;\n    let windowHeight = window.innerHeight || html.clientHeight;\n    let windowWidth = window.innerWidth || html.clientWidth;\n    let hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;\n    let hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2;\n\n    // left: check if target width can be placed between host left and viewport start and also height of target is\n    // inside viewport\n    if (targetElemClientRect.width < hostElemClientRect.left) {\n      // check for left only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'left');\n      }\n      // check for left-top and left-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\n    }\n\n    // top: target height is less than host top\n    if (targetElemClientRect.height < hostElemClientRect.top) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'top');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\n    }\n\n    // right: check if target width can be placed between host right and viewport end and also height of target is\n    // inside viewport\n    if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {\n      // check for right only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'right');\n      }\n      // check for right-top and right-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\n    }\n\n    // bottom: check if there is enough space between host bottom and viewport end for target height\n    if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'bottom');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\n    }\n\n    return availablePlacements;\n  }\n\n  /**\n   * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n   * primaryplacement: left|right\n   * availablePlacementArr: array in which available placemets to be set\n   */\n  private setSecondaryPlacementForLeftRight(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if (targetElemClientRect.height <= hostElemClientRect.bottom) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\n    }\n    if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\n    }\n  }\n\n  /**\n   * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n   * primaryplacement: top|bottom\n   * availablePlacementArr: array in which available placemets to be set\n   */\n  private setSecondaryPlacementForTopBottom(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\n    }\n    if (targetElemClientRect.width <= hostElemClientRect.right) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\n    }\n  }\n}\n\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean): Placement {\n  let placementVals: Array<Placement> = Array.isArray(placement) ? placement : [placement as Placement];\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top',\n     'left-bottom', 'right-top', 'right-bottom',\n    ].forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n  let topVal = 0, leftVal = 0;\n  let appliedPlacement: Placement;\n  // get available placements\n  let availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\n  // iterate over all the passed placements\n  for (let { item, index } of toItemIndexes(placementVals)) {\n    // check if passed placement is present in the available placement or otherwise apply the last placement in the\n    // passed placement list\n    if ((availablePlacements.find(val => val === item) != null) || (placementVals.length === index + 1)) {\n      appliedPlacement = <Placement>item;\n      const pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\n      topVal = pos.top;\n      leftVal = pos.left;\n      break;\n    }\n  }\n  targetElement.style.top = `${topVal}px`;\n  targetElement.style.left = `${leftVal}px`;\n  return appliedPlacement;\n}\n\n// function to get index and item of an array\nfunction toItemIndexes<T>(a: T[]) {\n  return a.map((item, index) => ({item, index}));\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>;\n","import {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {Key} from '../util/key';\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: NodeListOf<HTMLElement> = element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n */\nexport const ngbFocusTrap = (element: HTMLElement, stopFocusTrap$: Observable<any>) => {\n  // last focused element\n  const lastFocusedElement$ =\n      fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n  // 'tab' / 'shift+tab' stream\n  fromEvent<KeyboardEvent>(element, 'keydown')\n      .pipe(takeUntil(stopFocusTrap$), filter(e => e.which === Key.Tab), withLatestFrom(lastFocusedElement$))\n      .subscribe(([tabEvent, focusedElement]) => {\n        const[first, last] = getFocusableBoundaryElements(element);\n\n        if (focusedElement === first && tabEvent.shiftKey) {\n          last.focus();\n          tabEvent.preventDefault();\n        }\n\n        if (focusedElement === last && !tabEvent.shiftKey) {\n          first.focus();\n          tabEvent.preventDefault();\n        }\n      });\n\n  // inside click\n  fromEvent(element, 'click')\n      .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n      .subscribe(lastFocusedElement => lastFocusedElement.focus());\n};\n","import {\n  Directive,\n  Input,\n  ComponentRef,\n  ElementRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentFactoryResolver,\n  NgZone,\n  TemplateRef,\n  forwardRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Inject\n} from '@angular/core';\nimport {AbstractControl, ControlValueAccessor, Validator, NG_VALUE_ACCESSOR, NG_VALIDATORS} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\n\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDatepickerService} from './datepicker-service';\n\nimport {Subject, fromEvent, race, NEVER} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that makes it possible to have datepickers on input fields.\n * Manages integration with the input field itself (data entry) and ngModel (validation etc.).\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _closed$ = new Subject();\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _model: NgbDate;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * By default the popup will close on both date selection and outside click. If the value is 'false' the popup has to\n   * be closed manually via '.close()' or '.toggle()' methods. If the value is set to 'inside' the popup will close on\n   * date selection only. For the 'outside' the popup will close only on the outside click.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside' = true;\n\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Placement of a datepicker popup accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDate.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _service: NgbDatepickerService, private _calendar: NgbCalendar,\n      private _dateAdapter: NgbDateAdapter<any>, @Inject(DOCUMENT) private _document: any) {\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._cRef) {\n        positionElements(\n            this._elRef.nativeElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n      }\n    });\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker with the selected date indicated by the ngModel value.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      ngbFocusTrap(this._cRef.location.nativeElement, this._closed$);\n\n      this._cRef.instance.focus();\n\n      // closing on ESC and outside clicks\n      this._ngZone.runOutsideAngular(() => {\n\n        const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                             .pipe(takeUntil(this._closed$), filter(e => e.which === Key.Escape));\n\n        let outsideClicks$;\n        if (this.autoClose === true || this.autoClose === 'outside') {\n          // we don't know how the popup was opened, so if it was opened with a click,\n          // we have to skip the first one to avoid closing it immediately\n          let isOpening = true;\n          requestAnimationFrame(() => isOpening = false);\n\n          outsideClicks$ =\n              fromEvent<MouseEvent>(this._document, 'click')\n                  .pipe(\n                      takeUntil(this._closed$), filter(event => !isOpening && this._shouldCloseOnOutsideClick(event)));\n        } else {\n          outsideClicks$ = NEVER;\n        }\n\n        race<Event>([escapes$, outsideClicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n      });\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this._closed$.next();\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup (opens when closed and closes when opened).\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n     'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.setStyle(nativeElement, 'padding', '0');\n    this._renderer.addClass(nativeElement, 'show');\n  }\n\n  private _shouldCloseOnOutsideClick(event: MouseEvent) {\n    return ![this._elRef.nativeElement, this._cRef.location.nativeElement].some(el => el.contains(event.target));\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(date => this.navigate.emit(date));\n    datepickerInstance.select.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', this._parserFormatter.format(model));\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    :host {\n      text-align: center;\n      width: 2rem;\n      height: 2rem;\n      line-height: 2rem;\n      border-radius: 0.25rem;\n      background: transparent;\n    }\n    :host.outside {\n      opacity: 0.5;\n    }\n  `],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    :host>select {\n      display: flex;\n      display: -ms-flexbox;\n      -ms-flex: 1 1 auto;\n      width: 100%;\n      padding: 0 0.5rem;\n      font-size: 0.875rem;\n      height: 1.85rem;\n    }\n  `],\n  template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m)\" [value]=\"m\">{{ i18n.getMonthShortName(m) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  const diff = Math.abs(date1.getTime() - date2.getTime());\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  fromModel(date: Date): NgbDateStruct {\n    return (date && date.getFullYear) ? {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()} :\n                                        null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date && date.year && date.month ? new Date(date.year, date.month - 1, date.day, 12) : null;\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerI18n, NgbDatepickerI18nDefault} from './datepicker-i18n';\nimport {NgbCalendar, NgbCalendarGregorian} from './ngb-calendar';\nimport {NgbDateParserFormatter, NgbDateISOParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateAdapter, NgbDateStructAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n    NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbInputDatepicker],\n  imports: [CommonModule, FormsModule],\n  providers: [\n    {provide: NgbCalendar, useClass: NgbCalendarGregorian},\n    {provide: NgbDatepickerI18n, useClass: NgbDatepickerI18nDefault},\n    {provide: NgbDateParserFormatter, useClass: NgbDateISOParserFormatter},\n    {provide: NgbDateAdapter, useClass: NgbDateStructAdapter}\n  ],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDatepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  forwardRef,\n  Inject,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ContentChild,\n  NgZone,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, race, Subject, Subscription} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\nimport {NgbDropdownConfig} from './dropdown-config';\nimport {positionElements, PlacementArray, Placement} from '../util/positioning';\nimport {Key} from '../util/key';\n\n/**\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {'[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement'}\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  constructor(\n      @Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>,\n      private _renderer: Renderer2) {}\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n\n  position(triggerEl, placement) {\n    this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\n  }\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    this.placement = _placement;\n    /**\n     * apply the new placement\n     * in case of top use up-arrow or down-arrow otherwise\n     */\n    if (_placement.search('^top') !== -1) {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    }\n  }\n}\n\n/**\n * Marks an element to which dropdown menu will be anchored. This is a simple version\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\n * events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n}\n\n/**\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\n * alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'toggleOpen()'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n\n  toggleOpen() { this.dropdown.toggle(); }\n}\n\n/**\n * Transforms a node into a dropdown.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements OnInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n\n  @ContentChild(NgbDropdownMenu) private _menu: NgbDropdownMenu;\n\n  @ContentChild(NgbDropdownAnchor) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\n   * When it is true (default) dropdowns are automatically closed on both outside and inside (menu) clicks.\n   * When it is false dropdowns are never automatically closed.\n   * When it is 'outside' dropdowns are automatically closed on outside clicks but not on menu clicks.\n   * When it is 'inside' dropdowns are automatically on menu clicks but not on outside clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   *  Defines whether or not the dropdown-menu is open initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   *  An event fired when the dropdown is opened or closed.\n   *  Event's payload equals whether dropdown is open.\n   */\n  @Output() openChange = new EventEmitter();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone) {\n    this.placement = config.placement;\n    this.autoClose = config.autoClose;\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngOnInit() {\n    if (this._menu) {\n      this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement as Placement);\n    }\n\n    if (this._open) {\n      this._setCloseHandlers();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open or not.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu of a given navbar or tabbed navigation.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._positionMenu();\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    if (this.autoClose) {\n      this._ngZone.runOutsideAngular(() => {\n        const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                             .pipe(takeUntil(this._closed$), filter(event => event.which === Key.Escape));\n\n        const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                            .pipe(takeUntil(this._closed$), filter(event => this._shouldCloseFromClick(event)));\n\n        race<Event>([escapes$, clicks$]).pipe(takeUntil(this._closed$)).subscribe(() => this._ngZone.run(() => {\n          this.close();\n          this._changeDetector.markForCheck();\n        }));\n      });\n    }\n  }\n\n  /**\n   * Closes the dropdown menu of a given navbar or tabbed navigation.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._closed$.next();\n      this.openChange.emit(false);\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu of a given navbar or tabbed navigation.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2 && !this._isEventFromToggle(event)) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromMenu(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromMenu(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _isEventFromToggle($event) { return this._anchor.isEventFrom($event); }\n\n  private _isEventFromMenu($event) { return this._menu ? this._menu.isEventFrom($event) : false; }\n\n  private _positionMenu() {\n    if (this.isOpen() && this._menu) {\n      this._menu.position(this._anchor.anchorEl, this.placement);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\n\nexport {NgbDropdown, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDropdownModule}; }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  template: '',\n  host: {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  Inject,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  AfterViewInit,\n  OnDestroy\n} from '@angular/core';\n\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\nimport {ngbFocusTrap} from '../util/focus-trap';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _document: any;\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(@Inject(DOCUMENT) document, private _elRef: ElementRef<HTMLElement>, private _renderer: Renderer2) {\n    this._document = document;\n    ngbFocusTrap(this._elRef.nativeElement, this.dismissEvent);\n  }\n\n  backdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() {\n    this._elWithFocus = this._document.activeElement;\n    this._renderer.addClass(this._document.body, 'modal-open');\n  }\n\n  ngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus['focus'].apply(elementToFocus, []);\n\n    this._elWithFocus = null;\n    this._renderer.removeClass(body, 'modal-open');\n  }\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = this._viewContainerRef.createEmbeddedView(<TemplateRef<T>>content, context);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document) {}\n\n  /**\n   * Detects if a scrollbar is present and if yes, already compensates for its\n   * removal by adding an equivalent padding on the right of the body.\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter { return !this._isPresent() ? noop : this._adjustBody(this._getWidth()); }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(width: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPadding = body.style.paddingRight;\n    const paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${paddingAmount + width}px`;\n    return () => body.style['padding-right'] = userSetPadding;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    return rect.left + rect.right < window.innerWidth;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nexport class NgbActiveModal {\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to a newly opened modal.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of component used as modal's content.\n   * Undefined when a TemplateRef is used as modal's content.\n   */\n  get componentInstance(): any {\n    if (this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  // only needed to keep TS1.8 compatibility\n  set componentInstance(instance: any) {}\n\n  /**\n   * A promise that is resolved when a modal is closed and rejected when a modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  Injectable,\n  Injector,\n  Inject,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  TemplateRef\n} from '@angular/core';\n\nimport {ContentRef} from '../util/popup';\nimport {isDefined, isString} from '../util/util';\nimport {ScrollBar} from '../util/scrollbar';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n  private _backdropAttributes = ['backdropClass'];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document,\n      private _scrollBar: ScrollBar) {}\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl =\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, context);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, context);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, context: NgbActiveModal): ContentRef {\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    this._applicationRef.attachView(componentRef.hostView);\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalStack} from './modal-stack';\nimport {NgbModalRef} from './modal-ref';\n\n/**\n * Represent options available when opening new modal windows.\n */\nexport interface NgbModalOptions {\n  /**\n   * Sets the aria attribute aria-labelledby to a modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * Whether a backdrop element should be created for a given modal (true by default).\n   * Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Function called when a modal will be dismissed.\n   * If this function returns false, the promise is resolved with false or the promise is rejected, the modal is not\n   * dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * To center the modal vertically (false by default).\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * An element to which to attach newly opened modal windows.\n   */\n  container?: string;\n\n  /**\n   * Injector to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * Whether to close the modal when escape key is pressed (true by default).\n   */\n  keyboard?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg';\n\n  /**\n   * Custom class to append to the modal window\n   */\n  windowClass?: string;\n\n  /**\n   * Custom class to append to the modal backdrop\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack) {}\n\n  /**\n   * Opens a new modal window with the specified content and using supplied options. Content can be provided\n   * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n   * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n   * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    return this._modalStack.open(this._moduleCFR, this._injector, content, options);\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\nimport {NgbModal} from './modal';\n\nexport {NgbModal, NgbModalOptions} from './modal';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModalModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbPagination component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {Component, EventEmitter, Input, Output, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(page-1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">...</a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"!!selectPage(pageNumber)\">\n          {{pageNumber}}\n          <span *ngIf=\"pageNumber === page\" class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(page+1)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(pageCount)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  /**\n   * Whether to disable buttons from user input\n   */\n  @Input() disabled: boolean;\n\n  /**\n   *  Whether to show the \"First\" and \"Last\" page links\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   *  Whether to show the \"Next\" and \"Previous\" page links\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   *  Whether to show ellipsis symbols and first/last page numbers when maxSize > number of pages\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   *  Whether to rotate pages when maxSize > number of pages.\n   *  Current page will be in the middle\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  Number of items in collection.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  Maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  Current page. Page numbers start with 1\n   */\n  @Input() page = 1;\n\n  /**\n   *  Number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed.\n   *  Event's payload equals to the newly selected page.\n   *  Will fire only if collection size is set and all values are valid.\n   *  Page numbers start with 1\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * Pagination display size: small or large\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        if (start > 1) {\n          this.pages.unshift(-1);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        if (end < (this.pageCount - 1)) {\n          this.pages.push(-1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbPagination} from './pagination';\n\nexport {NgbPagination} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\n@NgModule({declarations: [NgbPagination], exports: [NgbPagination], imports: [CommonModule]})\nexport class NgbPaginationModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPaginationModule}; }\n}\n","export class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave']\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nconst noopFn = () => {};\n\nexport function listenToTriggers(renderer: any, nativeElement: any, triggers: string, openFn, closeFn, toggleFn) {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return noopFn;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n    } else {\n      listeners.push(\n          renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n    }\n  });\n\n  return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbPopover directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'top';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, race} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {Key} from '../util/key';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]':\n        '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement + (popoverClass ? \" \" + popoverClass : \"\")',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\">{{title}}</h3><div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styles: [`\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\n      left: 50%;\n      margin-left: -5px;\n    }\n\n    :host.bs-popover-top-left .arrow, :host.bs-popover-bottom-left .arrow {\n      left: 2em;\n    }\n\n    :host.bs-popover-top-right .arrow, :host.bs-popover-bottom-right .arrow {\n      left: auto;\n      right: 2em;\n    }\n\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\n      top: 50%;\n      margin-top: -5px;\n    }\n\n    :host.bs-popover-left-top .arrow, :host.bs-popover-right-top .arrow {\n      top: 0.7em;\n    }\n\n    :host.bs-popover-left-bottom .arrow, :host.bs-popover-right-bottom .arrow {\n      top: auto;\n      bottom: 0.7em;\n    }\n  `]\n})\nexport class NgbPopoverWindow {\n  @Input() placement: Placement = 'top';\n  @Input() title: string;\n  @Input() id: string;\n  @Input() popoverClass: string;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n  }\n\n  /**\n   * Tells whether the event has been triggered from this component's subtree or not.\n   *\n   * @param event the event to check\n   *\n   * @return whether the event has been triggered from this component's subtree or not.\n   */\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\n}\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on Escape key and inside/outside clicks.\n   *\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\n   * - false: disables the autoClose feature (NB: triggers still apply)\n   * - 'inside': closes on inside clicks as well as Escape presses\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\n   * as well as Escape presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n  /**\n   * Content to be displayed as popover. If title and content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n  /**\n   * Title of a popover. If title and content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string;\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given popover is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n  /**\n   * An optional class applied to ngb-popover-window\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   * The context is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position popover along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\n          // pass\n          // use case: click event would reach an element opening the popover first, then reach the autoClose handler\n          // which would close it\n          let justOpened = true;\n          requestAnimationFrame(() => justOpened = false);\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\n\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                              .pipe(\n                                  takeUntil(this.hidden), filter(() => !justOpened),\n                                  filter(event => this._shouldCloseFromClick(event)));\n\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._unregisterListenersFn();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromPopover(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromPopover(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _isEventFromPopover(event: MouseEvent) {\n    const popup = this._windowRef.instance;\n    return popup ? popup.isEventFrom(event) : false;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbPopover, NgbPopoverWindow], exports: [NgbPopover], entryComponents: [NgbPopoverWindow]})\nexport class NgbPopoverModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPopoverModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbProgressbar component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {getValueInRange} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * Directive that can be used to provide feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  /**\n   * Maximal value to be displayed in the progressbar.\n   */\n  @Input() max: number;\n\n  /**\n   * A flag indicating if the stripes of the progress bar should be animated. Takes effect only for browsers\n   * supporting CSS3 animations, and if striped is true.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * A flag indicating if a progress bar should be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * A flag indicating if the current percentage value should be shown.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Type of progress bar, can be one of \"success\", \"info\", \"warning\" or \"danger\".\n   */\n  @Input() type: string;\n\n  /**\n   * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\n   */\n  @Input() value = 0;\n\n  /**\n   * Height of the progress bar. Accepts any valid CSS height values, ex. '2rem'\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbProgressbarModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {toString, getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Context for the custom star display template\n */\nexport interface StarTemplateContext {\n  /**\n   * Star fill percentage. An integer value between 0 and 100\n   */\n  fill: number;\n\n  /**\n   * Index of the star.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'd-inline-flex',\n    'tabindex': '0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngTemplateOutletContext]=\"contexts[index]\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * Maximal rating that can be given using this widget.\n   */\n  @Input() max: number;\n\n  /**\n   * Current rating. Can be a decimal value like 3.75\n   */\n  @Input() rate: number;\n\n  /**\n   * A flag indicating if rating can be updated.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * A flag indicating if rating can be reset to 0 on mouse click\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * A template to override star display.\n   * Alternatively put a <ng-template> as the only child of <ngb-rating> element\n   */\n  @Input() @ContentChild(TemplateRef) starTemplate: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      event.preventDefault();\n\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n        case Key.Home:\n          this.update(0);\n          break;\n        case Key.End:\n          this.update(this.max);\n          break;\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return Number.parseInt((diff * 100).toFixed(2));\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRatingModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTabset component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  Component,\n  Input,\n  ContentChildren,\n  QueryList,\n  Directive,\n  TemplateRef,\n  ContentChild,\n  AfterContentChecked,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab {\n  /**\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n  /**\n   * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\n   */\n  @Input() title: string;\n  /**\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContantChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * Id of the currently active tab\n   */\n  activeId: string;\n\n  /**\n   * Id of the newly selected tab\n   */\n  nextId: string;\n\n  /**\n   * Function that will prevent tab switch if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"!!select(tab.id)\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Whether the closed tabs should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\n   * 'justified'\n   * The default value is 'start'.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the nav (horizontal or vertical).\n   * The default value is 'horizontal'.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs. Can be one of Bootstrap defined types ('tabs' or 'pills').\n   * Since 3.0.0 can also be an arbitrary string (for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated pane.\n   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule}; }\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTimepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Time model to internal\n * NgbTimeStruct model.\n * A default implementation converting from and to NgbTimeStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n *\n * @since 2.2.0\n */\n@Injectable()\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts user-model date into an NgbTimeStruct for internal use in the library\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts internal time value NgbTimeStruct to user-model date\n   * The returned type is supposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Component, forwardRef, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A lightweight & configurable timepicker directive.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  styles: [`\n\n    :host {\n      font-size: 1rem;\n    }\n\n    .ngb-tp {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex-align: center;\n      align-items: center;\n    }\n\n    .ngb-tp-input-container {\n      width: 4em;\n    }\n\n    .ngb-tp-hour, .ngb-tp-minute, .ngb-tp-second, .ngb-tp-meridian {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex-direction: column;\n      flex-direction: column;\n      -ms-flex-align: center;\n      align-items: center;\n      -ms-flex-pack: distribute;\n      justify-content: space-around;\n    }\n\n    .ngb-tp-spacer {\n      width: 1em;\n      text-align: center;\n    }\n\n    .chevron::before {\n      border-style: solid;\n      border-width: 0.29em 0.29em 0 0;\n      content: '';\n      display: inline-block;\n      height: 0.69em;\n      left: 0.05em;\n      position: relative;\n      top: 0.15em;\n      transform: rotate(-45deg);\n      -webkit-transform: rotate(-45deg);\n      -ms-transform: rotate(-45deg);\n      vertical-align: middle;\n      width: 0.71em;\n    }\n\n    .chevron.bottom:before {\n      top: -.3em;\n      -webkit-transform: rotate(135deg);\n      -ms-transform: rotate(135deg);\n      transform: rotate(135deg);\n    }\n\n    input {\n      text-align: center;\n    }\n  `],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeHour(hourStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\"\n            placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeHour(-hourStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeMinute(minuteStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\"\n            placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeMinute(-minuteStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeSecond(secondStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\"\n            placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeSecond(-secondStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [ngClass]=\"setButtonSize()\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * Whether to display the spinners above and below the inputs.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * Whether to display seconds input.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * Number of hours to increase or decrease when using a button.\n   */\n  @Input() hourStep: number;\n\n  /**\n   * Number of minutes to increase or decrease when using a button.\n   */\n  @Input() minuteStep: number;\n\n  /**\n   * Number of seconds to increase or decrease when using a button.\n   */\n  @Input() secondStep: number;\n\n  /**\n   * To make timepicker readonly\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * To set the size of the inputs and button\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>) {\n    this.meridian = config.meridian;\n    this.spinners = config.spinners;\n    this.seconds = config.seconds;\n    this.hourStep = config.hourStep;\n    this.minuteStep = config.minuteStep;\n    this.secondStep = config.secondStep;\n    this.disabled = config.disabled;\n    this.readonlyInputs = config.readonlyInputs;\n    this.size = config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  setFormControlSize() { return {'form-control-sm': this.size === 'small', 'form-control-lg': this.size === 'large'}; }\n\n  setButtonSize() { return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'}; }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\nimport {NgbTimeAdapter, NgbTimeStructAdapter} from './ngb-time-adapter';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\n\n@NgModule({\n  declarations: [NgbTimepicker],\n  exports: [NgbTimepicker],\n  imports: [CommonModule],\n  providers: [{provide: NgbTimeAdapter, useClass: NgbTimeStructAdapter}]\n})\nexport class NgbTimepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTimepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTooltip directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'top';\n  triggers = 'hover';\n  container: string;\n  disableTooltip = false;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {fromEvent, race} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {Key} from '../util/key';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]': '\"tooltip show bs-tooltip-\" + placement.split(\"-\")[0]+\" bs-tooltip-\" + placement',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styles: [`\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: calc(50% - 0.4rem);\n    }\n\n    :host.bs-tooltip-top-left .arrow, :host.bs-tooltip-bottom-left .arrow {\n      left: 1em;\n    }\n\n    :host.bs-tooltip-top-right .arrow, :host.bs-tooltip-bottom-right .arrow {\n      left: auto;\n      right: 0.8rem;\n    }\n\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: calc(50% - 0.4rem);\n    }\n\n    :host.bs-tooltip-left-top .arrow, :host.bs-tooltip-right-top .arrow {\n      top: 0.4rem;\n    }\n\n    :host.bs-tooltip-left-bottom .arrow, :host.bs-tooltip-right-bottom .arrow {\n      top: auto;\n      bottom: 0.4rem;\n    }\n  `]\n})\nexport class NgbTooltipWindow {\n  @Input() placement: Placement = 'top';\n  @Input() id: string;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n  }\n  /**\n   * Tells whether the event has been triggered from this component's subtree or not.\n   *\n   * @param event the event to check\n   *\n   * @return whether the event has been triggered from this component's subtree or not.\n   */\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\n}\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n   * Indicates whether the tooltip should be closed on Escape key and inside/outside clicks.\n   *\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\n   * - false: disables the autoClose feature (NB: triggers still apply)\n   * - 'inside': closes on inside clicks as well as Escape presses\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\n   * as well as Escape presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n  /**\n    * Placement of a tooltip accepts:\n    *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n    *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n    * and array of above values.\n    */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given tooltip is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n  /**\n   * Emits an event when the tooltip is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   * The context is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement;\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position tooltip along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\n          // pass\n          // use case: click event would reach an element opening the tooltip first, then reach the autoClose handler\n          // which would close it\n          let justOpened = true;\n          requestAnimationFrame(() => justOpened = false);\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\n\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                              .pipe(\n                                  takeUntil(this.hidden), filter(() => !justOpened),\n                                  filter(event => this._shouldCloseFromClick(event)));\n\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromTooltip(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromTooltip(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _isEventFromTooltip(event: MouseEvent) {\n    const popup = this._windowRef.instance;\n    return popup ? popup.isEventFrom(event) : false;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n  /**\n   * No need in forRoot anymore with tree-shakeable services\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTooltipModule}; }\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that can be used inside a custom result template in order to highlight the term inside the text of the\n * result\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styles: [`\n    .ngb-highlight {\n      font-weight: bold;\n    }\n  `]\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class of the span elements wrapping the term inside the result\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The result text to display. If the term is found inside this text, it's highlighted\n   */\n  @Input() result: string;\n\n  /**\n   * The searched term\n   */\n  @Input() term: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    const resultStr = toString(this.result);\n    const resultLC = resultStr.toLowerCase();\n    const termLC = toString(this.term).toLowerCase();\n    let currentIdx = 0;\n\n    if (termLC.length > 0) {\n      this.parts = resultLC.split(new RegExp(`(${regExpEscape(termLC)})`)).map((part) => {\n        const originalPart = resultStr.substr(currentIdx, part.length);\n        currentIdx += part.length;\n        return originalPart;\n      });\n    } else {\n      this.parts = [resultStr];\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, TemplateRef, OnInit} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * Context for the typeahead result template in case you want to override the default one\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result data model\n   */\n  result: any;\n\n  /**\n   * Search term from the input used to get current result\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  host: {'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead widnow. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTypeahead component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable, BehaviorSubject, Subscription, fromEvent} from 'rxjs';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\nimport {PopupService} from '../util/popup';\nimport {toString, isDefined} from '../util/util';\nimport {Key} from '../util/key';\nimport {Live} from '../util/accessibility/live';\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * Payload of the selectItem event.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * An item about to be selected\n   */\n  item: any;\n\n  /**\n   * Function that will prevent item selection if called\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(document:click)': 'onDocumentClick($event)',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * Value for the configurable autocomplete attribute.\n   * Defaults to 'off' to disable the native browser autocomplete, but this standard value does not seem\n   * to be always correctly taken into account.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * A flag indicating if the first match should automatically be focused as you type.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n  @Input() inputFormatter: (value: any) => string;\n\n  /**\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * A function to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() resultFormatter: (value: any) => string;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /** Placement of a typeahead accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n  */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = value;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const processedResults$ = results$.pipe(tap(() => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    }));\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => processedResults$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  onDocumentClick(event) {\n    if (event.target !== this._elementRef.nativeElement) {\n      this.dismissPopup();\n    }\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._closePopup();\n      this._writeInputValue(this._inputValueBackup);\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          const result = this._windowRef.instance.getActive();\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this._selectResult(result);\n          }\n          this._closePopup();\n          break;\n        case Key.Escape:\n          event.preventDefault();\n          this._resubscribeTypeahead.next(null);\n          this.dismissPopup();\n          break;\n      }\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n    }\n  }\n\n  private _closePopup() {\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this.writeValue(this._windowRef.instance.getActive());\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTypeaheadModule}; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbAccordionModule, NgbPanelChangeEvent} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule, NgbModal, NgbModalOptions, NgbModalRef, ModalDismissReasons} from './modal/modal.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule, NgbTabChangeEvent} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule, NgbTypeaheadSelectItemEvent} from './typeahead/typeahead.module';\n\nexport {\n  NgbAccordionModule,\n  NgbPanelChangeEvent,\n  NgbAccordionConfig,\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent\n} from './accordion/accordion.module';\nexport {NgbAlertModule, NgbAlertConfig, NgbAlert} from './alert/alert.module';\nexport {NgbButtonsModule, NgbCheckBox, NgbRadioGroup} from './buttons/buttons.module';\nexport {NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide} from './carousel/carousel.module';\nexport {NgbCollapseModule, NgbCollapse} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbPeriod,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarPersian,\n  NgbDatepickerModule,\n  NgbDatepickerI18n,\n  NgbDatepickerConfig,\n  NgbDateStruct,\n  NgbDate,\n  NgbDateParserFormatter,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDatepicker,\n  NgbInputDatepicker\n} from './datepicker/datepicker.module';\nexport {NgbDropdownModule, NgbDropdownConfig, NgbDropdown} from './dropdown/dropdown.module';\nexport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalOptions,\n  NgbActiveModal,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nexport {NgbPaginationModule, NgbPaginationConfig, NgbPagination} from './pagination/pagination.module';\nexport {NgbPopoverModule, NgbPopoverConfig, NgbPopover} from './popover/popover.module';\nexport {NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar} from './progressbar/progressbar.module';\nexport {NgbRatingModule, NgbRatingConfig, NgbRating} from './rating/rating.module';\nexport {\n  NgbTabsetModule,\n  NgbTabChangeEvent,\n  NgbTabsetConfig,\n  NgbTabset,\n  NgbTab,\n  NgbTabContent,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimepickerModule,\n  NgbTimepickerConfig,\n  NgbTimeStruct,\n  NgbTimepicker,\n  NgbTimeAdapter\n} from './timepicker/timepicker.module';\nexport {NgbTooltipModule, NgbTooltipConfig, NgbTooltip} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeaheadModule,\n  NgbTypeaheadConfig,\n  NgbTypeaheadSelectItemEvent,\n  NgbTypeahead\n} from './typeahead/typeahead.module';\n\nexport {Placement} from './util/positioning';\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n  NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n/**\n * NgbRootModule is no longer necessary, you can simply import NgbModule\n * Will be removed in 4.0.0.\n *\n * @deprecated 3.0.0\n */\n@NgModule({imports: [NGB_MODULES], exports: NGB_MODULES})\nexport class NgbRootModule {\n}\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRootModule}; }\n}\n"]}