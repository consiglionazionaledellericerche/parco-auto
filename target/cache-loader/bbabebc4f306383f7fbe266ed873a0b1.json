{"remainingRequest":"/Users/valeriodiego/Documents/auto/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/valeriodiego/Documents/auto/node_modules/ts-loader/index.js??ref--9-3!/Users/valeriodiego/Documents/auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/auto/src/main/webapp/app/core/language/language.helper.ts","dependencies":[{"path":"/Users/valeriodiego/Documents/auto/src/main/webapp/app/core/language/language.helper.ts","mtime":1538729462000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/cache-loader/dist/cjs.js","mtime":1538729485000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/thread-loader/dist/cjs.js","mtime":1538729484000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar platform_browser_1 = require(\"@angular/platform-browser\");\nvar router_1 = require(\"@angular/router\");\nvar core_2 = require(\"@ngx-translate/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar language_constants_1 = require(\"app/core/language/language.constants\");\nvar JhiLanguageHelper = /** @class */ (function () {\n    function JhiLanguageHelper(translateService, \n    // tslint:disable-next-line: no-unused-variable\n    rootRenderer, titleService, router) {\n        this.translateService = translateService;\n        this.rootRenderer = rootRenderer;\n        this.titleService = titleService;\n        this.router = router;\n        this.renderer = null;\n        this._language = new rxjs_1.BehaviorSubject(this.translateService.currentLang);\n        this.renderer = rootRenderer.createRenderer(document.querySelector('html'), null);\n        this.init();\n    }\n    JhiLanguageHelper.prototype.getAll = function () {\n        return Promise.resolve(language_constants_1.LANGUAGES);\n    };\n    Object.defineProperty(JhiLanguageHelper.prototype, \"language\", {\n        get: function () {\n            return this._language.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Update the window title using params in the following\n     * order:\n     * 1. titleKey parameter\n     * 2. $state.$current.data.pageTitle (current state page title)\n     * 3. 'global.title'\n     */\n    JhiLanguageHelper.prototype.updateTitle = function (titleKey) {\n        var _this = this;\n        if (!titleKey) {\n            titleKey = this.getPageTitle(this.router.routerState.snapshot.root);\n        }\n        this.translateService.get(titleKey).subscribe(function (title) {\n            _this.titleService.setTitle(title);\n        });\n    };\n    JhiLanguageHelper.prototype.init = function () {\n        var _this = this;\n        this.translateService.onLangChange.subscribe(function (event) {\n            _this._language.next(_this.translateService.currentLang);\n            _this.renderer.setAttribute(document.querySelector('html'), 'lang', _this.translateService.currentLang);\n            _this.updateTitle();\n        });\n    };\n    JhiLanguageHelper.prototype.getPageTitle = function (routeSnapshot) {\n        var title = routeSnapshot.data && routeSnapshot.data['pageTitle'] ? routeSnapshot.data['pageTitle'] : 'autoApp';\n        if (routeSnapshot.firstChild) {\n            title = this.getPageTitle(routeSnapshot.firstChild) || title;\n        }\n        return title;\n    };\n    JhiLanguageHelper = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.TranslateService !== \"undefined\" && core_2.TranslateService) === \"function\" && _a || Object, typeof (_b = typeof core_1.RendererFactory2 !== \"undefined\" && core_1.RendererFactory2) === \"function\" && _b || Object, typeof (_c = typeof platform_browser_1.Title !== \"undefined\" && platform_browser_1.Title) === \"function\" && _c || Object, typeof (_d = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" && _d || Object])\n    ], JhiLanguageHelper);\n    return JhiLanguageHelper;\n    var _a, _b, _c, _d;\n}());\nexports.JhiLanguageHelper = JhiLanguageHelper;\n",{"version":3,"file":"/Users/valeriodiego/Documents/auto/src/main/webapp/app/core/language/language.helper.ts","sourceRoot":"","sources":["/Users/valeriodiego/Documents/auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/auto/src/main/webapp/app/core/language/language.helper.ts"],"names":[],"mappings":";;;AAAA,sCAAwE;AACxE,8DAAkD;AAClD,0CAAiE;AACjE,4CAAwE;AACxE,6BAAmD;AAEnD,2EAAiE;AAGjE;IAII,2BACY,gBAAkC;IAC1C,+CAA+C;IACvC,YAA8B,EAC9B,YAAmB,EACnB,MAAc;QAJd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAElC,iBAAY,GAAZ,YAAY,CAAkB;QAC9B,iBAAY,GAAZ,YAAY,CAAO;QACnB,WAAM,GAAN,MAAM,CAAQ;QAR1B,aAAQ,GAAc,IAAI,CAAC;QAUvB,IAAI,CAAC,SAAS,GAAG,IAAI,sBAAe,CAAS,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;QAClF,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,kCAAM,GAAN;QACI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,8BAAS,CAAC,CAAC;IACtC,CAAC;IAED,sBAAI,uCAAQ;aAAZ;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACzC,CAAC;;;OAAA;IAED;;;;;;OAMG;IACH,uCAAW,GAAX,UAAY,QAAiB;QAA7B,iBAQC;QAPG,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACZ,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxE,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK;YAC/C,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,gCAAI,GAAZ;QAAA,iBAMC;QALG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAsB;YAChE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACvD,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACtG,KAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,wCAAY,GAApB,UAAqB,aAAqC;QACtD,IAAI,KAAK,GAAW,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACxH,EAAE,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;YAC3B,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC;QACjE,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAvDQ,iBAAiB;QAD7B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAMD,uBAAgB,oBAAhB,uBAAgB,sDAEpB,uBAAgB,oBAAhB,uBAAgB,sDAChB,wBAAK,oBAAL,wBAAK,sDACX,eAAM,oBAAN,eAAM;OATjB,iBAAiB,CAwD7B;IAAD,wBAAC;;CAAA,AAxDD,IAwDC;AAxDY,8CAAiB","sourcesContent":["import { Injectable, RendererFactory2, Renderer2 } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { LANGUAGES } from 'app/core/language/language.constants';\n\n@Injectable({ providedIn: 'root' })\nexport class JhiLanguageHelper {\n    renderer: Renderer2 = null;\n    private _language: BehaviorSubject<string>;\n\n    constructor(\n        private translateService: TranslateService,\n        // tslint:disable-next-line: no-unused-variable\n        private rootRenderer: RendererFactory2,\n        private titleService: Title,\n        private router: Router\n    ) {\n        this._language = new BehaviorSubject<string>(this.translateService.currentLang);\n        this.renderer = rootRenderer.createRenderer(document.querySelector('html'), null);\n        this.init();\n    }\n\n    getAll(): Promise<any> {\n        return Promise.resolve(LANGUAGES);\n    }\n\n    get language(): Observable<string> {\n        return this._language.asObservable();\n    }\n\n    /**\n     * Update the window title using params in the following\n     * order:\n     * 1. titleKey parameter\n     * 2. $state.$current.data.pageTitle (current state page title)\n     * 3. 'global.title'\n     */\n    updateTitle(titleKey?: string) {\n        if (!titleKey) {\n            titleKey = this.getPageTitle(this.router.routerState.snapshot.root);\n        }\n\n        this.translateService.get(titleKey).subscribe(title => {\n            this.titleService.setTitle(title);\n        });\n    }\n\n    private init() {\n        this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n            this._language.next(this.translateService.currentLang);\n            this.renderer.setAttribute(document.querySelector('html'), 'lang', this.translateService.currentLang);\n            this.updateTitle();\n        });\n    }\n\n    private getPageTitle(routeSnapshot: ActivatedRouteSnapshot) {\n        let title: string = routeSnapshot.data && routeSnapshot.data['pageTitle'] ? routeSnapshot.data['pageTitle'] : 'autoApp';\n        if (routeSnapshot.firstChild) {\n            title = this.getPageTitle(routeSnapshot.firstChild) || title;\n        }\n        return title;\n    }\n}\n"]}]}