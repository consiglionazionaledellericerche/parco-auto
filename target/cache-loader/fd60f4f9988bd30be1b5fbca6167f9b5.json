{"remainingRequest":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/valeriodiego/Documents/git/parco-auto/node_modules/ts-loader/index.js??ref--9-3!/Users/valeriodiego/Documents/git/parco-auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/git/parco-auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/git/parco-auto/src/main/webapp/app/admin/metrics/metrics.component.ts","dependencies":[{"path":"/Users/valeriodiego/Documents/git/parco-auto/src/main/webapp/app/admin/metrics/metrics.component.ts","mtime":1542190288461},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/cache-loader/dist/cjs.js","mtime":1542190337092},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/thread-loader/dist/cjs.js","mtime":1542190335928},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\nvar metrics_modal_component_1 = require(\"./metrics-modal.component\");\nvar metrics_service_1 = require(\"./metrics.service\");\nvar JhiMetricsMonitoringComponent = /** @class */ (function () {\n    function JhiMetricsMonitoringComponent(modalService, metricsService) {\n        this.modalService = modalService;\n        this.metricsService = metricsService;\n        this.metrics = {};\n        this.cachesStats = {};\n        this.servicesStats = {};\n        this.updatingMetrics = true;\n        this.JCACHE_KEY = 'jcache.statistics';\n    }\n    JhiMetricsMonitoringComponent.prototype.ngOnInit = function () {\n        this.refresh();\n    };\n    JhiMetricsMonitoringComponent.prototype.refresh = function () {\n        var _this = this;\n        this.updatingMetrics = true;\n        this.metricsService.getMetrics().subscribe(function (metrics) {\n            _this.metrics = metrics;\n            _this.updatingMetrics = false;\n            _this.servicesStats = {};\n            _this.cachesStats = {};\n            Object.keys(metrics.timers).forEach(function (key) {\n                var value = metrics.timers[key];\n                if (key.includes('web.rest') || key.includes('service')) {\n                    _this.servicesStats[key] = value;\n                }\n            });\n            Object.keys(metrics.gauges).forEach(function (key) {\n                if (key.includes('jcache.statistics')) {\n                    var value = metrics.gauges[key].value;\n                    // remove gets or puts\n                    var index = key.lastIndexOf('.');\n                    var newKey = key.substr(0, index);\n                    // Keep the name of the domain\n                    _this.cachesStats[newKey] = {\n                        name: _this.JCACHE_KEY.length,\n                        value: value\n                    };\n                }\n            });\n        });\n    };\n    JhiMetricsMonitoringComponent.prototype.refreshThreadDumpData = function () {\n        var _this = this;\n        this.metricsService.threadDump().subscribe(function (data) {\n            var modalRef = _this.modalService.open(metrics_modal_component_1.JhiMetricsMonitoringModalComponent, { size: 'lg' });\n            modalRef.componentInstance.threadDump = data.threads;\n            modalRef.result.then(function (result) {\n                // Left blank intentionally, nothing to do here\n            }, function (reason) {\n                // Left blank intentionally, nothing to do here\n            });\n        });\n    };\n    JhiMetricsMonitoringComponent.prototype.filterNaN = function (input) {\n        if (isNaN(input)) {\n            return 0;\n        }\n        return input;\n    };\n    JhiMetricsMonitoringComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-metrics',\n            templateUrl: './metrics.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" && _a || Object, typeof (_b = typeof metrics_service_1.JhiMetricsService !== \"undefined\" && metrics_service_1.JhiMetricsService) === \"function\" && _b || Object])\n    ], JhiMetricsMonitoringComponent);\n    return JhiMetricsMonitoringComponent;\n    var _a, _b;\n}());\nexports.JhiMetricsMonitoringComponent = JhiMetricsMonitoringComponent;\n",{"version":3,"file":"/Users/valeriodiego/Documents/git/parco-auto/src/main/webapp/app/admin/metrics/metrics.component.ts","sourceRoot":"","sources":["/Users/valeriodiego/Documents/git/parco-auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/git/parco-auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/git/parco-auto/src/main/webapp/app/admin/metrics/metrics.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { JhiMetricsMonitoringModalComponent } from './metrics-modal.component';\nimport { JhiMetricsService } from './metrics.service';\n\n@Component({\n    selector: 'jhi-metrics',\n    templateUrl: './metrics.component.html'\n})\nexport class JhiMetricsMonitoringComponent implements OnInit {\n    metrics: any = {};\n    cachesStats: any = {};\n    servicesStats: any = {};\n    updatingMetrics = true;\n    JCACHE_KEY: string;\n\n    constructor(private modalService: NgbModal, private metricsService: JhiMetricsService) {\n        this.JCACHE_KEY = 'jcache.statistics';\n    }\n\n    ngOnInit() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.updatingMetrics = true;\n        this.metricsService.getMetrics().subscribe(metrics => {\n            this.metrics = metrics;\n            this.updatingMetrics = false;\n            this.servicesStats = {};\n            this.cachesStats = {};\n            Object.keys(metrics.timers).forEach(key => {\n                const value = metrics.timers[key];\n                if (key.includes('web.rest') || key.includes('service')) {\n                    this.servicesStats[key] = value;\n                }\n            });\n            Object.keys(metrics.gauges).forEach(key => {\n                if (key.includes('jcache.statistics')) {\n                    const value = metrics.gauges[key].value;\n                    // remove gets or puts\n                    const index = key.lastIndexOf('.');\n                    const newKey = key.substr(0, index);\n\n                    // Keep the name of the domain\n                    this.cachesStats[newKey] = {\n                        name: this.JCACHE_KEY.length,\n                        value\n                    };\n                }\n            });\n        });\n    }\n\n    refreshThreadDumpData() {\n        this.metricsService.threadDump().subscribe(data => {\n            const modalRef = this.modalService.open(JhiMetricsMonitoringModalComponent, { size: 'lg' });\n            modalRef.componentInstance.threadDump = data.threads;\n            modalRef.result.then(\n                result => {\n                    // Left blank intentionally, nothing to do here\n                },\n                reason => {\n                    // Left blank intentionally, nothing to do here\n                }\n            );\n        });\n    }\n\n    filterNaN(input) {\n        if (isNaN(input)) {\n            return 0;\n        }\n        return input;\n    }\n}\n"]}]}