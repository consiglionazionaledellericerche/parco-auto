{"remainingRequest":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/valeriodiego/Documents/git/parco-auto/node_modules/ts-loader/index.js??ref--9-3!/Users/valeriodiego/Documents/git/parco-auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/git/parco-auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/git/parco-auto/src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts","dependencies":[{"path":"/Users/valeriodiego/Documents/git/parco-auto/src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts","mtime":1542190288237},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/cache-loader/dist/cjs.js","mtime":1542190337092},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/thread-loader/dist/cjs.js","mtime":1542190335928},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/valeriodiego/Documents/git/parco-auto/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar shared_1 = require(\"app/shared\");\nvar password_reset_init_service_1 = require(\"./password-reset-init.service\");\nvar PasswordResetInitComponent = /** @class */ (function () {\n    function PasswordResetInitComponent(passwordResetInitService, elementRef, renderer) {\n        this.passwordResetInitService = passwordResetInitService;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    PasswordResetInitComponent.prototype.ngOnInit = function () {\n        this.resetAccount = {};\n    };\n    PasswordResetInitComponent.prototype.ngAfterViewInit = function () {\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#email'), 'focus', []);\n    };\n    PasswordResetInitComponent.prototype.requestReset = function () {\n        var _this = this;\n        this.error = null;\n        this.errorEmailNotExists = null;\n        this.passwordResetInitService.save(this.resetAccount.email).subscribe(function () {\n            _this.success = 'OK';\n        }, function (response) {\n            _this.success = null;\n            if (response.status === 400 && response.error.type === shared_1.EMAIL_NOT_FOUND_TYPE) {\n                _this.errorEmailNotExists = 'ERROR';\n            }\n            else {\n                _this.error = 'ERROR';\n            }\n        });\n    };\n    PasswordResetInitComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-password-reset-init',\n            templateUrl: './password-reset-init.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof password_reset_init_service_1.PasswordResetInitService !== \"undefined\" && password_reset_init_service_1.PasswordResetInitService) === \"function\" && _a || Object, typeof (_b = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" && _b || Object, typeof (_c = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" && _c || Object])\n    ], PasswordResetInitComponent);\n    return PasswordResetInitComponent;\n    var _a, _b, _c;\n}());\nexports.PasswordResetInitComponent = PasswordResetInitComponent;\n",{"version":3,"file":"/Users/valeriodiego/Documents/git/parco-auto/src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts","sourceRoot":"","sources":["/Users/valeriodiego/Documents/git/parco-auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/git/parco-auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/git/parco-auto/src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts"],"names":[],"mappings":";;;AAAA,sCAAuF;AACvF,qCAAkD;AAClD,6EAAyE;AAMzE;IAMI,oCAAoB,wBAAkD,EAAU,UAAsB,EAAU,QAAkB;QAA9G,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAEtI,6CAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,oDAAe,GAAf;QACI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAC1G,CAAC;IAED,iDAAY,GAAZ;QAAA,iBAiBC;QAhBG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CACjE;YACI,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,UAAA,QAAQ;YACJ,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,6BAAoB,CAAC,CAAC,CAAC;gBAC1E,KAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;YACzB,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IAjCQ,0BAA0B;QAJtC,gBAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;YACnC,WAAW,EAAE,sCAAsC;SACtD,CAAC;qEAOgD,sDAAwB,oBAAxB,sDAAwB,sDAAsB,iBAAU,oBAAV,iBAAU,sDAAoB,eAAQ,oBAAR,eAAQ;OANzH,0BAA0B,CAkCtC;IAAD,iCAAC;;CAAA,AAlCD,IAkCC;AAlCY,gEAA0B","sourcesContent":["import { Component, OnInit, AfterViewInit, Renderer, ElementRef } from '@angular/core';\nimport { EMAIL_NOT_FOUND_TYPE } from 'app/shared';\nimport { PasswordResetInitService } from './password-reset-init.service';\n\n@Component({\n    selector: 'jhi-password-reset-init',\n    templateUrl: './password-reset-init.component.html'\n})\nexport class PasswordResetInitComponent implements OnInit, AfterViewInit {\n    error: string;\n    errorEmailNotExists: string;\n    resetAccount: any;\n    success: string;\n\n    constructor(private passwordResetInitService: PasswordResetInitService, private elementRef: ElementRef, private renderer: Renderer) {}\n\n    ngOnInit() {\n        this.resetAccount = {};\n    }\n\n    ngAfterViewInit() {\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#email'), 'focus', []);\n    }\n\n    requestReset() {\n        this.error = null;\n        this.errorEmailNotExists = null;\n\n        this.passwordResetInitService.save(this.resetAccount.email).subscribe(\n            () => {\n                this.success = 'OK';\n            },\n            response => {\n                this.success = null;\n                if (response.status === 400 && response.error.type === EMAIL_NOT_FOUND_TYPE) {\n                    this.errorEmailNotExists = 'ERROR';\n                } else {\n                    this.error = 'ERROR';\n                }\n            }\n        );\n    }\n}\n"]}]}