{"remainingRequest":"/Users/valeriodiego/Documents/auto/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/valeriodiego/Documents/auto/node_modules/ts-loader/index.js??ref--9-3!/Users/valeriodiego/Documents/auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/auto/src/main/webapp/app/shared/alert/alert-error.component.ts","dependencies":[{"path":"/Users/valeriodiego/Documents/auto/src/main/webapp/app/shared/alert/alert-error.component.ts","mtime":1538729462000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/cache-loader/dist/cjs.js","mtime":1538729485000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/thread-loader/dist/cjs.js","mtime":1538729484000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar core_2 = require(\"@ngx-translate/core\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar JhiAlertErrorComponent = /** @class */ (function () {\n    /* tslint:disable */\n    function JhiAlertErrorComponent(alertService, eventManager, translateService) {\n        var _this = this;\n        this.alertService = alertService;\n        this.eventManager = eventManager;\n        this.translateService = translateService;\n        /* tslint:enable */\n        this.alerts = [];\n        this.cleanHttpErrorListener = eventManager.subscribe('autoApp.httpError', function (response) {\n            var i;\n            var httpErrorResponse = response.content;\n            switch (httpErrorResponse.status) {\n                // connection refused, server not reachable\n                case 0:\n                    _this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n                    break;\n                case 400:\n                    var arr = httpErrorResponse.headers.keys();\n                    var errorHeader_1 = null;\n                    var entityKey_1 = null;\n                    arr.forEach(function (entry) {\n                        if (entry.toLowerCase().endsWith('app-error')) {\n                            errorHeader_1 = httpErrorResponse.headers.get(entry);\n                        }\n                        else if (entry.toLowerCase().endsWith('app-params')) {\n                            entityKey_1 = httpErrorResponse.headers.get(entry);\n                        }\n                    });\n                    if (errorHeader_1) {\n                        var entityName = translateService.instant('global.menu.entities.' + entityKey_1);\n                        _this.addErrorAlert(errorHeader_1, errorHeader_1, { entityName: entityName });\n                    }\n                    else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n                        var fieldErrors = httpErrorResponse.error.fieldErrors;\n                        for (i = 0; i < fieldErrors.length; i++) {\n                            var fieldError = fieldErrors[i];\n                            if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                                fieldError.message = 'Size';\n                            }\n                            // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                            var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                            var fieldName = translateService.instant('autoApp.' + fieldError.objectName + '.' + convertedField);\n                            _this.addErrorAlert('Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName: fieldName });\n                        }\n                    }\n                    else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n                        _this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);\n                    }\n                    else {\n                        _this.addErrorAlert(httpErrorResponse.error);\n                    }\n                    break;\n                case 404:\n                    _this.addErrorAlert('Not found', 'error.url.not.found');\n                    break;\n                default:\n                    if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n                        _this.addErrorAlert(httpErrorResponse.error.message);\n                    }\n                    else {\n                        _this.addErrorAlert(httpErrorResponse.error);\n                    }\n            }\n        });\n    }\n    JhiAlertErrorComponent.prototype.setClasses = function (alert) {\n        return _a = {\n                toast: !!alert.toast\n            },\n            _a[alert.position] = true,\n            _a;\n        var _a;\n    };\n    JhiAlertErrorComponent.prototype.ngOnDestroy = function () {\n        if (this.cleanHttpErrorListener !== undefined && this.cleanHttpErrorListener !== null) {\n            this.eventManager.destroy(this.cleanHttpErrorListener);\n            this.alerts = [];\n        }\n    };\n    JhiAlertErrorComponent.prototype.addErrorAlert = function (message, key, data) {\n        key = key && key !== null ? key : message;\n        this.alerts.push(this.alertService.addAlert({\n            type: 'danger',\n            msg: key,\n            params: data,\n            timeout: 5000,\n            toast: this.alertService.isToast(),\n            scoped: true\n        }, this.alerts));\n    };\n    JhiAlertErrorComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-alert-error',\n            template: \"\\n        <div class=\\\"alerts\\\" role=\\\"alert\\\">\\n            <div *ngFor=\\\"let alert of alerts\\\" [ngClass]=\\\"setClasses(alert)\\\">\\n                <ngb-alert *ngIf=\\\"alert && alert.type && alert.msg\\\" [type]=\\\"alert.type\\\" (close)=\\\"alert.close(alerts)\\\">\\n                    <pre [innerHTML]=\\\"alert.msg\\\"></pre>\\n                </ngb-alert>\\n            </div>\\n        </div>\"\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _a || Object, typeof (_b = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" && _b || Object, typeof (_c = typeof core_2.TranslateService !== \"undefined\" && core_2.TranslateService) === \"function\" && _c || Object])\n    ], JhiAlertErrorComponent);\n    return JhiAlertErrorComponent;\n    var _a, _b, _c;\n}());\nexports.JhiAlertErrorComponent = JhiAlertErrorComponent;\n",{"version":3,"file":"/Users/valeriodiego/Documents/auto/src/main/webapp/app/shared/alert/alert-error.component.ts","sourceRoot":"","sources":["/Users/valeriodiego/Documents/auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/auto/src/main/webapp/app/shared/alert/alert-error.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { JhiEventManager, JhiAlertService } from 'ng-jhipster';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'jhi-alert-error',\n    template: `\n        <div class=\"alerts\" role=\"alert\">\n            <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\n                <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"alert.close(alerts)\">\n                    <pre [innerHTML]=\"alert.msg\"></pre>\n                </ngb-alert>\n            </div>\n        </div>`\n})\nexport class JhiAlertErrorComponent implements OnDestroy {\n    alerts: any[];\n    cleanHttpErrorListener: Subscription;\n    /* tslint:disable */\n    constructor(private alertService: JhiAlertService, private eventManager: JhiEventManager, private translateService: TranslateService) {\n        /* tslint:enable */\n        this.alerts = [];\n\n        this.cleanHttpErrorListener = eventManager.subscribe('autoApp.httpError', response => {\n            let i;\n            const httpErrorResponse = response.content;\n            switch (httpErrorResponse.status) {\n                // connection refused, server not reachable\n                case 0:\n                    this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n                    break;\n\n                case 400:\n                    const arr = httpErrorResponse.headers.keys();\n                    let errorHeader = null;\n                    let entityKey = null;\n                    arr.forEach(entry => {\n                        if (entry.toLowerCase().endsWith('app-error')) {\n                            errorHeader = httpErrorResponse.headers.get(entry);\n                        } else if (entry.toLowerCase().endsWith('app-params')) {\n                            entityKey = httpErrorResponse.headers.get(entry);\n                        }\n                    });\n                    if (errorHeader) {\n                        const entityName = translateService.instant('global.menu.entities.' + entityKey);\n                        this.addErrorAlert(errorHeader, errorHeader, { entityName });\n                    } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n                        const fieldErrors = httpErrorResponse.error.fieldErrors;\n                        for (i = 0; i < fieldErrors.length; i++) {\n                            const fieldError = fieldErrors[i];\n                            if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                                fieldError.message = 'Size';\n                            }\n                            // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                            const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                            const fieldName = translateService.instant('autoApp.' + fieldError.objectName + '.' + convertedField);\n                            this.addErrorAlert('Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName });\n                        }\n                    } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n                        this.addErrorAlert(\n                            httpErrorResponse.error.message,\n                            httpErrorResponse.error.message,\n                            httpErrorResponse.error.params\n                        );\n                    } else {\n                        this.addErrorAlert(httpErrorResponse.error);\n                    }\n                    break;\n\n                case 404:\n                    this.addErrorAlert('Not found', 'error.url.not.found');\n                    break;\n\n                default:\n                    if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n                        this.addErrorAlert(httpErrorResponse.error.message);\n                    } else {\n                        this.addErrorAlert(httpErrorResponse.error);\n                    }\n            }\n        });\n    }\n\n    setClasses(alert) {\n        return {\n            toast: !!alert.toast,\n            [alert.position]: true\n        };\n    }\n\n    ngOnDestroy() {\n        if (this.cleanHttpErrorListener !== undefined && this.cleanHttpErrorListener !== null) {\n            this.eventManager.destroy(this.cleanHttpErrorListener);\n            this.alerts = [];\n        }\n    }\n\n    addErrorAlert(message, key?, data?) {\n        key = key && key !== null ? key : message;\n        this.alerts.push(\n            this.alertService.addAlert(\n                {\n                    type: 'danger',\n                    msg: key,\n                    params: data,\n                    timeout: 5000,\n                    toast: this.alertService.isToast(),\n                    scoped: true\n                },\n                this.alerts\n            )\n        );\n    }\n}\n"]}]}