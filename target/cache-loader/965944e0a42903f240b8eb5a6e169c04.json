{"remainingRequest":"/Users/valeriodiego/Documents/auto/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/valeriodiego/Documents/auto/node_modules/ts-loader/index.js??ref--9-3!/Users/valeriodiego/Documents/auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/auto/src/main/webapp/app/core/login/login.service.ts","dependencies":[{"path":"/Users/valeriodiego/Documents/auto/src/main/webapp/app/core/login/login.service.ts","mtime":1538729462000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/cache-loader/dist/cjs.js","mtime":1538729485000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/thread-loader/dist/cjs.js","mtime":1538729484000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/valeriodiego/Documents/auto/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar principal_service_1 = require(\"../auth/principal.service\");\nvar auth_jwt_service_1 = require(\"../auth/auth-jwt.service\");\nvar LoginService = /** @class */ (function () {\n    function LoginService(languageService, principal, authServerProvider) {\n        this.languageService = languageService;\n        this.principal = principal;\n        this.authServerProvider = authServerProvider;\n    }\n    LoginService.prototype.login = function (credentials, callback) {\n        var _this = this;\n        var cb = callback || function () { };\n        return new Promise(function (resolve, reject) {\n            _this.authServerProvider.login(credentials).subscribe(function (data) {\n                _this.principal.identity(true).then(function (account) {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account !== null) {\n                        _this.languageService.changeLanguage(account.langKey);\n                    }\n                    resolve(data);\n                });\n                return cb();\n            }, function (err) {\n                _this.logout();\n                reject(err);\n                return cb(err);\n            });\n        });\n    };\n    LoginService.prototype.loginWithToken = function (jwt, rememberMe) {\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\n    };\n    LoginService.prototype.logout = function () {\n        this.authServerProvider.logout().subscribe();\n        this.principal.authenticate(null);\n    };\n    LoginService = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiLanguageService !== \"undefined\" && ng_jhipster_1.JhiLanguageService) === \"function\" && _a || Object, typeof (_b = typeof principal_service_1.Principal !== \"undefined\" && principal_service_1.Principal) === \"function\" && _b || Object, typeof (_c = typeof auth_jwt_service_1.AuthServerProvider !== \"undefined\" && auth_jwt_service_1.AuthServerProvider) === \"function\" && _c || Object])\n    ], LoginService);\n    return LoginService;\n    var _a, _b, _c;\n}());\nexports.LoginService = LoginService;\n",{"version":3,"file":"/Users/valeriodiego/Documents/auto/src/main/webapp/app/core/login/login.service.ts","sourceRoot":"","sources":["/Users/valeriodiego/Documents/auto/node_modules/angular-router-loader/src/index.js!/Users/valeriodiego/Documents/auto/node_modules/tslint-loader/index.js!/Users/valeriodiego/Documents/auto/src/main/webapp/app/core/login/login.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,2CAAiD;AAEjD,+DAAsD;AACtD,6DAA8D;AAG9D;IACI,sBACY,eAAmC,EACnC,SAAoB,EACpB,kBAAsC;QAFtC,oBAAe,GAAf,eAAe,CAAoB;QACnC,cAAS,GAAT,SAAS,CAAW;QACpB,uBAAkB,GAAlB,kBAAkB,CAAoB;IAC/C,CAAC;IAEJ,4BAAK,GAAL,UAAM,WAAW,EAAE,QAAS;QAA5B,iBAuBC;QAtBG,IAAM,EAAE,GAAG,QAAQ,IAAI,cAAY,CAAC,CAAC;QAErC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAChD,UAAA,IAAI;gBACA,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;oBACtC,kDAAkD;oBAClD,4DAA4D;oBAC5D,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;wBACnB,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBACzD,CAAC;oBACD,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,EAAE,EAAE,CAAC;YAChB,CAAC,EACD,UAAA,GAAG;gBACC,KAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAc,GAAd,UAAe,GAAG,EAAE,UAAU;QAC1B,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IACnE,CAAC;IAED,6BAAM,GAAN;QACI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAvCQ,YAAY;QADxB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAGF,gCAAkB,oBAAlB,gCAAkB,sDACxB,6BAAS,oBAAT,6BAAS,sDACA,qCAAkB,oBAAlB,qCAAkB;OAJzC,YAAY,CAwCxB;IAAD,mBAAC;;CAAA,AAxCD,IAwCC;AAxCY,oCAAY","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JhiLanguageService } from 'ng-jhipster';\n\nimport { Principal } from '../auth/principal.service';\nimport { AuthServerProvider } from '../auth/auth-jwt.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginService {\n    constructor(\n        private languageService: JhiLanguageService,\n        private principal: Principal,\n        private authServerProvider: AuthServerProvider\n    ) {}\n\n    login(credentials, callback?) {\n        const cb = callback || function() {};\n\n        return new Promise((resolve, reject) => {\n            this.authServerProvider.login(credentials).subscribe(\n                data => {\n                    this.principal.identity(true).then(account => {\n                        // After the login the language will be changed to\n                        // the language selected by the user during his registration\n                        if (account !== null) {\n                            this.languageService.changeLanguage(account.langKey);\n                        }\n                        resolve(data);\n                    });\n                    return cb();\n                },\n                err => {\n                    this.logout();\n                    reject(err);\n                    return cb(err);\n                }\n            );\n        });\n    }\n\n    loginWithToken(jwt, rememberMe) {\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\n    }\n\n    logout() {\n        this.authServerProvider.logout().subscribe();\n        this.principal.authenticate(null);\n    }\n}\n"]}]}