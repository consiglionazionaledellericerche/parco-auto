From af384abcea16b5fadcb10598a5f02594c1dd4906 Mon Sep 17 00:00:00 2001
From: PIERLEONI FABRIZIO <fabrizio.pierleoni@cnr.it>
Date: Wed, 28 Nov 2018 09:41:27 +0100
Subject: [PATCH] login ace

---
 login_ace.patch                                    | 179 ---------------------
 pom.xml                                            |   6 +
 src/main/java/si/cnr/it/ParcoautoApp.java          |   2 +
 .../si/cnr/it/config/SecurityConfiguration.java    |   3 +-
 .../cnr/it/security/JWTAuthenticationManager.java  |  53 ++++++
 src/main/java/si/cnr/it/service/UserService.java   |  15 +-
 src/main/resources/config/application-dev.yml      |   4 +
 7 files changed, 80 insertions(+), 182 deletions(-)
 delete mode 100644 login_ace.patch
 create mode 100644 src/main/java/si/cnr/it/security/JWTAuthenticationManager.java

diff --git a/login_ace.patch b/login_ace.patch
deleted file mode 100644
index 35879593..00000000
--- a/login_ace.patch
+++ /dev/null
@@ -1,179 +0,0 @@
-Index: src/main/java/si/cnr/it/security/JWTAuthenticationManager.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/main/java/si/cnr/it/security/JWTAuthenticationManager.java	(date 1543314841000)
-+++ src/main/java/si/cnr/it/security/JWTAuthenticationManager.java	(date 1543314841000)
-@@ -0,0 +1,53 @@
-+package si.cnr.it.security;
-+
-+import it.cnr.si.service.AceService;
-+import it.cnr.si.service.AuthService;
-+import org.springframework.beans.factory.annotation.Autowired;
-+import org.springframework.security.authentication.AuthenticationManager;
-+import org.springframework.security.authentication.BadCredentialsException;
-+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
-+import org.springframework.security.core.Authentication;
-+import org.springframework.security.core.AuthenticationException;
-+import org.springframework.security.core.GrantedAuthority;
-+import org.springframework.security.core.authority.SimpleGrantedAuthority;
-+import org.springframework.security.core.userdetails.User;
-+import org.springframework.stereotype.Component;
-+
-+import java.util.List;
-+import java.util.stream.Collectors;
-+
-+@Component
-+public class JWTAuthenticationManager implements AuthenticationManager {
-+
-+    @Autowired
-+    private AuthService authService;
-+
-+    @Autowired
-+    private AceService aceService;
-+
-+    @Override
-+    public Authentication authenticate(Authentication authentication) throws AuthenticationException {
-+
-+        String principal = (String) authentication.getPrincipal();
-+        String credentials = (String) authentication.getCredentials();
-+        try {
-+            // login ACE
-+            authService.getToken(principal, credentials);
-+
-+            List<GrantedAuthority> authorities =
-+                aceService.ruoliAttivi(principal).stream()
-+                    .filter(ruolo -> ruolo.getContesti().stream()
-+                        .anyMatch(r -> r.getSigla().equals("contesto-app")))
-+                    .map(a -> new SimpleGrantedAuthority(a.getSigla()))
-+                    .collect(Collectors.toList());
-+
-+            authorities.add(new SimpleGrantedAuthority(AuthoritiesConstants.USER));
-+            User utente = new User(principal, credentials, authorities);
-+
-+            return new UsernamePasswordAuthenticationToken(utente, authentication, authorities);
-+        } catch(Exception e) {
-+            throw new BadCredentialsException("authentication failed for user: " + principal);
-+        }
-+    }
-+
-+}
-Index: src/main/resources/config/application-dev.yml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/main/resources/config/application-dev.yml	(date 1542195272000)
-+++ src/main/resources/config/application-dev.yml	(date 1543315578000)
-@@ -124,3 +124,7 @@
- # ===================================================================
- 
- # application:
-+ace:
-+    url: "http://acebuntudock.si.cnr.it:5555/api"
-+    username: app.scrivaniadigitale
-+    password: bubbazza
-\ No newline at end of file
-Index: src/main/java/si/cnr/it/config/SecurityConfiguration.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/main/java/si/cnr/it/config/SecurityConfiguration.java	(date 1542195272000)
-+++ src/main/java/si/cnr/it/config/SecurityConfiguration.java	(date 1543314877000)
-@@ -61,9 +61,8 @@
-     }
- 
-     @Override
--    @Bean
-     public AuthenticationManager authenticationManagerBean() throws Exception {
--        return super.authenticationManagerBean();
-+        return new JWTAuthenticationManager();
-     }
- 
-     @Bean
-Index: src/main/java/si/cnr/it/service/UserService.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/main/java/si/cnr/it/service/UserService.java	(date 1542195272000)
-+++ src/main/java/si/cnr/it/service/UserService.java	(date 1543314841000)
-@@ -1,5 +1,7 @@
- package si.cnr.it.service;
- 
-+import org.springframework.security.core.GrantedAuthority;
-+import org.springframework.security.core.context.SecurityContextHolder;
- import si.cnr.it.config.Constants;
- import si.cnr.it.domain.Authority;
- import si.cnr.it.domain.User;
-@@ -260,7 +262,18 @@
- 
-     @Transactional(readOnly = true)
-     public Optional<User> getUserWithAuthorities() {
--        return SecurityUtils.getCurrentUserLogin().flatMap(userRepository::findOneWithAuthoritiesByLogin);
-+        User u = new User();
-+        u.setLogin(SecurityUtils.getCurrentUserLogin().get());
-+        u.setAuthorities(SecurityContextHolder.getContext().getAuthentication()
-+                .getAuthorities()
-+                .stream()
-+                .map(auth -> {Authority a = new Authority();
-+                    a.setName(((GrantedAuthority) auth).getAuthority());
-+                    return a;
-+                })
-+                .collect(Collectors.toSet()));
-+
-+        return Optional.of(u);
-     }
- 
-     /**
-Index: pom.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- pom.xml	(date 1542195272000)
-+++ pom.xml	(date 1543314751000)
-@@ -96,6 +96,7 @@
-         <sonar.tests>${project.basedir}/src/test/</sonar.tests>
- 
-         <!-- jhipster-needle-maven-property -->
-+        <ace.version>2.0.2</ace.version>
-     </properties>
- 
-     <dependencyManagement>
-@@ -112,6 +113,11 @@
-     </dependencyManagement>
- 
-     <dependencies>
-+        <dependency>
-+            <groupId>it.cnr.si</groupId>
-+            <artifactId>ace-client</artifactId>
-+            <version>${ace.version}</version>
-+        </dependency>
-         <dependency>
-             <groupId>io.github.jhipster</groupId>
-             <artifactId>jhipster-framework</artifactId>
-Index: src/main/java/si/cnr/it/ParcoautoApp.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- src/main/java/si/cnr/it/ParcoautoApp.java	(date 1542195272000)
-+++ src/main/java/si/cnr/it/ParcoautoApp.java	(date 1543315385000)
-@@ -1,5 +1,6 @@
- package si.cnr.it;
- 
-+import org.springframework.context.annotation.ComponentScan;
- import si.cnr.it.config.ApplicationProperties;
- import si.cnr.it.config.DefaultProfileUtil;
- 
-@@ -21,6 +22,7 @@
- import java.util.Collection;
- 
- @SpringBootApplication
-+@ComponentScan("it.cnr.si")
- @EnableConfigurationProperties({LiquibaseProperties.class, ApplicationProperties.class})
- public class ParcoautoApp {
- 
diff --git a/pom.xml b/pom.xml
index 2c8ab9a3..44970dc3 100644
--- a/pom.xml
+++ b/pom.xml
@@ -96,6 +96,7 @@
         <sonar.tests>${project.basedir}/src/test/</sonar.tests>
 
         <!-- jhipster-needle-maven-property -->
+        <ace.version>2.0.2</ace.version>
     </properties>
 
     <dependencyManagement>
@@ -113,6 +114,11 @@
 
     <dependencies>
         <dependency>
+            <groupId>it.cnr.si</groupId>
+            <artifactId>ace-client</artifactId>
+            <version>${ace.version}</version>
+        </dependency>
+        <dependency>
             <groupId>io.github.jhipster</groupId>
             <artifactId>jhipster-framework</artifactId>
         </dependency>
diff --git a/src/main/java/si/cnr/it/ParcoautoApp.java b/src/main/java/si/cnr/it/ParcoautoApp.java
index 7822b577..4e31b5d6 100644
--- a/src/main/java/si/cnr/it/ParcoautoApp.java
+++ b/src/main/java/si/cnr/it/ParcoautoApp.java
@@ -1,5 +1,6 @@
 package si.cnr.it;
 
+import org.springframework.context.annotation.ComponentScan;
 import si.cnr.it.config.ApplicationProperties;
 import si.cnr.it.config.DefaultProfileUtil;
 
@@ -21,6 +22,7 @@ import java.util.Arrays;
 import java.util.Collection;
 
 @SpringBootApplication
+@ComponentScan("it.cnr.si")
 @EnableConfigurationProperties({LiquibaseProperties.class, ApplicationProperties.class})
 public class ParcoautoApp {
 
diff --git a/src/main/java/si/cnr/it/config/SecurityConfiguration.java b/src/main/java/si/cnr/it/config/SecurityConfiguration.java
index f5ddefa1..789e8173 100644
--- a/src/main/java/si/cnr/it/config/SecurityConfiguration.java
+++ b/src/main/java/si/cnr/it/config/SecurityConfiguration.java
@@ -61,9 +61,8 @@ public class SecurityConfiguration extends WebSecurityConfigurerAdapter {
     }
 
     @Override
-    @Bean
     public AuthenticationManager authenticationManagerBean() throws Exception {
-        return super.authenticationManagerBean();
+        return new JWTAuthenticationManager();
     }
 
     @Bean
diff --git a/src/main/java/si/cnr/it/security/JWTAuthenticationManager.java b/src/main/java/si/cnr/it/security/JWTAuthenticationManager.java
new file mode 100644
index 00000000..a6332517
--- /dev/null
+++ b/src/main/java/si/cnr/it/security/JWTAuthenticationManager.java
@@ -0,0 +1,53 @@
+package si.cnr.it.security;
+
+import it.cnr.si.service.AceService;
+import it.cnr.si.service.AuthService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.security.authentication.AuthenticationManager;
+import org.springframework.security.authentication.BadCredentialsException;
+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.core.AuthenticationException;
+import org.springframework.security.core.GrantedAuthority;
+import org.springframework.security.core.authority.SimpleGrantedAuthority;
+import org.springframework.security.core.userdetails.User;
+import org.springframework.stereotype.Component;
+
+import java.util.List;
+import java.util.stream.Collectors;
+
+@Component
+public class JWTAuthenticationManager implements AuthenticationManager {
+
+    @Autowired
+    private AuthService authService;
+
+    @Autowired
+    private AceService aceService;
+
+    @Override
+    public Authentication authenticate(Authentication authentication) throws AuthenticationException {
+
+        String principal = (String) authentication.getPrincipal();
+        String credentials = (String) authentication.getCredentials();
+        try {
+            // login ACE
+            authService.getToken(principal, credentials);
+
+            List<GrantedAuthority> authorities =
+                aceService.ruoliAttivi(principal).stream()
+                    .filter(ruolo -> ruolo.getContesti().stream()
+                        .anyMatch(r -> r.getSigla().equals("contesto-app")))
+                    .map(a -> new SimpleGrantedAuthority(a.getSigla()))
+                    .collect(Collectors.toList());
+
+            authorities.add(new SimpleGrantedAuthority(AuthoritiesConstants.USER));
+            User utente = new User(principal, credentials, authorities);
+
+            return new UsernamePasswordAuthenticationToken(utente, authentication, authorities);
+        } catch(Exception e) {
+            throw new BadCredentialsException("authentication failed for user: " + principal);
+        }
+    }
+
+}
diff --git a/src/main/java/si/cnr/it/service/UserService.java b/src/main/java/si/cnr/it/service/UserService.java
index e27e5ceb..ff236c8f 100644
--- a/src/main/java/si/cnr/it/service/UserService.java
+++ b/src/main/java/si/cnr/it/service/UserService.java
@@ -1,5 +1,7 @@
 package si.cnr.it.service;
 
+import org.springframework.security.core.GrantedAuthority;
+import org.springframework.security.core.context.SecurityContextHolder;
 import si.cnr.it.config.Constants;
 import si.cnr.it.domain.Authority;
 import si.cnr.it.domain.User;
@@ -260,7 +262,18 @@ public class UserService {
 
     @Transactional(readOnly = true)
     public Optional<User> getUserWithAuthorities() {
-        return SecurityUtils.getCurrentUserLogin().flatMap(userRepository::findOneWithAuthoritiesByLogin);
+        User u = new User();
+        u.setLogin(SecurityUtils.getCurrentUserLogin().get());
+        u.setAuthorities(SecurityContextHolder.getContext().getAuthentication()
+                .getAuthorities()
+                .stream()
+                .map(auth -> {Authority a = new Authority();
+                    a.setName(((GrantedAuthority) auth).getAuthority());
+                    return a;
+                })
+                .collect(Collectors.toSet()));
+
+        return Optional.of(u);
     }
 
     /**
diff --git a/src/main/resources/config/application-dev.yml b/src/main/resources/config/application-dev.yml
index 62d41597..825f6bd5 100644
--- a/src/main/resources/config/application-dev.yml
+++ b/src/main/resources/config/application-dev.yml
@@ -124,3 +124,7 @@ jhipster:
 # ===================================================================
 
 # application:
+ace:
+    url: "http://acebuntudock.si.cnr.it:5555/api"
+    username: app.scrivaniadigitale
+    password: bubbazza
\ No newline at end of file
-- 
2.11.0

